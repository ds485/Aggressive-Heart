# Python stubs generated by omniidl from ods52.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "org"
#
__name__ = "org"
_0_org = omniORB.openModule("org", r"ods52.idl")
_0_org__POA = omniORB.openModule("org__POA", r"ods52.idl")


#
# Start of module "org.asam"
#
__name__ = "org.asam"
_0_org.asam = omniORB.openModule("org.asam", r"ods52.idl")
_0_org__POA.asam = omniORB.openModule("org__POA.asam", r"ods52.idl")


#
# Start of module "org.asam.ods"
#
__name__ = "org.asam.ods"
_0_org.asam.ods = omniORB.openModule("org.asam.ods", r"ods52.idl")
_0_org__POA.asam.ods = omniORB.openModule("org__POA.asam.ods", r"ods52.idl")


# forward interface AoFactory;
_0_org.asam.ods._d_AoFactory = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/AoFactory:1.0", "AoFactory")
omniORB.typeMapping["IDL:org/asam/ods/AoFactory:1.0"] = _0_org.asam.ods._d_AoFactory

# forward interface AoSession;
_0_org.asam.ods._d_AoSession = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/AoSession:1.0", "AoSession")
omniORB.typeMapping["IDL:org/asam/ods/AoSession:1.0"] = _0_org.asam.ods._d_AoSession

# forward interface ApplicationAttribute;
_0_org.asam.ods._d_ApplicationAttribute = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/ApplicationAttribute:1.0", "ApplicationAttribute")
omniORB.typeMapping["IDL:org/asam/ods/ApplicationAttribute:1.0"] = _0_org.asam.ods._d_ApplicationAttribute

# forward interface ApplicationElement;
_0_org.asam.ods._d_ApplicationElement = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/ApplicationElement:1.0", "ApplicationElement")
omniORB.typeMapping["IDL:org/asam/ods/ApplicationElement:1.0"] = _0_org.asam.ods._d_ApplicationElement

# forward interface ApplicationRelation;
_0_org.asam.ods._d_ApplicationRelation = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/ApplicationRelation:1.0", "ApplicationRelation")
omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelation:1.0"] = _0_org.asam.ods._d_ApplicationRelation

# forward interface ApplicationStructure;
_0_org.asam.ods._d_ApplicationStructure = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/ApplicationStructure:1.0", "ApplicationStructure")
omniORB.typeMapping["IDL:org/asam/ods/ApplicationStructure:1.0"] = _0_org.asam.ods._d_ApplicationStructure

# forward interface BaseAttribute;
_0_org.asam.ods._d_BaseAttribute = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/BaseAttribute:1.0", "BaseAttribute")
omniORB.typeMapping["IDL:org/asam/ods/BaseAttribute:1.0"] = _0_org.asam.ods._d_BaseAttribute

# forward interface BaseElement;
_0_org.asam.ods._d_BaseElement = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/BaseElement:1.0", "BaseElement")
omniORB.typeMapping["IDL:org/asam/ods/BaseElement:1.0"] = _0_org.asam.ods._d_BaseElement

# forward interface BaseRelation;
_0_org.asam.ods._d_BaseRelation = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/BaseRelation:1.0", "BaseRelation")
omniORB.typeMapping["IDL:org/asam/ods/BaseRelation:1.0"] = _0_org.asam.ods._d_BaseRelation

# forward interface BaseStructure;
_0_org.asam.ods._d_BaseStructure = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/BaseStructure:1.0", "BaseStructure")
omniORB.typeMapping["IDL:org/asam/ods/BaseStructure:1.0"] = _0_org.asam.ods._d_BaseStructure

# forward interface Blob;
_0_org.asam.ods._d_Blob = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/Blob:1.0", "Blob")
omniORB.typeMapping["IDL:org/asam/ods/Blob:1.0"] = _0_org.asam.ods._d_Blob

# forward interface Column;
_0_org.asam.ods._d_Column = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/Column:1.0", "Column")
omniORB.typeMapping["IDL:org/asam/ods/Column:1.0"] = _0_org.asam.ods._d_Column

# forward interface InstanceElement;
_0_org.asam.ods._d_InstanceElement = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/InstanceElement:1.0", "InstanceElement")
omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"] = _0_org.asam.ods._d_InstanceElement

# forward interface InstanceElementIterator;
_0_org.asam.ods._d_InstanceElementIterator = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/InstanceElementIterator:1.0", "InstanceElementIterator")
omniORB.typeMapping["IDL:org/asam/ods/InstanceElementIterator:1.0"] = _0_org.asam.ods._d_InstanceElementIterator

# forward interface Measurement;
_0_org.asam.ods._d_Measurement = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/Measurement:1.0", "Measurement")
omniORB.typeMapping["IDL:org/asam/ods/Measurement:1.0"] = _0_org.asam.ods._d_Measurement

# forward interface NameIterator;
_0_org.asam.ods._d_NameIterator = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/NameIterator:1.0", "NameIterator")
omniORB.typeMapping["IDL:org/asam/ods/NameIterator:1.0"] = _0_org.asam.ods._d_NameIterator

# forward interface NameValueIterator;
_0_org.asam.ods._d_NameValueIterator = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/NameValueIterator:1.0", "NameValueIterator")
omniORB.typeMapping["IDL:org/asam/ods/NameValueIterator:1.0"] = _0_org.asam.ods._d_NameValueIterator

# forward interface NameValueUnitIterator;
_0_org.asam.ods._d_NameValueUnitIterator = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/NameValueUnitIterator:1.0", "NameValueUnitIterator")
omniORB.typeMapping["IDL:org/asam/ods/NameValueUnitIterator:1.0"] = _0_org.asam.ods._d_NameValueUnitIterator

# forward interface SMatLink;
_0_org.asam.ods._d_SMatLink = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/SMatLink:1.0", "SMatLink")
omniORB.typeMapping["IDL:org/asam/ods/SMatLink:1.0"] = _0_org.asam.ods._d_SMatLink

# forward interface SubMatrix;
_0_org.asam.ods._d_SubMatrix = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/SubMatrix:1.0", "SubMatrix")
omniORB.typeMapping["IDL:org/asam/ods/SubMatrix:1.0"] = _0_org.asam.ods._d_SubMatrix

# forward interface ValueMatrix;
_0_org.asam.ods._d_ValueMatrix = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/ValueMatrix:1.0", "ValueMatrix")
omniORB.typeMapping["IDL:org/asam/ods/ValueMatrix:1.0"] = _0_org.asam.ods._d_ValueMatrix

# forward interface NameValueUnitIdIterator;
_0_org.asam.ods._d_NameValueUnitIdIterator = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/NameValueUnitIdIterator:1.0", "NameValueUnitIdIterator")
omniORB.typeMapping["IDL:org/asam/ods/NameValueUnitIdIterator:1.0"] = _0_org.asam.ods._d_NameValueUnitIdIterator

# forward interface ApplElemAccess;
_0_org.asam.ods._d_ApplElemAccess = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/ApplElemAccess:1.0", "ApplElemAccess")
omniORB.typeMapping["IDL:org/asam/ods/ApplElemAccess:1.0"] = _0_org.asam.ods._d_ApplElemAccess

# forward interface QueryEvaluator;
_0_org.asam.ods._d_QueryEvaluator = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/QueryEvaluator:1.0", "QueryEvaluator")
omniORB.typeMapping["IDL:org/asam/ods/QueryEvaluator:1.0"] = _0_org.asam.ods._d_QueryEvaluator

# forward interface Query;
_0_org.asam.ods._d_Query = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/Query:1.0", "Query")
omniORB.typeMapping["IDL:org/asam/ods/Query:1.0"] = _0_org.asam.ods._d_Query

# forward interface NameValueUnitSequenceIterator;
_0_org.asam.ods._d_NameValueUnitSequenceIterator = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/NameValueUnitSequenceIterator:1.0", "NameValueUnitSequenceIterator")
omniORB.typeMapping["IDL:org/asam/ods/NameValueUnitSequenceIterator:1.0"] = _0_org.asam.ods._d_NameValueUnitSequenceIterator

# forward interface EnumerationDefinition;
_0_org.asam.ods._d_EnumerationDefinition = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/EnumerationDefinition:1.0", "EnumerationDefinition")
omniORB.typeMapping["IDL:org/asam/ods/EnumerationDefinition:1.0"] = _0_org.asam.ods._d_EnumerationDefinition

# forward interface ElemResultSetExtSeqIterator;
_0_org.asam.ods._d_ElemResultSetExtSeqIterator = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/ElemResultSetExtSeqIterator:1.0", "ElemResultSetExtSeqIterator")
omniORB.typeMapping["IDL:org/asam/ods/ElemResultSetExtSeqIterator:1.0"] = _0_org.asam.ods._d_ElemResultSetExtSeqIterator

# enum SeverityFlag
_0_org.asam.ods.SUCCESS = omniORB.EnumItem("SUCCESS", 0)
_0_org.asam.ods.INFORMATION = omniORB.EnumItem("INFORMATION", 1)
_0_org.asam.ods.WARNING = omniORB.EnumItem("WARNING", 2)
_0_org.asam.ods.ERROR = omniORB.EnumItem("ERROR", 3)
_0_org.asam.ods.SeverityFlag = omniORB.Enum("IDL:org/asam/ods/SeverityFlag:1.0", (_0_org.asam.ods.SUCCESS, _0_org.asam.ods.INFORMATION, _0_org.asam.ods.WARNING, _0_org.asam.ods.ERROR,))

_0_org.asam.ods._d_SeverityFlag  = (omniORB.tcInternal.tv_enum, _0_org.asam.ods.SeverityFlag._NP_RepositoryId, "SeverityFlag", _0_org.asam.ods.SeverityFlag._items)
_0_org.asam.ods._tc_SeverityFlag = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_SeverityFlag)
omniORB.registerType(_0_org.asam.ods.SeverityFlag._NP_RepositoryId, _0_org.asam.ods._d_SeverityFlag, _0_org.asam.ods._tc_SeverityFlag)

# enum RelationType
_0_org.asam.ods.FATHER_CHILD = omniORB.EnumItem("FATHER_CHILD", 0)
_0_org.asam.ods.INFO = omniORB.EnumItem("INFO", 1)
_0_org.asam.ods.INHERITANCE = omniORB.EnumItem("INHERITANCE", 2)
_0_org.asam.ods.RelationType = omniORB.Enum("IDL:org/asam/ods/RelationType:1.0", (_0_org.asam.ods.FATHER_CHILD, _0_org.asam.ods.INFO, _0_org.asam.ods.INHERITANCE,))

_0_org.asam.ods._d_RelationType  = (omniORB.tcInternal.tv_enum, _0_org.asam.ods.RelationType._NP_RepositoryId, "RelationType", _0_org.asam.ods.RelationType._items)
_0_org.asam.ods._tc_RelationType = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_RelationType)
omniORB.registerType(_0_org.asam.ods.RelationType._NP_RepositoryId, _0_org.asam.ods._d_RelationType, _0_org.asam.ods._tc_RelationType)

# enum Relationship
_0_org.asam.ods.FATHER = omniORB.EnumItem("FATHER", 0)
_0_org.asam.ods.CHILD = omniORB.EnumItem("CHILD", 1)
_0_org.asam.ods.INFO_TO = omniORB.EnumItem("INFO_TO", 2)
_0_org.asam.ods.INFO_FROM = omniORB.EnumItem("INFO_FROM", 3)
_0_org.asam.ods.INFO_REL = omniORB.EnumItem("INFO_REL", 4)
_0_org.asam.ods.SUPERTYPE = omniORB.EnumItem("SUPERTYPE", 5)
_0_org.asam.ods.SUBTYPE = omniORB.EnumItem("SUBTYPE", 6)
_0_org.asam.ods.ALL_REL = omniORB.EnumItem("ALL_REL", 7)
_0_org.asam.ods.Relationship = omniORB.Enum("IDL:org/asam/ods/Relationship:1.0", (_0_org.asam.ods.FATHER, _0_org.asam.ods.CHILD, _0_org.asam.ods.INFO_TO, _0_org.asam.ods.INFO_FROM, _0_org.asam.ods.INFO_REL, _0_org.asam.ods.SUPERTYPE, _0_org.asam.ods.SUBTYPE, _0_org.asam.ods.ALL_REL,))

_0_org.asam.ods._d_Relationship  = (omniORB.tcInternal.tv_enum, _0_org.asam.ods.Relationship._NP_RepositoryId, "Relationship", _0_org.asam.ods.Relationship._items)
_0_org.asam.ods._tc_Relationship = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_Relationship)
omniORB.registerType(_0_org.asam.ods.Relationship._NP_RepositoryId, _0_org.asam.ods._d_Relationship, _0_org.asam.ods._tc_Relationship)

# enum DataType
_0_org.asam.ods.DT_UNKNOWN = omniORB.EnumItem("DT_UNKNOWN", 0)
_0_org.asam.ods.DT_STRING = omniORB.EnumItem("DT_STRING", 1)
_0_org.asam.ods.DT_SHORT = omniORB.EnumItem("DT_SHORT", 2)
_0_org.asam.ods.DT_FLOAT = omniORB.EnumItem("DT_FLOAT", 3)
_0_org.asam.ods.DT_BOOLEAN = omniORB.EnumItem("DT_BOOLEAN", 4)
_0_org.asam.ods.DT_BYTE = omniORB.EnumItem("DT_BYTE", 5)
_0_org.asam.ods.DT_LONG = omniORB.EnumItem("DT_LONG", 6)
_0_org.asam.ods.DT_DOUBLE = omniORB.EnumItem("DT_DOUBLE", 7)
_0_org.asam.ods.DT_LONGLONG = omniORB.EnumItem("DT_LONGLONG", 8)
_0_org.asam.ods.DT_ID = omniORB.EnumItem("DT_ID", 9)
_0_org.asam.ods.DT_DATE = omniORB.EnumItem("DT_DATE", 10)
_0_org.asam.ods.DT_BYTESTR = omniORB.EnumItem("DT_BYTESTR", 11)
_0_org.asam.ods.DT_BLOB = omniORB.EnumItem("DT_BLOB", 12)
_0_org.asam.ods.DT_COMPLEX = omniORB.EnumItem("DT_COMPLEX", 13)
_0_org.asam.ods.DT_DCOMPLEX = omniORB.EnumItem("DT_DCOMPLEX", 14)
_0_org.asam.ods.DS_STRING = omniORB.EnumItem("DS_STRING", 15)
_0_org.asam.ods.DS_SHORT = omniORB.EnumItem("DS_SHORT", 16)
_0_org.asam.ods.DS_FLOAT = omniORB.EnumItem("DS_FLOAT", 17)
_0_org.asam.ods.DS_BOOLEAN = omniORB.EnumItem("DS_BOOLEAN", 18)
_0_org.asam.ods.DS_BYTE = omniORB.EnumItem("DS_BYTE", 19)
_0_org.asam.ods.DS_LONG = omniORB.EnumItem("DS_LONG", 20)
_0_org.asam.ods.DS_DOUBLE = omniORB.EnumItem("DS_DOUBLE", 21)
_0_org.asam.ods.DS_LONGLONG = omniORB.EnumItem("DS_LONGLONG", 22)
_0_org.asam.ods.DS_COMPLEX = omniORB.EnumItem("DS_COMPLEX", 23)
_0_org.asam.ods.DS_DCOMPLEX = omniORB.EnumItem("DS_DCOMPLEX", 24)
_0_org.asam.ods.DS_ID = omniORB.EnumItem("DS_ID", 25)
_0_org.asam.ods.DS_DATE = omniORB.EnumItem("DS_DATE", 26)
_0_org.asam.ods.DS_BYTESTR = omniORB.EnumItem("DS_BYTESTR", 27)
_0_org.asam.ods.DT_EXTERNALREFERENCE = omniORB.EnumItem("DT_EXTERNALREFERENCE", 28)
_0_org.asam.ods.DS_EXTERNALREFERENCE = omniORB.EnumItem("DS_EXTERNALREFERENCE", 29)
_0_org.asam.ods.DT_ENUM = omniORB.EnumItem("DT_ENUM", 30)
_0_org.asam.ods.DS_ENUM = omniORB.EnumItem("DS_ENUM", 31)
_0_org.asam.ods.DataType = omniORB.Enum("IDL:org/asam/ods/DataType:1.0", (_0_org.asam.ods.DT_UNKNOWN, _0_org.asam.ods.DT_STRING, _0_org.asam.ods.DT_SHORT, _0_org.asam.ods.DT_FLOAT, _0_org.asam.ods.DT_BOOLEAN, _0_org.asam.ods.DT_BYTE, _0_org.asam.ods.DT_LONG, _0_org.asam.ods.DT_DOUBLE, _0_org.asam.ods.DT_LONGLONG, _0_org.asam.ods.DT_ID, _0_org.asam.ods.DT_DATE, _0_org.asam.ods.DT_BYTESTR, _0_org.asam.ods.DT_BLOB, _0_org.asam.ods.DT_COMPLEX, _0_org.asam.ods.DT_DCOMPLEX, _0_org.asam.ods.DS_STRING, _0_org.asam.ods.DS_SHORT, _0_org.asam.ods.DS_FLOAT, _0_org.asam.ods.DS_BOOLEAN, _0_org.asam.ods.DS_BYTE, _0_org.asam.ods.DS_LONG, _0_org.asam.ods.DS_DOUBLE, _0_org.asam.ods.DS_LONGLONG, _0_org.asam.ods.DS_COMPLEX, _0_org.asam.ods.DS_DCOMPLEX, _0_org.asam.ods.DS_ID, _0_org.asam.ods.DS_DATE, _0_org.asam.ods.DS_BYTESTR, _0_org.asam.ods.DT_EXTERNALREFERENCE, _0_org.asam.ods.DS_EXTERNALREFERENCE, _0_org.asam.ods.DT_ENUM, _0_org.asam.ods.DS_ENUM,))

_0_org.asam.ods._d_DataType  = (omniORB.tcInternal.tv_enum, _0_org.asam.ods.DataType._NP_RepositoryId, "DataType", _0_org.asam.ods.DataType._items)
_0_org.asam.ods._tc_DataType = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_DataType)
omniORB.registerType(_0_org.asam.ods.DataType._NP_RepositoryId, _0_org.asam.ods._d_DataType, _0_org.asam.ods._tc_DataType)

# enum BuildUpFunction
_0_org.asam.ods.BUP_JOIN = omniORB.EnumItem("BUP_JOIN", 0)
_0_org.asam.ods.BUP_MERGE = omniORB.EnumItem("BUP_MERGE", 1)
_0_org.asam.ods.BUP_SORT = omniORB.EnumItem("BUP_SORT", 2)
_0_org.asam.ods.BuildUpFunction = omniORB.Enum("IDL:org/asam/ods/BuildUpFunction:1.0", (_0_org.asam.ods.BUP_JOIN, _0_org.asam.ods.BUP_MERGE, _0_org.asam.ods.BUP_SORT,))

_0_org.asam.ods._d_BuildUpFunction  = (omniORB.tcInternal.tv_enum, _0_org.asam.ods.BuildUpFunction._NP_RepositoryId, "BuildUpFunction", _0_org.asam.ods.BuildUpFunction._items)
_0_org.asam.ods._tc_BuildUpFunction = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_BuildUpFunction)
omniORB.registerType(_0_org.asam.ods.BuildUpFunction._NP_RepositoryId, _0_org.asam.ods._d_BuildUpFunction, _0_org.asam.ods._tc_BuildUpFunction)

# enum AttrType
_0_org.asam.ods.APPLATTR_ONLY = omniORB.EnumItem("APPLATTR_ONLY", 0)
_0_org.asam.ods.INSTATTR_ONLY = omniORB.EnumItem("INSTATTR_ONLY", 1)
_0_org.asam.ods.ALL = omniORB.EnumItem("ALL", 2)
_0_org.asam.ods.AttrType = omniORB.Enum("IDL:org/asam/ods/AttrType:1.0", (_0_org.asam.ods.APPLATTR_ONLY, _0_org.asam.ods.INSTATTR_ONLY, _0_org.asam.ods.ALL,))

_0_org.asam.ods._d_AttrType  = (omniORB.tcInternal.tv_enum, _0_org.asam.ods.AttrType._NP_RepositoryId, "AttrType", _0_org.asam.ods.AttrType._items)
_0_org.asam.ods._tc_AttrType = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_AttrType)
omniORB.registerType(_0_org.asam.ods.AttrType._NP_RepositoryId, _0_org.asam.ods._d_AttrType, _0_org.asam.ods._tc_AttrType)

# enum SetType
_0_org.asam.ods.APPEND = omniORB.EnumItem("APPEND", 0)
_0_org.asam.ods.INSERT = omniORB.EnumItem("INSERT", 1)
_0_org.asam.ods.UPDATE = omniORB.EnumItem("UPDATE", 2)
_0_org.asam.ods.REMOVE = omniORB.EnumItem("REMOVE", 3)
_0_org.asam.ods.SetType = omniORB.Enum("IDL:org/asam/ods/SetType:1.0", (_0_org.asam.ods.APPEND, _0_org.asam.ods.INSERT, _0_org.asam.ods.UPDATE, _0_org.asam.ods.REMOVE,))

_0_org.asam.ods._d_SetType  = (omniORB.tcInternal.tv_enum, _0_org.asam.ods.SetType._NP_RepositoryId, "SetType", _0_org.asam.ods.SetType._items)
_0_org.asam.ods._tc_SetType = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_SetType)
omniORB.registerType(_0_org.asam.ods.SetType._NP_RepositoryId, _0_org.asam.ods._d_SetType, _0_org.asam.ods._tc_SetType)

# enum ErrorCode
_0_org.asam.ods.AO_UNKNOWN_ERROR = omniORB.EnumItem("AO_UNKNOWN_ERROR", 0)
_0_org.asam.ods.AO_ACCESS_DENIED = omniORB.EnumItem("AO_ACCESS_DENIED", 1)
_0_org.asam.ods.AO_BAD_OPERATION = omniORB.EnumItem("AO_BAD_OPERATION", 2)
_0_org.asam.ods.AO_BAD_PARAMETER = omniORB.EnumItem("AO_BAD_PARAMETER", 3)
_0_org.asam.ods.AO_CONNECT_FAILED = omniORB.EnumItem("AO_CONNECT_FAILED", 4)
_0_org.asam.ods.AO_CONNECT_REFUSED = omniORB.EnumItem("AO_CONNECT_REFUSED", 5)
_0_org.asam.ods.AO_CONNECTION_LOST = omniORB.EnumItem("AO_CONNECTION_LOST", 6)
_0_org.asam.ods.AO_DUPLICATE_BASE_ATTRIBUTE = omniORB.EnumItem("AO_DUPLICATE_BASE_ATTRIBUTE", 7)
_0_org.asam.ods.AO_DUPLICATE_NAME = omniORB.EnumItem("AO_DUPLICATE_NAME", 8)
_0_org.asam.ods.AO_DUPLICATE_VALUE = omniORB.EnumItem("AO_DUPLICATE_VALUE", 9)
_0_org.asam.ods.AO_HAS_INSTANCES = omniORB.EnumItem("AO_HAS_INSTANCES", 10)
_0_org.asam.ods.AO_HAS_REFERENCES = omniORB.EnumItem("AO_HAS_REFERENCES", 11)
_0_org.asam.ods.AO_IMPLEMENTATION_PROBLEM = omniORB.EnumItem("AO_IMPLEMENTATION_PROBLEM", 12)
_0_org.asam.ods.AO_INCOMPATIBLE_UNITS = omniORB.EnumItem("AO_INCOMPATIBLE_UNITS", 13)
_0_org.asam.ods.AO_INVALID_ASAM_PATH = omniORB.EnumItem("AO_INVALID_ASAM_PATH", 14)
_0_org.asam.ods.AO_INVALID_ATTRIBUTE_TYPE = omniORB.EnumItem("AO_INVALID_ATTRIBUTE_TYPE", 15)
_0_org.asam.ods.AO_INVALID_BASE_ELEMENT = omniORB.EnumItem("AO_INVALID_BASE_ELEMENT", 16)
_0_org.asam.ods.AO_INVALID_BASETYPE = omniORB.EnumItem("AO_INVALID_BASETYPE", 17)
_0_org.asam.ods.AO_INVALID_BUILDUP_FUNCTION = omniORB.EnumItem("AO_INVALID_BUILDUP_FUNCTION", 18)
_0_org.asam.ods.AO_INVALID_COLUMN = omniORB.EnumItem("AO_INVALID_COLUMN", 19)
_0_org.asam.ods.AO_INVALID_COUNT = omniORB.EnumItem("AO_INVALID_COUNT", 20)
_0_org.asam.ods.AO_INVALID_DATATYPE = omniORB.EnumItem("AO_INVALID_DATATYPE", 21)
_0_org.asam.ods.AO_INVALID_ELEMENT = omniORB.EnumItem("AO_INVALID_ELEMENT", 22)
_0_org.asam.ods.AO_INVALID_LENGTH = omniORB.EnumItem("AO_INVALID_LENGTH", 23)
_0_org.asam.ods.AO_INVALID_ORDINALNUMBER = omniORB.EnumItem("AO_INVALID_ORDINALNUMBER", 24)
_0_org.asam.ods.AO_INVALID_RELATION = omniORB.EnumItem("AO_INVALID_RELATION", 25)
_0_org.asam.ods.AO_INVALID_RELATION_RANGE = omniORB.EnumItem("AO_INVALID_RELATION_RANGE", 26)
_0_org.asam.ods.AO_INVALID_RELATION_TYPE = omniORB.EnumItem("AO_INVALID_RELATION_TYPE", 27)
_0_org.asam.ods.AO_INVALID_RELATIONSHIP = omniORB.EnumItem("AO_INVALID_RELATIONSHIP", 28)
_0_org.asam.ods.AO_INVALID_SET_TYPE = omniORB.EnumItem("AO_INVALID_SET_TYPE", 29)
_0_org.asam.ods.AO_INVALID_SMATLINK = omniORB.EnumItem("AO_INVALID_SMATLINK", 30)
_0_org.asam.ods.AO_INVALID_SUBMATRIX = omniORB.EnumItem("AO_INVALID_SUBMATRIX", 31)
_0_org.asam.ods.AO_IS_BASE_ATTRIBUTE = omniORB.EnumItem("AO_IS_BASE_ATTRIBUTE", 32)
_0_org.asam.ods.AO_IS_BASE_RELATION = omniORB.EnumItem("AO_IS_BASE_RELATION", 33)
_0_org.asam.ods.AO_IS_MEASUREMENT_MATRIX = omniORB.EnumItem("AO_IS_MEASUREMENT_MATRIX", 34)
_0_org.asam.ods.AO_MATH_ERROR = omniORB.EnumItem("AO_MATH_ERROR", 35)
_0_org.asam.ods.AO_MISSING_APPLICATION_ELEMENT = omniORB.EnumItem("AO_MISSING_APPLICATION_ELEMENT", 36)
_0_org.asam.ods.AO_MISSING_ATTRIBUTE = omniORB.EnumItem("AO_MISSING_ATTRIBUTE", 37)
_0_org.asam.ods.AO_MISSING_RELATION = omniORB.EnumItem("AO_MISSING_RELATION", 38)
_0_org.asam.ods.AO_MISSING_VALUE = omniORB.EnumItem("AO_MISSING_VALUE", 39)
_0_org.asam.ods.AO_NO_MEMORY = omniORB.EnumItem("AO_NO_MEMORY", 40)
_0_org.asam.ods.AO_NO_PATH_TO_ELEMENT = omniORB.EnumItem("AO_NO_PATH_TO_ELEMENT", 41)
_0_org.asam.ods.AO_NOT_FOUND = omniORB.EnumItem("AO_NOT_FOUND", 42)
_0_org.asam.ods.AO_NOT_IMPLEMENTED = omniORB.EnumItem("AO_NOT_IMPLEMENTED", 43)
_0_org.asam.ods.AO_NOT_UNIQUE = omniORB.EnumItem("AO_NOT_UNIQUE", 44)
_0_org.asam.ods.AO_OPEN_MODE_NOT_SUPPORTED = omniORB.EnumItem("AO_OPEN_MODE_NOT_SUPPORTED", 45)
_0_org.asam.ods.AO_SESSION_LIMIT_REACHED = omniORB.EnumItem("AO_SESSION_LIMIT_REACHED", 46)
_0_org.asam.ods.AO_SESSION_NOT_ACTIVE = omniORB.EnumItem("AO_SESSION_NOT_ACTIVE", 47)
_0_org.asam.ods.AO_TRANSACTION_ALREADY_ACTIVE = omniORB.EnumItem("AO_TRANSACTION_ALREADY_ACTIVE", 48)
_0_org.asam.ods.AO_TRANSACTION_NOT_ACTIVE = omniORB.EnumItem("AO_TRANSACTION_NOT_ACTIVE", 49)
_0_org.asam.ods.AO_HAS_BASE_RELATION = omniORB.EnumItem("AO_HAS_BASE_RELATION", 50)
_0_org.asam.ods.AO_HAS_BASE_ATTRIBUTE = omniORB.EnumItem("AO_HAS_BASE_ATTRIBUTE", 51)
_0_org.asam.ods.AO_UNKNOWN_UNIT = omniORB.EnumItem("AO_UNKNOWN_UNIT", 52)
_0_org.asam.ods.AO_NO_SCALING_COLUMN = omniORB.EnumItem("AO_NO_SCALING_COLUMN", 53)
_0_org.asam.ods.AO_QUERY_TYPE_INVALID = omniORB.EnumItem("AO_QUERY_TYPE_INVALID", 54)
_0_org.asam.ods.AO_QUERY_INVALID = omniORB.EnumItem("AO_QUERY_INVALID", 55)
_0_org.asam.ods.AO_QUERY_PROCESSING_ERROR = omniORB.EnumItem("AO_QUERY_PROCESSING_ERROR", 56)
_0_org.asam.ods.AO_QUERY_TIMEOUT_EXCEEDED = omniORB.EnumItem("AO_QUERY_TIMEOUT_EXCEEDED", 57)
_0_org.asam.ods.AO_QUERY_INCOMPLETE = omniORB.EnumItem("AO_QUERY_INCOMPLETE", 58)
_0_org.asam.ods.AO_QUERY_INVALID_RESULTTYPE = omniORB.EnumItem("AO_QUERY_INVALID_RESULTTYPE", 59)
_0_org.asam.ods.AO_INVALID_VALUEMATRIX_STRUCTURE = omniORB.EnumItem("AO_INVALID_VALUEMATRIX_STRUCTURE", 60)
_0_org.asam.ods.ErrorCode = omniORB.Enum("IDL:org/asam/ods/ErrorCode:1.0", (_0_org.asam.ods.AO_UNKNOWN_ERROR, _0_org.asam.ods.AO_ACCESS_DENIED, _0_org.asam.ods.AO_BAD_OPERATION, _0_org.asam.ods.AO_BAD_PARAMETER, _0_org.asam.ods.AO_CONNECT_FAILED, _0_org.asam.ods.AO_CONNECT_REFUSED, _0_org.asam.ods.AO_CONNECTION_LOST, _0_org.asam.ods.AO_DUPLICATE_BASE_ATTRIBUTE, _0_org.asam.ods.AO_DUPLICATE_NAME, _0_org.asam.ods.AO_DUPLICATE_VALUE, _0_org.asam.ods.AO_HAS_INSTANCES, _0_org.asam.ods.AO_HAS_REFERENCES, _0_org.asam.ods.AO_IMPLEMENTATION_PROBLEM, _0_org.asam.ods.AO_INCOMPATIBLE_UNITS, _0_org.asam.ods.AO_INVALID_ASAM_PATH, _0_org.asam.ods.AO_INVALID_ATTRIBUTE_TYPE, _0_org.asam.ods.AO_INVALID_BASE_ELEMENT, _0_org.asam.ods.AO_INVALID_BASETYPE, _0_org.asam.ods.AO_INVALID_BUILDUP_FUNCTION, _0_org.asam.ods.AO_INVALID_COLUMN, _0_org.asam.ods.AO_INVALID_COUNT, _0_org.asam.ods.AO_INVALID_DATATYPE, _0_org.asam.ods.AO_INVALID_ELEMENT, _0_org.asam.ods.AO_INVALID_LENGTH, _0_org.asam.ods.AO_INVALID_ORDINALNUMBER, _0_org.asam.ods.AO_INVALID_RELATION, _0_org.asam.ods.AO_INVALID_RELATION_RANGE, _0_org.asam.ods.AO_INVALID_RELATION_TYPE, _0_org.asam.ods.AO_INVALID_RELATIONSHIP, _0_org.asam.ods.AO_INVALID_SET_TYPE, _0_org.asam.ods.AO_INVALID_SMATLINK, _0_org.asam.ods.AO_INVALID_SUBMATRIX, _0_org.asam.ods.AO_IS_BASE_ATTRIBUTE, _0_org.asam.ods.AO_IS_BASE_RELATION, _0_org.asam.ods.AO_IS_MEASUREMENT_MATRIX, _0_org.asam.ods.AO_MATH_ERROR, _0_org.asam.ods.AO_MISSING_APPLICATION_ELEMENT, _0_org.asam.ods.AO_MISSING_ATTRIBUTE, _0_org.asam.ods.AO_MISSING_RELATION, _0_org.asam.ods.AO_MISSING_VALUE, _0_org.asam.ods.AO_NO_MEMORY, _0_org.asam.ods.AO_NO_PATH_TO_ELEMENT, _0_org.asam.ods.AO_NOT_FOUND, _0_org.asam.ods.AO_NOT_IMPLEMENTED, _0_org.asam.ods.AO_NOT_UNIQUE, _0_org.asam.ods.AO_OPEN_MODE_NOT_SUPPORTED, _0_org.asam.ods.AO_SESSION_LIMIT_REACHED, _0_org.asam.ods.AO_SESSION_NOT_ACTIVE, _0_org.asam.ods.AO_TRANSACTION_ALREADY_ACTIVE, _0_org.asam.ods.AO_TRANSACTION_NOT_ACTIVE, _0_org.asam.ods.AO_HAS_BASE_RELATION, _0_org.asam.ods.AO_HAS_BASE_ATTRIBUTE, _0_org.asam.ods.AO_UNKNOWN_UNIT, _0_org.asam.ods.AO_NO_SCALING_COLUMN, _0_org.asam.ods.AO_QUERY_TYPE_INVALID, _0_org.asam.ods.AO_QUERY_INVALID, _0_org.asam.ods.AO_QUERY_PROCESSING_ERROR, _0_org.asam.ods.AO_QUERY_TIMEOUT_EXCEEDED, _0_org.asam.ods.AO_QUERY_INCOMPLETE, _0_org.asam.ods.AO_QUERY_INVALID_RESULTTYPE, _0_org.asam.ods.AO_INVALID_VALUEMATRIX_STRUCTURE,))

_0_org.asam.ods._d_ErrorCode  = (omniORB.tcInternal.tv_enum, _0_org.asam.ods.ErrorCode._NP_RepositoryId, "ErrorCode", _0_org.asam.ods.ErrorCode._items)
_0_org.asam.ods._tc_ErrorCode = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ErrorCode)
omniORB.registerType(_0_org.asam.ods.ErrorCode._NP_RepositoryId, _0_org.asam.ods._d_ErrorCode, _0_org.asam.ods._tc_ErrorCode)

# enum SelOpcode
_0_org.asam.ods.EQ = omniORB.EnumItem("EQ", 0)
_0_org.asam.ods.NEQ = omniORB.EnumItem("NEQ", 1)
_0_org.asam.ods.LT = omniORB.EnumItem("LT", 2)
_0_org.asam.ods.GT = omniORB.EnumItem("GT", 3)
_0_org.asam.ods.LTE = omniORB.EnumItem("LTE", 4)
_0_org.asam.ods.GTE = omniORB.EnumItem("GTE", 5)
_0_org.asam.ods.INSET = omniORB.EnumItem("INSET", 6)
_0_org.asam.ods.NOTINSET = omniORB.EnumItem("NOTINSET", 7)
_0_org.asam.ods.LIKE = omniORB.EnumItem("LIKE", 8)
_0_org.asam.ods.CI_EQ = omniORB.EnumItem("CI_EQ", 9)
_0_org.asam.ods.CI_NEQ = omniORB.EnumItem("CI_NEQ", 10)
_0_org.asam.ods.CI_LT = omniORB.EnumItem("CI_LT", 11)
_0_org.asam.ods.CI_GT = omniORB.EnumItem("CI_GT", 12)
_0_org.asam.ods.CI_LTE = omniORB.EnumItem("CI_LTE", 13)
_0_org.asam.ods.CI_GTE = omniORB.EnumItem("CI_GTE", 14)
_0_org.asam.ods.CI_INSET = omniORB.EnumItem("CI_INSET", 15)
_0_org.asam.ods.CI_NOTINSET = omniORB.EnumItem("CI_NOTINSET", 16)
_0_org.asam.ods.CI_LIKE = omniORB.EnumItem("CI_LIKE", 17)
_0_org.asam.ods.IS_NULL = omniORB.EnumItem("IS_NULL", 18)
_0_org.asam.ods.IS_NOT_NULL = omniORB.EnumItem("IS_NOT_NULL", 19)
_0_org.asam.ods.NOTLIKE = omniORB.EnumItem("NOTLIKE", 20)
_0_org.asam.ods.CI_NOTLIKE = omniORB.EnumItem("CI_NOTLIKE", 21)
_0_org.asam.ods.SelOpcode = omniORB.Enum("IDL:org/asam/ods/SelOpcode:1.0", (_0_org.asam.ods.EQ, _0_org.asam.ods.NEQ, _0_org.asam.ods.LT, _0_org.asam.ods.GT, _0_org.asam.ods.LTE, _0_org.asam.ods.GTE, _0_org.asam.ods.INSET, _0_org.asam.ods.NOTINSET, _0_org.asam.ods.LIKE, _0_org.asam.ods.CI_EQ, _0_org.asam.ods.CI_NEQ, _0_org.asam.ods.CI_LT, _0_org.asam.ods.CI_GT, _0_org.asam.ods.CI_LTE, _0_org.asam.ods.CI_GTE, _0_org.asam.ods.CI_INSET, _0_org.asam.ods.CI_NOTINSET, _0_org.asam.ods.CI_LIKE, _0_org.asam.ods.IS_NULL, _0_org.asam.ods.IS_NOT_NULL, _0_org.asam.ods.NOTLIKE, _0_org.asam.ods.CI_NOTLIKE,))

_0_org.asam.ods._d_SelOpcode  = (omniORB.tcInternal.tv_enum, _0_org.asam.ods.SelOpcode._NP_RepositoryId, "SelOpcode", _0_org.asam.ods.SelOpcode._items)
_0_org.asam.ods._tc_SelOpcode = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_SelOpcode)
omniORB.registerType(_0_org.asam.ods.SelOpcode._NP_RepositoryId, _0_org.asam.ods._d_SelOpcode, _0_org.asam.ods._tc_SelOpcode)

# enum SelOperator
_0_org.asam.ods.AND = omniORB.EnumItem("AND", 0)
_0_org.asam.ods.OR = omniORB.EnumItem("OR", 1)
_0_org.asam.ods.NOT = omniORB.EnumItem("NOT", 2)
_0_org.asam.ods.OPEN = omniORB.EnumItem("OPEN", 3)
_0_org.asam.ods.CLOSE = omniORB.EnumItem("CLOSE", 4)
_0_org.asam.ods.SelOperator = omniORB.Enum("IDL:org/asam/ods/SelOperator:1.0", (_0_org.asam.ods.AND, _0_org.asam.ods.OR, _0_org.asam.ods.NOT, _0_org.asam.ods.OPEN, _0_org.asam.ods.CLOSE,))

_0_org.asam.ods._d_SelOperator  = (omniORB.tcInternal.tv_enum, _0_org.asam.ods.SelOperator._NP_RepositoryId, "SelOperator", _0_org.asam.ods.SelOperator._items)
_0_org.asam.ods._tc_SelOperator = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_SelOperator)
omniORB.registerType(_0_org.asam.ods.SelOperator._NP_RepositoryId, _0_org.asam.ods._d_SelOperator, _0_org.asam.ods._tc_SelOperator)

# enum RightsSet
_0_org.asam.ods.SET_RIGHT = omniORB.EnumItem("SET_RIGHT", 0)
_0_org.asam.ods.ADD_RIGHT = omniORB.EnumItem("ADD_RIGHT", 1)
_0_org.asam.ods.REMOVE_RIGHT = omniORB.EnumItem("REMOVE_RIGHT", 2)
_0_org.asam.ods.RightsSet = omniORB.Enum("IDL:org/asam/ods/RightsSet:1.0", (_0_org.asam.ods.SET_RIGHT, _0_org.asam.ods.ADD_RIGHT, _0_org.asam.ods.REMOVE_RIGHT,))

_0_org.asam.ods._d_RightsSet  = (omniORB.tcInternal.tv_enum, _0_org.asam.ods.RightsSet._NP_RepositoryId, "RightsSet", _0_org.asam.ods.RightsSet._items)
_0_org.asam.ods._tc_RightsSet = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_RightsSet)
omniORB.registerType(_0_org.asam.ods.RightsSet._NP_RepositoryId, _0_org.asam.ods._d_RightsSet, _0_org.asam.ods._tc_RightsSet)

# enum QueryStatus
_0_org.asam.ods.COMPLETE = omniORB.EnumItem("COMPLETE", 0)
_0_org.asam.ods.INCOMPLETE = omniORB.EnumItem("INCOMPLETE", 1)
_0_org.asam.ods.QueryStatus = omniORB.Enum("IDL:org/asam/ods/QueryStatus:1.0", (_0_org.asam.ods.COMPLETE, _0_org.asam.ods.INCOMPLETE,))

_0_org.asam.ods._d_QueryStatus  = (omniORB.tcInternal.tv_enum, _0_org.asam.ods.QueryStatus._NP_RepositoryId, "QueryStatus", _0_org.asam.ods.QueryStatus._items)
_0_org.asam.ods._tc_QueryStatus = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_QueryStatus)
omniORB.registerType(_0_org.asam.ods.QueryStatus._NP_RepositoryId, _0_org.asam.ods._d_QueryStatus, _0_org.asam.ods._tc_QueryStatus)

# enum AggrFunc
_0_org.asam.ods.NONE = omniORB.EnumItem("NONE", 0)
_0_org.asam.ods.COUNT = omniORB.EnumItem("COUNT", 1)
_0_org.asam.ods.DCOUNT = omniORB.EnumItem("DCOUNT", 2)
_0_org.asam.ods.MIN = omniORB.EnumItem("MIN", 3)
_0_org.asam.ods.MAX = omniORB.EnumItem("MAX", 4)
_0_org.asam.ods.AVG = omniORB.EnumItem("AVG", 5)
_0_org.asam.ods.STDDEV = omniORB.EnumItem("STDDEV", 6)
_0_org.asam.ods.SUM = omniORB.EnumItem("SUM", 7)
_0_org.asam.ods.DISTINCT = omniORB.EnumItem("DISTINCT", 8)
_0_org.asam.ods.AggrFunc = omniORB.Enum("IDL:org/asam/ods/AggrFunc:1.0", (_0_org.asam.ods.NONE, _0_org.asam.ods.COUNT, _0_org.asam.ods.DCOUNT, _0_org.asam.ods.MIN, _0_org.asam.ods.MAX, _0_org.asam.ods.AVG, _0_org.asam.ods.STDDEV, _0_org.asam.ods.SUM, _0_org.asam.ods.DISTINCT,))

_0_org.asam.ods._d_AggrFunc  = (omniORB.tcInternal.tv_enum, _0_org.asam.ods.AggrFunc._NP_RepositoryId, "AggrFunc", _0_org.asam.ods.AggrFunc._items)
_0_org.asam.ods._tc_AggrFunc = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_AggrFunc)
omniORB.registerType(_0_org.asam.ods.AggrFunc._NP_RepositoryId, _0_org.asam.ods._d_AggrFunc, _0_org.asam.ods._tc_AggrFunc)

# enum SelType
_0_org.asam.ods.SEL_VALUE_TYPE = omniORB.EnumItem("SEL_VALUE_TYPE", 0)
_0_org.asam.ods.SEL_OPERATOR_TYPE = omniORB.EnumItem("SEL_OPERATOR_TYPE", 1)
_0_org.asam.ods.SelType = omniORB.Enum("IDL:org/asam/ods/SelType:1.0", (_0_org.asam.ods.SEL_VALUE_TYPE, _0_org.asam.ods.SEL_OPERATOR_TYPE,))

_0_org.asam.ods._d_SelType  = (omniORB.tcInternal.tv_enum, _0_org.asam.ods.SelType._NP_RepositoryId, "SelType", _0_org.asam.ods.SelType._items)
_0_org.asam.ods._tc_SelType = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_SelType)
omniORB.registerType(_0_org.asam.ods.SelType._NP_RepositoryId, _0_org.asam.ods._d_SelType, _0_org.asam.ods._tc_SelType)

# enum JoinType
_0_org.asam.ods.JTDEFAULT = omniORB.EnumItem("JTDEFAULT", 0)
_0_org.asam.ods.JTOUTER = omniORB.EnumItem("JTOUTER", 1)
_0_org.asam.ods.JoinType = omniORB.Enum("IDL:org/asam/ods/JoinType:1.0", (_0_org.asam.ods.JTDEFAULT, _0_org.asam.ods.JTOUTER,))

_0_org.asam.ods._d_JoinType  = (omniORB.tcInternal.tv_enum, _0_org.asam.ods.JoinType._NP_RepositoryId, "JoinType", _0_org.asam.ods.JoinType._items)
_0_org.asam.ods._tc_JoinType = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_JoinType)
omniORB.registerType(_0_org.asam.ods.JoinType._NP_RepositoryId, _0_org.asam.ods._d_JoinType, _0_org.asam.ods._tc_JoinType)

# enum ValueMatrixMode
_0_org.asam.ods.CALCULATED = omniORB.EnumItem("CALCULATED", 0)
_0_org.asam.ods.STORAGE = omniORB.EnumItem("STORAGE", 1)
_0_org.asam.ods.ValueMatrixMode = omniORB.Enum("IDL:org/asam/ods/ValueMatrixMode:1.0", (_0_org.asam.ods.CALCULATED, _0_org.asam.ods.STORAGE,))

_0_org.asam.ods._d_ValueMatrixMode  = (omniORB.tcInternal.tv_enum, _0_org.asam.ods.ValueMatrixMode._NP_RepositoryId, "ValueMatrixMode", _0_org.asam.ods.ValueMatrixMode._items)
_0_org.asam.ods._tc_ValueMatrixMode = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ValueMatrixMode)
omniORB.registerType(_0_org.asam.ods.ValueMatrixMode._NP_RepositoryId, _0_org.asam.ods._d_ValueMatrixMode, _0_org.asam.ods._tc_ValueMatrixMode)

# typedef ... T_STRING
class T_STRING:
    _NP_RepositoryId = "IDL:org/asam/ods/T_STRING:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.T_STRING = T_STRING
_0_org.asam.ods._d_T_STRING  = (omniORB.tcInternal.tv_string,0)
_0_org.asam.ods._ad_T_STRING = (omniORB.tcInternal.tv_alias, T_STRING._NP_RepositoryId, "T_STRING", (omniORB.tcInternal.tv_string,0))
_0_org.asam.ods._tc_T_STRING = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_T_STRING)
omniORB.registerType(T_STRING._NP_RepositoryId, _0_org.asam.ods._ad_T_STRING, _0_org.asam.ods._tc_T_STRING)
del T_STRING

# typedef ... T_BOOLEAN
class T_BOOLEAN:
    _NP_RepositoryId = "IDL:org/asam/ods/T_BOOLEAN:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.T_BOOLEAN = T_BOOLEAN
_0_org.asam.ods._d_T_BOOLEAN  = omniORB.tcInternal.tv_boolean
_0_org.asam.ods._ad_T_BOOLEAN = (omniORB.tcInternal.tv_alias, T_BOOLEAN._NP_RepositoryId, "T_BOOLEAN", omniORB.tcInternal.tv_boolean)
_0_org.asam.ods._tc_T_BOOLEAN = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_T_BOOLEAN)
omniORB.registerType(T_BOOLEAN._NP_RepositoryId, _0_org.asam.ods._ad_T_BOOLEAN, _0_org.asam.ods._tc_T_BOOLEAN)
del T_BOOLEAN

# typedef ... T_SHORT
class T_SHORT:
    _NP_RepositoryId = "IDL:org/asam/ods/T_SHORT:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.T_SHORT = T_SHORT
_0_org.asam.ods._d_T_SHORT  = omniORB.tcInternal.tv_short
_0_org.asam.ods._ad_T_SHORT = (omniORB.tcInternal.tv_alias, T_SHORT._NP_RepositoryId, "T_SHORT", omniORB.tcInternal.tv_short)
_0_org.asam.ods._tc_T_SHORT = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_T_SHORT)
omniORB.registerType(T_SHORT._NP_RepositoryId, _0_org.asam.ods._ad_T_SHORT, _0_org.asam.ods._tc_T_SHORT)
del T_SHORT

# typedef ... T_FLOAT
class T_FLOAT:
    _NP_RepositoryId = "IDL:org/asam/ods/T_FLOAT:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.T_FLOAT = T_FLOAT
_0_org.asam.ods._d_T_FLOAT  = omniORB.tcInternal.tv_float
_0_org.asam.ods._ad_T_FLOAT = (omniORB.tcInternal.tv_alias, T_FLOAT._NP_RepositoryId, "T_FLOAT", omniORB.tcInternal.tv_float)
_0_org.asam.ods._tc_T_FLOAT = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_T_FLOAT)
omniORB.registerType(T_FLOAT._NP_RepositoryId, _0_org.asam.ods._ad_T_FLOAT, _0_org.asam.ods._tc_T_FLOAT)
del T_FLOAT

# typedef ... T_BYTE
class T_BYTE:
    _NP_RepositoryId = "IDL:org/asam/ods/T_BYTE:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.T_BYTE = T_BYTE
_0_org.asam.ods._d_T_BYTE  = omniORB.tcInternal.tv_octet
_0_org.asam.ods._ad_T_BYTE = (omniORB.tcInternal.tv_alias, T_BYTE._NP_RepositoryId, "T_BYTE", omniORB.tcInternal.tv_octet)
_0_org.asam.ods._tc_T_BYTE = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_T_BYTE)
omniORB.registerType(T_BYTE._NP_RepositoryId, _0_org.asam.ods._ad_T_BYTE, _0_org.asam.ods._tc_T_BYTE)
del T_BYTE

# typedef ... T_LONG
class T_LONG:
    _NP_RepositoryId = "IDL:org/asam/ods/T_LONG:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.T_LONG = T_LONG
_0_org.asam.ods._d_T_LONG  = omniORB.tcInternal.tv_long
_0_org.asam.ods._ad_T_LONG = (omniORB.tcInternal.tv_alias, T_LONG._NP_RepositoryId, "T_LONG", omniORB.tcInternal.tv_long)
_0_org.asam.ods._tc_T_LONG = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_T_LONG)
omniORB.registerType(T_LONG._NP_RepositoryId, _0_org.asam.ods._ad_T_LONG, _0_org.asam.ods._tc_T_LONG)
del T_LONG

# typedef ... T_DOUBLE
class T_DOUBLE:
    _NP_RepositoryId = "IDL:org/asam/ods/T_DOUBLE:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.T_DOUBLE = T_DOUBLE
_0_org.asam.ods._d_T_DOUBLE  = omniORB.tcInternal.tv_double
_0_org.asam.ods._ad_T_DOUBLE = (omniORB.tcInternal.tv_alias, T_DOUBLE._NP_RepositoryId, "T_DOUBLE", omniORB.tcInternal.tv_double)
_0_org.asam.ods._tc_T_DOUBLE = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_T_DOUBLE)
omniORB.registerType(T_DOUBLE._NP_RepositoryId, _0_org.asam.ods._ad_T_DOUBLE, _0_org.asam.ods._tc_T_DOUBLE)
del T_DOUBLE

# typedef ... Name
class Name:
    _NP_RepositoryId = "IDL:org/asam/ods/Name:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.Name = Name
_0_org.asam.ods._d_Name  = omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"]
_0_org.asam.ods._ad_Name = (omniORB.tcInternal.tv_alias, Name._NP_RepositoryId, "Name", omniORB.typeCodeMapping["IDL:org/asam/ods/T_STRING:1.0"]._d)
_0_org.asam.ods._tc_Name = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_Name)
omniORB.registerType(Name._NP_RepositoryId, _0_org.asam.ods._ad_Name, _0_org.asam.ods._tc_Name)
del Name

# typedef ... Pattern
class Pattern:
    _NP_RepositoryId = "IDL:org/asam/ods/Pattern:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.Pattern = Pattern
_0_org.asam.ods._d_Pattern  = omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"]
_0_org.asam.ods._ad_Pattern = (omniORB.tcInternal.tv_alias, Pattern._NP_RepositoryId, "Pattern", omniORB.typeCodeMapping["IDL:org/asam/ods/T_STRING:1.0"]._d)
_0_org.asam.ods._tc_Pattern = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_Pattern)
omniORB.registerType(Pattern._NP_RepositoryId, _0_org.asam.ods._ad_Pattern, _0_org.asam.ods._tc_Pattern)
del Pattern

# typedef ... BaseType
class BaseType:
    _NP_RepositoryId = "IDL:org/asam/ods/BaseType:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.BaseType = BaseType
_0_org.asam.ods._d_BaseType  = omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"]
_0_org.asam.ods._ad_BaseType = (omniORB.tcInternal.tv_alias, BaseType._NP_RepositoryId, "BaseType", omniORB.typeCodeMapping["IDL:org/asam/ods/T_STRING:1.0"]._d)
_0_org.asam.ods._tc_BaseType = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_BaseType)
omniORB.registerType(BaseType._NP_RepositoryId, _0_org.asam.ods._ad_BaseType, _0_org.asam.ods._tc_BaseType)
del BaseType

# typedef ... T_DATE
class T_DATE:
    _NP_RepositoryId = "IDL:org/asam/ods/T_DATE:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.T_DATE = T_DATE
_0_org.asam.ods._d_T_DATE  = omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"]
_0_org.asam.ods._ad_T_DATE = (omniORB.tcInternal.tv_alias, T_DATE._NP_RepositoryId, "T_DATE", omniORB.typeCodeMapping["IDL:org/asam/ods/T_STRING:1.0"]._d)
_0_org.asam.ods._tc_T_DATE = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_T_DATE)
omniORB.registerType(T_DATE._NP_RepositoryId, _0_org.asam.ods._ad_T_DATE, _0_org.asam.ods._tc_T_DATE)
del T_DATE

# typedef ... T_BLOB
class T_BLOB:
    _NP_RepositoryId = "IDL:org/asam/ods/T_BLOB:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.T_BLOB = T_BLOB
_0_org.asam.ods._d_T_BLOB  = omniORB.typeMapping["IDL:org/asam/ods/Blob:1.0"]
_0_org.asam.ods._ad_T_BLOB = (omniORB.tcInternal.tv_alias, T_BLOB._NP_RepositoryId, "T_BLOB", omniORB.typeMapping["IDL:org/asam/ods/Blob:1.0"])
_0_org.asam.ods._tc_T_BLOB = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_T_BLOB)
omniORB.registerType(T_BLOB._NP_RepositoryId, _0_org.asam.ods._ad_T_BLOB, _0_org.asam.ods._tc_T_BLOB)
del T_BLOB

# typedef ... T_BYTESTR
class T_BYTESTR:
    _NP_RepositoryId = "IDL:org/asam/ods/T_BYTESTR:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.T_BYTESTR = T_BYTESTR
_0_org.asam.ods._d_T_BYTESTR  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_BYTE:1.0"], 0)
_0_org.asam.ods._ad_T_BYTESTR = (omniORB.tcInternal.tv_alias, T_BYTESTR._NP_RepositoryId, "T_BYTESTR", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_BYTE:1.0"], 0))
_0_org.asam.ods._tc_T_BYTESTR = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_T_BYTESTR)
omniORB.registerType(T_BYTESTR._NP_RepositoryId, _0_org.asam.ods._ad_T_BYTESTR, _0_org.asam.ods._tc_T_BYTESTR)
del T_BYTESTR

# typedef ... S_BOOLEAN
class S_BOOLEAN:
    _NP_RepositoryId = "IDL:org/asam/ods/S_BOOLEAN:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.S_BOOLEAN = S_BOOLEAN
_0_org.asam.ods._d_S_BOOLEAN  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], 0)
_0_org.asam.ods._ad_S_BOOLEAN = (omniORB.tcInternal.tv_alias, S_BOOLEAN._NP_RepositoryId, "S_BOOLEAN", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], 0))
_0_org.asam.ods._tc_S_BOOLEAN = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_S_BOOLEAN)
omniORB.registerType(S_BOOLEAN._NP_RepositoryId, _0_org.asam.ods._ad_S_BOOLEAN, _0_org.asam.ods._tc_S_BOOLEAN)
del S_BOOLEAN

# typedef ... S_BYTE
class S_BYTE:
    _NP_RepositoryId = "IDL:org/asam/ods/S_BYTE:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.S_BYTE = S_BYTE
_0_org.asam.ods._d_S_BYTE  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_BYTE:1.0"], 0)
_0_org.asam.ods._ad_S_BYTE = (omniORB.tcInternal.tv_alias, S_BYTE._NP_RepositoryId, "S_BYTE", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_BYTE:1.0"], 0))
_0_org.asam.ods._tc_S_BYTE = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_S_BYTE)
omniORB.registerType(S_BYTE._NP_RepositoryId, _0_org.asam.ods._ad_S_BYTE, _0_org.asam.ods._tc_S_BYTE)
del S_BYTE

# typedef ... S_DOUBLE
class S_DOUBLE:
    _NP_RepositoryId = "IDL:org/asam/ods/S_DOUBLE:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.S_DOUBLE = S_DOUBLE
_0_org.asam.ods._d_S_DOUBLE  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_DOUBLE:1.0"], 0)
_0_org.asam.ods._ad_S_DOUBLE = (omniORB.tcInternal.tv_alias, S_DOUBLE._NP_RepositoryId, "S_DOUBLE", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_DOUBLE:1.0"], 0))
_0_org.asam.ods._tc_S_DOUBLE = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_S_DOUBLE)
omniORB.registerType(S_DOUBLE._NP_RepositoryId, _0_org.asam.ods._ad_S_DOUBLE, _0_org.asam.ods._tc_S_DOUBLE)
del S_DOUBLE

# typedef ... S_FLOAT
class S_FLOAT:
    _NP_RepositoryId = "IDL:org/asam/ods/S_FLOAT:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.S_FLOAT = S_FLOAT
_0_org.asam.ods._d_S_FLOAT  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_FLOAT:1.0"], 0)
_0_org.asam.ods._ad_S_FLOAT = (omniORB.tcInternal.tv_alias, S_FLOAT._NP_RepositoryId, "S_FLOAT", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_FLOAT:1.0"], 0))
_0_org.asam.ods._tc_S_FLOAT = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_S_FLOAT)
omniORB.registerType(S_FLOAT._NP_RepositoryId, _0_org.asam.ods._ad_S_FLOAT, _0_org.asam.ods._tc_S_FLOAT)
del S_FLOAT

# typedef ... S_LONG
class S_LONG:
    _NP_RepositoryId = "IDL:org/asam/ods/S_LONG:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.S_LONG = S_LONG
_0_org.asam.ods._d_S_LONG  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], 0)
_0_org.asam.ods._ad_S_LONG = (omniORB.tcInternal.tv_alias, S_LONG._NP_RepositoryId, "S_LONG", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], 0))
_0_org.asam.ods._tc_S_LONG = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_S_LONG)
omniORB.registerType(S_LONG._NP_RepositoryId, _0_org.asam.ods._ad_S_LONG, _0_org.asam.ods._tc_S_LONG)
del S_LONG

# typedef ... S_SHORT
class S_SHORT:
    _NP_RepositoryId = "IDL:org/asam/ods/S_SHORT:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.S_SHORT = S_SHORT
_0_org.asam.ods._d_S_SHORT  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_SHORT:1.0"], 0)
_0_org.asam.ods._ad_S_SHORT = (omniORB.tcInternal.tv_alias, S_SHORT._NP_RepositoryId, "S_SHORT", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_SHORT:1.0"], 0))
_0_org.asam.ods._tc_S_SHORT = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_S_SHORT)
omniORB.registerType(S_SHORT._NP_RepositoryId, _0_org.asam.ods._ad_S_SHORT, _0_org.asam.ods._tc_S_SHORT)
del S_SHORT

# typedef ... S_STRING
class S_STRING:
    _NP_RepositoryId = "IDL:org/asam/ods/S_STRING:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.S_STRING = S_STRING
_0_org.asam.ods._d_S_STRING  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], 0)
_0_org.asam.ods._ad_S_STRING = (omniORB.tcInternal.tv_alias, S_STRING._NP_RepositoryId, "S_STRING", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], 0))
_0_org.asam.ods._tc_S_STRING = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_S_STRING)
omniORB.registerType(S_STRING._NP_RepositoryId, _0_org.asam.ods._ad_S_STRING, _0_org.asam.ods._tc_S_STRING)
del S_STRING

# typedef ... BaseTypeSequence
class BaseTypeSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/BaseTypeSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.BaseTypeSequence = BaseTypeSequence
_0_org.asam.ods._d_BaseTypeSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/BaseType:1.0"], 0)
_0_org.asam.ods._ad_BaseTypeSequence = (omniORB.tcInternal.tv_alias, BaseTypeSequence._NP_RepositoryId, "BaseTypeSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/BaseType:1.0"], 0))
_0_org.asam.ods._tc_BaseTypeSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_BaseTypeSequence)
omniORB.registerType(BaseTypeSequence._NP_RepositoryId, _0_org.asam.ods._ad_BaseTypeSequence, _0_org.asam.ods._tc_BaseTypeSequence)
del BaseTypeSequence

# typedef ... NameSequence
class NameSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/NameSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.NameSequence = NameSequence
_0_org.asam.ods._d_NameSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], 0)
_0_org.asam.ods._ad_NameSequence = (omniORB.tcInternal.tv_alias, NameSequence._NP_RepositoryId, "NameSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], 0))
_0_org.asam.ods._tc_NameSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_NameSequence)
omniORB.registerType(NameSequence._NP_RepositoryId, _0_org.asam.ods._ad_NameSequence, _0_org.asam.ods._tc_NameSequence)
del NameSequence

# typedef ... ColumnSequence
class ColumnSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/ColumnSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.ColumnSequence = ColumnSequence
_0_org.asam.ods._d_ColumnSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/Column:1.0"], 0)
_0_org.asam.ods._ad_ColumnSequence = (omniORB.tcInternal.tv_alias, ColumnSequence._NP_RepositoryId, "ColumnSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/Column:1.0"], 0))
_0_org.asam.ods._tc_ColumnSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_ColumnSequence)
omniORB.registerType(ColumnSequence._NP_RepositoryId, _0_org.asam.ods._ad_ColumnSequence, _0_org.asam.ods._tc_ColumnSequence)
del ColumnSequence

# typedef ... SMatLinkSequence
class SMatLinkSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/SMatLinkSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SMatLinkSequence = SMatLinkSequence
_0_org.asam.ods._d_SMatLinkSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/SMatLink:1.0"], 0)
_0_org.asam.ods._ad_SMatLinkSequence = (omniORB.tcInternal.tv_alias, SMatLinkSequence._NP_RepositoryId, "SMatLinkSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/SMatLink:1.0"], 0))
_0_org.asam.ods._tc_SMatLinkSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SMatLinkSequence)
omniORB.registerType(SMatLinkSequence._NP_RepositoryId, _0_org.asam.ods._ad_SMatLinkSequence, _0_org.asam.ods._tc_SMatLinkSequence)
del SMatLinkSequence

# typedef ... SubMatrixSequence
class SubMatrixSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/SubMatrixSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SubMatrixSequence = SubMatrixSequence
_0_org.asam.ods._d_SubMatrixSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/SubMatrix:1.0"], 0)
_0_org.asam.ods._ad_SubMatrixSequence = (omniORB.tcInternal.tv_alias, SubMatrixSequence._NP_RepositoryId, "SubMatrixSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/SubMatrix:1.0"], 0))
_0_org.asam.ods._tc_SubMatrixSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SubMatrixSequence)
omniORB.registerType(SubMatrixSequence._NP_RepositoryId, _0_org.asam.ods._ad_SubMatrixSequence, _0_org.asam.ods._tc_SubMatrixSequence)
del SubMatrixSequence

# typedef ... S_DATE
class S_DATE:
    _NP_RepositoryId = "IDL:org/asam/ods/S_DATE:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.S_DATE = S_DATE
_0_org.asam.ods._d_S_DATE  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_DATE:1.0"], 0)
_0_org.asam.ods._ad_S_DATE = (omniORB.tcInternal.tv_alias, S_DATE._NP_RepositoryId, "S_DATE", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_DATE:1.0"], 0))
_0_org.asam.ods._tc_S_DATE = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_S_DATE)
omniORB.registerType(S_DATE._NP_RepositoryId, _0_org.asam.ods._ad_S_DATE, _0_org.asam.ods._tc_S_DATE)
del S_DATE

# typedef ... S_BYTESTR
class S_BYTESTR:
    _NP_RepositoryId = "IDL:org/asam/ods/S_BYTESTR:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.S_BYTESTR = S_BYTESTR
_0_org.asam.ods._d_S_BYTESTR  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_BYTESTR:1.0"], 0)
_0_org.asam.ods._ad_S_BYTESTR = (omniORB.tcInternal.tv_alias, S_BYTESTR._NP_RepositoryId, "S_BYTESTR", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_BYTESTR:1.0"], 0))
_0_org.asam.ods._tc_S_BYTESTR = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_S_BYTESTR)
omniORB.registerType(S_BYTESTR._NP_RepositoryId, _0_org.asam.ods._ad_S_BYTESTR, _0_org.asam.ods._tc_S_BYTESTR)
del S_BYTESTR

# typedef ... SS_STRING
class SS_STRING:
    _NP_RepositoryId = "IDL:org/asam/ods/SS_STRING:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SS_STRING = SS_STRING
_0_org.asam.ods._d_SS_STRING  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_STRING:1.0"], 0)
_0_org.asam.ods._ad_SS_STRING = (omniORB.tcInternal.tv_alias, SS_STRING._NP_RepositoryId, "SS_STRING", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_STRING:1.0"], 0))
_0_org.asam.ods._tc_SS_STRING = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SS_STRING)
omniORB.registerType(SS_STRING._NP_RepositoryId, _0_org.asam.ods._ad_SS_STRING, _0_org.asam.ods._tc_SS_STRING)
del SS_STRING

# typedef ... SS_SHORT
class SS_SHORT:
    _NP_RepositoryId = "IDL:org/asam/ods/SS_SHORT:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SS_SHORT = SS_SHORT
_0_org.asam.ods._d_SS_SHORT  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_SHORT:1.0"], 0)
_0_org.asam.ods._ad_SS_SHORT = (omniORB.tcInternal.tv_alias, SS_SHORT._NP_RepositoryId, "SS_SHORT", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_SHORT:1.0"], 0))
_0_org.asam.ods._tc_SS_SHORT = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SS_SHORT)
omniORB.registerType(SS_SHORT._NP_RepositoryId, _0_org.asam.ods._ad_SS_SHORT, _0_org.asam.ods._tc_SS_SHORT)
del SS_SHORT

# typedef ... SS_FLOAT
class SS_FLOAT:
    _NP_RepositoryId = "IDL:org/asam/ods/SS_FLOAT:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SS_FLOAT = SS_FLOAT
_0_org.asam.ods._d_SS_FLOAT  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_FLOAT:1.0"], 0)
_0_org.asam.ods._ad_SS_FLOAT = (omniORB.tcInternal.tv_alias, SS_FLOAT._NP_RepositoryId, "SS_FLOAT", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_FLOAT:1.0"], 0))
_0_org.asam.ods._tc_SS_FLOAT = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SS_FLOAT)
omniORB.registerType(SS_FLOAT._NP_RepositoryId, _0_org.asam.ods._ad_SS_FLOAT, _0_org.asam.ods._tc_SS_FLOAT)
del SS_FLOAT

# typedef ... SS_BOOLEAN
class SS_BOOLEAN:
    _NP_RepositoryId = "IDL:org/asam/ods/SS_BOOLEAN:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SS_BOOLEAN = SS_BOOLEAN
_0_org.asam.ods._d_SS_BOOLEAN  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_BOOLEAN:1.0"], 0)
_0_org.asam.ods._ad_SS_BOOLEAN = (omniORB.tcInternal.tv_alias, SS_BOOLEAN._NP_RepositoryId, "SS_BOOLEAN", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_BOOLEAN:1.0"], 0))
_0_org.asam.ods._tc_SS_BOOLEAN = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SS_BOOLEAN)
omniORB.registerType(SS_BOOLEAN._NP_RepositoryId, _0_org.asam.ods._ad_SS_BOOLEAN, _0_org.asam.ods._tc_SS_BOOLEAN)
del SS_BOOLEAN

# typedef ... SS_BYTE
class SS_BYTE:
    _NP_RepositoryId = "IDL:org/asam/ods/SS_BYTE:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SS_BYTE = SS_BYTE
_0_org.asam.ods._d_SS_BYTE  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_BYTE:1.0"], 0)
_0_org.asam.ods._ad_SS_BYTE = (omniORB.tcInternal.tv_alias, SS_BYTE._NP_RepositoryId, "SS_BYTE", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_BYTE:1.0"], 0))
_0_org.asam.ods._tc_SS_BYTE = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SS_BYTE)
omniORB.registerType(SS_BYTE._NP_RepositoryId, _0_org.asam.ods._ad_SS_BYTE, _0_org.asam.ods._tc_SS_BYTE)
del SS_BYTE

# typedef ... SS_LONG
class SS_LONG:
    _NP_RepositoryId = "IDL:org/asam/ods/SS_LONG:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SS_LONG = SS_LONG
_0_org.asam.ods._d_SS_LONG  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_LONG:1.0"], 0)
_0_org.asam.ods._ad_SS_LONG = (omniORB.tcInternal.tv_alias, SS_LONG._NP_RepositoryId, "SS_LONG", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_LONG:1.0"], 0))
_0_org.asam.ods._tc_SS_LONG = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SS_LONG)
omniORB.registerType(SS_LONG._NP_RepositoryId, _0_org.asam.ods._ad_SS_LONG, _0_org.asam.ods._tc_SS_LONG)
del SS_LONG

# typedef ... SS_DOUBLE
class SS_DOUBLE:
    _NP_RepositoryId = "IDL:org/asam/ods/SS_DOUBLE:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SS_DOUBLE = SS_DOUBLE
_0_org.asam.ods._d_SS_DOUBLE  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_DOUBLE:1.0"], 0)
_0_org.asam.ods._ad_SS_DOUBLE = (omniORB.tcInternal.tv_alias, SS_DOUBLE._NP_RepositoryId, "SS_DOUBLE", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_DOUBLE:1.0"], 0))
_0_org.asam.ods._tc_SS_DOUBLE = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SS_DOUBLE)
omniORB.registerType(SS_DOUBLE._NP_RepositoryId, _0_org.asam.ods._ad_SS_DOUBLE, _0_org.asam.ods._tc_SS_DOUBLE)
del SS_DOUBLE

# typedef ... SS_DATE
class SS_DATE:
    _NP_RepositoryId = "IDL:org/asam/ods/SS_DATE:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SS_DATE = SS_DATE
_0_org.asam.ods._d_SS_DATE  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_DATE:1.0"], 0)
_0_org.asam.ods._ad_SS_DATE = (omniORB.tcInternal.tv_alias, SS_DATE._NP_RepositoryId, "SS_DATE", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_DATE:1.0"], 0))
_0_org.asam.ods._tc_SS_DATE = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SS_DATE)
omniORB.registerType(SS_DATE._NP_RepositoryId, _0_org.asam.ods._ad_SS_DATE, _0_org.asam.ods._tc_SS_DATE)
del SS_DATE

# typedef ... SS_BYTESTR
class SS_BYTESTR:
    _NP_RepositoryId = "IDL:org/asam/ods/SS_BYTESTR:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SS_BYTESTR = SS_BYTESTR
_0_org.asam.ods._d_SS_BYTESTR  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_BYTESTR:1.0"], 0)
_0_org.asam.ods._ad_SS_BYTESTR = (omniORB.tcInternal.tv_alias, SS_BYTESTR._NP_RepositoryId, "SS_BYTESTR", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_BYTESTR:1.0"], 0))
_0_org.asam.ods._tc_SS_BYTESTR = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SS_BYTESTR)
omniORB.registerType(SS_BYTESTR._NP_RepositoryId, _0_org.asam.ods._ad_SS_BYTESTR, _0_org.asam.ods._tc_SS_BYTESTR)
del SS_BYTESTR

# typedef ... S_BLOB
class S_BLOB:
    _NP_RepositoryId = "IDL:org/asam/ods/S_BLOB:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.S_BLOB = S_BLOB
_0_org.asam.ods._d_S_BLOB  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_BLOB:1.0"], 0)
_0_org.asam.ods._ad_S_BLOB = (omniORB.tcInternal.tv_alias, S_BLOB._NP_RepositoryId, "S_BLOB", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_BLOB:1.0"], 0))
_0_org.asam.ods._tc_S_BLOB = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_S_BLOB)
omniORB.registerType(S_BLOB._NP_RepositoryId, _0_org.asam.ods._ad_S_BLOB, _0_org.asam.ods._tc_S_BLOB)
del S_BLOB

# typedef ... ApplicationElementSequence
class ApplicationElementSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/ApplicationElementSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.ApplicationElementSequence = ApplicationElementSequence
_0_org.asam.ods._d_ApplicationElementSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ApplicationElement:1.0"], 0)
_0_org.asam.ods._ad_ApplicationElementSequence = (omniORB.tcInternal.tv_alias, ApplicationElementSequence._NP_RepositoryId, "ApplicationElementSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ApplicationElement:1.0"], 0))
_0_org.asam.ods._tc_ApplicationElementSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_ApplicationElementSequence)
omniORB.registerType(ApplicationElementSequence._NP_RepositoryId, _0_org.asam.ods._ad_ApplicationElementSequence, _0_org.asam.ods._tc_ApplicationElementSequence)
del ApplicationElementSequence

# typedef ... ApplicationRelationSequence
class ApplicationRelationSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/ApplicationRelationSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.ApplicationRelationSequence = ApplicationRelationSequence
_0_org.asam.ods._d_ApplicationRelationSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelation:1.0"], 0)
_0_org.asam.ods._ad_ApplicationRelationSequence = (omniORB.tcInternal.tv_alias, ApplicationRelationSequence._NP_RepositoryId, "ApplicationRelationSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelation:1.0"], 0))
_0_org.asam.ods._tc_ApplicationRelationSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_ApplicationRelationSequence)
omniORB.registerType(ApplicationRelationSequence._NP_RepositoryId, _0_org.asam.ods._ad_ApplicationRelationSequence, _0_org.asam.ods._tc_ApplicationRelationSequence)
del ApplicationRelationSequence

# typedef ... ApplicationAttributeSequence
class ApplicationAttributeSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/ApplicationAttributeSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.ApplicationAttributeSequence = ApplicationAttributeSequence
_0_org.asam.ods._d_ApplicationAttributeSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ApplicationAttribute:1.0"], 0)
_0_org.asam.ods._ad_ApplicationAttributeSequence = (omniORB.tcInternal.tv_alias, ApplicationAttributeSequence._NP_RepositoryId, "ApplicationAttributeSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ApplicationAttribute:1.0"], 0))
_0_org.asam.ods._tc_ApplicationAttributeSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_ApplicationAttributeSequence)
omniORB.registerType(ApplicationAttributeSequence._NP_RepositoryId, _0_org.asam.ods._ad_ApplicationAttributeSequence, _0_org.asam.ods._tc_ApplicationAttributeSequence)
del ApplicationAttributeSequence

# typedef ... BaseRelationSequence
class BaseRelationSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/BaseRelationSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.BaseRelationSequence = BaseRelationSequence
_0_org.asam.ods._d_BaseRelationSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/BaseRelation:1.0"], 0)
_0_org.asam.ods._ad_BaseRelationSequence = (omniORB.tcInternal.tv_alias, BaseRelationSequence._NP_RepositoryId, "BaseRelationSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/BaseRelation:1.0"], 0))
_0_org.asam.ods._tc_BaseRelationSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_BaseRelationSequence)
omniORB.registerType(BaseRelationSequence._NP_RepositoryId, _0_org.asam.ods._ad_BaseRelationSequence, _0_org.asam.ods._tc_BaseRelationSequence)
del BaseRelationSequence

# typedef ... BaseAttributeSequence
class BaseAttributeSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/BaseAttributeSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.BaseAttributeSequence = BaseAttributeSequence
_0_org.asam.ods._d_BaseAttributeSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/BaseAttribute:1.0"], 0)
_0_org.asam.ods._ad_BaseAttributeSequence = (omniORB.tcInternal.tv_alias, BaseAttributeSequence._NP_RepositoryId, "BaseAttributeSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/BaseAttribute:1.0"], 0))
_0_org.asam.ods._tc_BaseAttributeSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_BaseAttributeSequence)
omniORB.registerType(BaseAttributeSequence._NP_RepositoryId, _0_org.asam.ods._ad_BaseAttributeSequence, _0_org.asam.ods._tc_BaseAttributeSequence)
del BaseAttributeSequence

# typedef ... BaseElementSequence
class BaseElementSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/BaseElementSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.BaseElementSequence = BaseElementSequence
_0_org.asam.ods._d_BaseElementSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/BaseElement:1.0"], 0)
_0_org.asam.ods._ad_BaseElementSequence = (omniORB.tcInternal.tv_alias, BaseElementSequence._NP_RepositoryId, "BaseElementSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/BaseElement:1.0"], 0))
_0_org.asam.ods._tc_BaseElementSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_BaseElementSequence)
omniORB.registerType(BaseElementSequence._NP_RepositoryId, _0_org.asam.ods._ad_BaseElementSequence, _0_org.asam.ods._tc_BaseElementSequence)
del BaseElementSequence

# typedef ... InstanceElementSequence
class InstanceElementSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/InstanceElementSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.InstanceElementSequence = InstanceElementSequence
_0_org.asam.ods._d_InstanceElementSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], 0)
_0_org.asam.ods._ad_InstanceElementSequence = (omniORB.tcInternal.tv_alias, InstanceElementSequence._NP_RepositoryId, "InstanceElementSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], 0))
_0_org.asam.ods._tc_InstanceElementSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_InstanceElementSequence)
omniORB.registerType(InstanceElementSequence._NP_RepositoryId, _0_org.asam.ods._ad_InstanceElementSequence, _0_org.asam.ods._tc_InstanceElementSequence)
del InstanceElementSequence

# typedef ... SelOperatorSequence
class SelOperatorSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/SelOperatorSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SelOperatorSequence = SelOperatorSequence
_0_org.asam.ods._d_SelOperatorSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/SelOperator:1.0"], 0)
_0_org.asam.ods._ad_SelOperatorSequence = (omniORB.tcInternal.tv_alias, SelOperatorSequence._NP_RepositoryId, "SelOperatorSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/SelOperator:1.0"], 0))
_0_org.asam.ods._tc_SelOperatorSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SelOperatorSequence)
omniORB.registerType(SelOperatorSequence._NP_RepositoryId, _0_org.asam.ods._ad_SelOperatorSequence, _0_org.asam.ods._tc_SelOperatorSequence)
del SelOperatorSequence

# struct RelationRange
_0_org.asam.ods.RelationRange = omniORB.newEmptyClass()
class RelationRange (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/RelationRange:1.0"

    def __init__(self, min, max):
        self.min = min
        self.max = max

_0_org.asam.ods.RelationRange = RelationRange
_0_org.asam.ods._d_RelationRange  = (omniORB.tcInternal.tv_struct, RelationRange, RelationRange._NP_RepositoryId, "RelationRange", "min", omniORB.typeMapping["IDL:org/asam/ods/T_SHORT:1.0"], "max", omniORB.typeMapping["IDL:org/asam/ods/T_SHORT:1.0"])
_0_org.asam.ods._tc_RelationRange = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_RelationRange)
omniORB.registerType(RelationRange._NP_RepositoryId, _0_org.asam.ods._d_RelationRange, _0_org.asam.ods._tc_RelationRange)
del RelationRange

# struct T_LONGLONG
_0_org.asam.ods.T_LONGLONG = omniORB.newEmptyClass()
class T_LONGLONG (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/T_LONGLONG:1.0"

    def __init__(self, high, low):
        self.high = high
        self.low = low

_0_org.asam.ods.T_LONGLONG = T_LONGLONG
_0_org.asam.ods._d_T_LONGLONG  = (omniORB.tcInternal.tv_struct, T_LONGLONG, T_LONGLONG._NP_RepositoryId, "T_LONGLONG", "high", omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], "low", omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"])
_0_org.asam.ods._tc_T_LONGLONG = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_T_LONGLONG)
omniORB.registerType(T_LONGLONG._NP_RepositoryId, _0_org.asam.ods._d_T_LONGLONG, _0_org.asam.ods._tc_T_LONGLONG)
del T_LONGLONG

# struct T_COMPLEX
_0_org.asam.ods.T_COMPLEX = omniORB.newEmptyClass()
class T_COMPLEX (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/T_COMPLEX:1.0"

    def __init__(self, r, i):
        self.r = r
        self.i = i

_0_org.asam.ods.T_COMPLEX = T_COMPLEX
_0_org.asam.ods._d_T_COMPLEX  = (omniORB.tcInternal.tv_struct, T_COMPLEX, T_COMPLEX._NP_RepositoryId, "T_COMPLEX", "r", omniORB.typeMapping["IDL:org/asam/ods/T_FLOAT:1.0"], "i", omniORB.typeMapping["IDL:org/asam/ods/T_FLOAT:1.0"])
_0_org.asam.ods._tc_T_COMPLEX = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_T_COMPLEX)
omniORB.registerType(T_COMPLEX._NP_RepositoryId, _0_org.asam.ods._d_T_COMPLEX, _0_org.asam.ods._tc_T_COMPLEX)
del T_COMPLEX

# struct T_DCOMPLEX
_0_org.asam.ods.T_DCOMPLEX = omniORB.newEmptyClass()
class T_DCOMPLEX (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/T_DCOMPLEX:1.0"

    def __init__(self, r, i):
        self.r = r
        self.i = i

_0_org.asam.ods.T_DCOMPLEX = T_DCOMPLEX
_0_org.asam.ods._d_T_DCOMPLEX  = (omniORB.tcInternal.tv_struct, T_DCOMPLEX, T_DCOMPLEX._NP_RepositoryId, "T_DCOMPLEX", "r", omniORB.typeMapping["IDL:org/asam/ods/T_DOUBLE:1.0"], "i", omniORB.typeMapping["IDL:org/asam/ods/T_DOUBLE:1.0"])
_0_org.asam.ods._tc_T_DCOMPLEX = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_T_DCOMPLEX)
omniORB.registerType(T_DCOMPLEX._NP_RepositoryId, _0_org.asam.ods._d_T_DCOMPLEX, _0_org.asam.ods._tc_T_DCOMPLEX)
del T_DCOMPLEX

# struct NameUnit
_0_org.asam.ods.NameUnit = omniORB.newEmptyClass()
class NameUnit (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/NameUnit:1.0"

    def __init__(self, valName, unit):
        self.valName = valName
        self.unit = unit

_0_org.asam.ods.NameUnit = NameUnit
_0_org.asam.ods._d_NameUnit  = (omniORB.tcInternal.tv_struct, NameUnit, NameUnit._NP_RepositoryId, "NameUnit", "valName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], "unit", omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"])
_0_org.asam.ods._tc_NameUnit = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_NameUnit)
omniORB.registerType(NameUnit._NP_RepositoryId, _0_org.asam.ods._d_NameUnit, _0_org.asam.ods._tc_NameUnit)
del NameUnit

# struct T_ExternalReference
_0_org.asam.ods.T_ExternalReference = omniORB.newEmptyClass()
class T_ExternalReference (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/T_ExternalReference:1.0"

    def __init__(self, description, mimeType, location):
        self.description = description
        self.mimeType = mimeType
        self.location = location

_0_org.asam.ods.T_ExternalReference = T_ExternalReference
_0_org.asam.ods._d_T_ExternalReference  = (omniORB.tcInternal.tv_struct, T_ExternalReference, T_ExternalReference._NP_RepositoryId, "T_ExternalReference", "description", omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], "mimeType", omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], "location", omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"])
_0_org.asam.ods._tc_T_ExternalReference = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_T_ExternalReference)
omniORB.registerType(T_ExternalReference._NP_RepositoryId, _0_org.asam.ods._d_T_ExternalReference, _0_org.asam.ods._tc_T_ExternalReference)
del T_ExternalReference

# struct ApplAttr
_0_org.asam.ods.ApplAttr = omniORB.newEmptyClass()
class ApplAttr (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/ApplAttr:1.0"

    def __init__(self, aaName, baName, dType, length, isObligatory, isUnique, unitId):
        self.aaName = aaName
        self.baName = baName
        self.dType = dType
        self.length = length
        self.isObligatory = isObligatory
        self.isUnique = isUnique
        self.unitId = unitId

_0_org.asam.ods.ApplAttr = ApplAttr
_0_org.asam.ods._d_ApplAttr  = (omniORB.tcInternal.tv_struct, ApplAttr, ApplAttr._NP_RepositoryId, "ApplAttr", "aaName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], "baName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], "dType", omniORB.typeMapping["IDL:org/asam/ods/DataType:1.0"], "length", omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], "isObligatory", omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], "isUnique", omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], "unitId", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"])
_0_org.asam.ods._tc_ApplAttr = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ApplAttr)
omniORB.registerType(ApplAttr._NP_RepositoryId, _0_org.asam.ods._d_ApplAttr, _0_org.asam.ods._tc_ApplAttr)
del ApplAttr

# struct ApplRel
_0_org.asam.ods.ApplRel = omniORB.newEmptyClass()
class ApplRel (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/ApplRel:1.0"

    def __init__(self, elem1, elem2, arName, invName, brName, invBrName, arRelationType, arRelationRange, invRelationRange):
        self.elem1 = elem1
        self.elem2 = elem2
        self.arName = arName
        self.invName = invName
        self.brName = brName
        self.invBrName = invBrName
        self.arRelationType = arRelationType
        self.arRelationRange = arRelationRange
        self.invRelationRange = invRelationRange

_0_org.asam.ods.ApplRel = ApplRel
_0_org.asam.ods._d_ApplRel  = (omniORB.tcInternal.tv_struct, ApplRel, ApplRel._NP_RepositoryId, "ApplRel", "elem1", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], "elem2", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], "arName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], "invName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], "brName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], "invBrName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], "arRelationType", omniORB.typeMapping["IDL:org/asam/ods/RelationType:1.0"], "arRelationRange", omniORB.typeMapping["IDL:org/asam/ods/RelationRange:1.0"], "invRelationRange", omniORB.typeMapping["IDL:org/asam/ods/RelationRange:1.0"])
_0_org.asam.ods._tc_ApplRel = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ApplRel)
omniORB.registerType(ApplRel._NP_RepositoryId, _0_org.asam.ods._d_ApplRel, _0_org.asam.ods._tc_ApplRel)
del ApplRel

# struct AIDName
_0_org.asam.ods.AIDName = omniORB.newEmptyClass()
class AIDName (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/AIDName:1.0"

    def __init__(self, aid, aaName):
        self.aid = aid
        self.aaName = aaName

_0_org.asam.ods.AIDName = AIDName
_0_org.asam.ods._d_AIDName  = (omniORB.tcInternal.tv_struct, AIDName, AIDName._NP_RepositoryId, "AIDName", "aid", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], "aaName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"])
_0_org.asam.ods._tc_AIDName = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_AIDName)
omniORB.registerType(AIDName._NP_RepositoryId, _0_org.asam.ods._d_AIDName, _0_org.asam.ods._tc_AIDName)
del AIDName

# struct ElemId
_0_org.asam.ods.ElemId = omniORB.newEmptyClass()
class ElemId (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/ElemId:1.0"

    def __init__(self, aid, iid):
        self.aid = aid
        self.iid = iid

_0_org.asam.ods.ElemId = ElemId
_0_org.asam.ods._d_ElemId  = (omniORB.tcInternal.tv_struct, ElemId, ElemId._NP_RepositoryId, "ElemId", "aid", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], "iid", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"])
_0_org.asam.ods._tc_ElemId = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ElemId)
omniORB.registerType(ElemId._NP_RepositoryId, _0_org.asam.ods._d_ElemId, _0_org.asam.ods._tc_ElemId)
del ElemId

# struct AIDNameUnitId
_0_org.asam.ods.AIDNameUnitId = omniORB.newEmptyClass()
class AIDNameUnitId (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/AIDNameUnitId:1.0"

    def __init__(self, attr, unitId):
        self.attr = attr
        self.unitId = unitId

_0_org.asam.ods.AIDNameUnitId = AIDNameUnitId
_0_org.asam.ods._d_AIDNameUnitId  = (omniORB.tcInternal.tv_struct, AIDNameUnitId, AIDNameUnitId._NP_RepositoryId, "AIDNameUnitId", "attr", omniORB.typeMapping["IDL:org/asam/ods/AIDName:1.0"], "unitId", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"])
_0_org.asam.ods._tc_AIDNameUnitId = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_AIDNameUnitId)
omniORB.registerType(AIDNameUnitId._NP_RepositoryId, _0_org.asam.ods._d_AIDNameUnitId, _0_org.asam.ods._tc_AIDNameUnitId)
del AIDNameUnitId

# struct SelOrder
_0_org.asam.ods.SelOrder = omniORB.newEmptyClass()
class SelOrder (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/SelOrder:1.0"

    def __init__(self, attr, ascending):
        self.attr = attr
        self.ascending = ascending

_0_org.asam.ods.SelOrder = SelOrder
_0_org.asam.ods._d_SelOrder  = (omniORB.tcInternal.tv_struct, SelOrder, SelOrder._NP_RepositoryId, "SelOrder", "attr", omniORB.typeMapping["IDL:org/asam/ods/AIDName:1.0"], "ascending", omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"])
_0_org.asam.ods._tc_SelOrder = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_SelOrder)
omniORB.registerType(SelOrder._NP_RepositoryId, _0_org.asam.ods._d_SelOrder, _0_org.asam.ods._tc_SelOrder)
del SelOrder

# struct ACL
_0_org.asam.ods.ACL = omniORB.newEmptyClass()
class ACL (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/ACL:1.0"

    def __init__(self, usergroupId, rights):
        self.usergroupId = usergroupId
        self.rights = rights

_0_org.asam.ods.ACL = ACL
_0_org.asam.ods._d_ACL  = (omniORB.tcInternal.tv_struct, ACL, ACL._NP_RepositoryId, "ACL", "usergroupId", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], "rights", omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"])
_0_org.asam.ods._tc_ACL = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ACL)
omniORB.registerType(ACL._NP_RepositoryId, _0_org.asam.ods._d_ACL, _0_org.asam.ods._tc_ACL)
del ACL

# struct InitialRight
_0_org.asam.ods.InitialRight = omniORB.newEmptyClass()
class InitialRight (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/InitialRight:1.0"

    def __init__(self, rights, usergroupId, refAid):
        self.rights = rights
        self.usergroupId = usergroupId
        self.refAid = refAid

_0_org.asam.ods.InitialRight = InitialRight
_0_org.asam.ods._d_InitialRight  = (omniORB.tcInternal.tv_struct, InitialRight, InitialRight._NP_RepositoryId, "InitialRight", "rights", omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], "usergroupId", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], "refAid", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"])
_0_org.asam.ods._tc_InitialRight = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_InitialRight)
omniORB.registerType(InitialRight._NP_RepositoryId, _0_org.asam.ods._d_InitialRight, _0_org.asam.ods._tc_InitialRight)
del InitialRight

# struct SelAIDNameUnitId
_0_org.asam.ods.SelAIDNameUnitId = omniORB.newEmptyClass()
class SelAIDNameUnitId (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/SelAIDNameUnitId:1.0"

    def __init__(self, attr, unitId, aggregate):
        self.attr = attr
        self.unitId = unitId
        self.aggregate = aggregate

_0_org.asam.ods.SelAIDNameUnitId = SelAIDNameUnitId
_0_org.asam.ods._d_SelAIDNameUnitId  = (omniORB.tcInternal.tv_struct, SelAIDNameUnitId, SelAIDNameUnitId._NP_RepositoryId, "SelAIDNameUnitId", "attr", omniORB.typeMapping["IDL:org/asam/ods/AIDName:1.0"], "unitId", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], "aggregate", omniORB.typeMapping["IDL:org/asam/ods/AggrFunc:1.0"])
_0_org.asam.ods._tc_SelAIDNameUnitId = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_SelAIDNameUnitId)
omniORB.registerType(SelAIDNameUnitId._NP_RepositoryId, _0_org.asam.ods._d_SelAIDNameUnitId, _0_org.asam.ods._tc_SelAIDNameUnitId)
del SelAIDNameUnitId

# struct JoinDef
_0_org.asam.ods.JoinDef = omniORB.newEmptyClass()
class JoinDef (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/JoinDef:1.0"

    def __init__(self, fromAID, toAID, refName, joiningType):
        self.fromAID = fromAID
        self.toAID = toAID
        self.refName = refName
        self.joiningType = joiningType

_0_org.asam.ods.JoinDef = JoinDef
_0_org.asam.ods._d_JoinDef  = (omniORB.tcInternal.tv_struct, JoinDef, JoinDef._NP_RepositoryId, "JoinDef", "fromAID", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], "toAID", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], "refName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], "joiningType", omniORB.typeMapping["IDL:org/asam/ods/JoinType:1.0"])
_0_org.asam.ods._tc_JoinDef = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_JoinDef)
omniORB.registerType(JoinDef._NP_RepositoryId, _0_org.asam.ods._d_JoinDef, _0_org.asam.ods._tc_JoinDef)
del JoinDef

# struct ApplicationRelationInstanceElementSeq
_0_org.asam.ods.ApplicationRelationInstanceElementSeq = omniORB.newEmptyClass()
class ApplicationRelationInstanceElementSeq (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/ApplicationRelationInstanceElementSeq:1.0"

    def __init__(self, applRel, instances):
        self.applRel = applRel
        self.instances = instances

_0_org.asam.ods.ApplicationRelationInstanceElementSeq = ApplicationRelationInstanceElementSeq
_0_org.asam.ods._d_ApplicationRelationInstanceElementSeq  = (omniORB.tcInternal.tv_struct, ApplicationRelationInstanceElementSeq, ApplicationRelationInstanceElementSeq._NP_RepositoryId, "ApplicationRelationInstanceElementSeq", "applRel", omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelation:1.0"], "instances", omniORB.typeMapping["IDL:org/asam/ods/InstanceElementSequence:1.0"])
_0_org.asam.ods._tc_ApplicationRelationInstanceElementSeq = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ApplicationRelationInstanceElementSeq)
omniORB.registerType(ApplicationRelationInstanceElementSeq._NP_RepositoryId, _0_org.asam.ods._d_ApplicationRelationInstanceElementSeq, _0_org.asam.ods._tc_ApplicationRelationInstanceElementSeq)
del ApplicationRelationInstanceElementSeq

# struct EnumerationAttributeStructure
_0_org.asam.ods.EnumerationAttributeStructure = omniORB.newEmptyClass()
class EnumerationAttributeStructure (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/EnumerationAttributeStructure:1.0"

    def __init__(self, aid, aaName, enumName):
        self.aid = aid
        self.aaName = aaName
        self.enumName = enumName

_0_org.asam.ods.EnumerationAttributeStructure = EnumerationAttributeStructure
_0_org.asam.ods._d_EnumerationAttributeStructure  = (omniORB.tcInternal.tv_struct, EnumerationAttributeStructure, EnumerationAttributeStructure._NP_RepositoryId, "EnumerationAttributeStructure", "aid", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], "aaName", omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], "enumName", omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"])
_0_org.asam.ods._tc_EnumerationAttributeStructure = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_EnumerationAttributeStructure)
omniORB.registerType(EnumerationAttributeStructure._NP_RepositoryId, _0_org.asam.ods._d_EnumerationAttributeStructure, _0_org.asam.ods._tc_EnumerationAttributeStructure)
del EnumerationAttributeStructure

# struct EnumerationItemStructure
_0_org.asam.ods.EnumerationItemStructure = omniORB.newEmptyClass()
class EnumerationItemStructure (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/EnumerationItemStructure:1.0"

    def __init__(self, index, itemName):
        self.index = index
        self.itemName = itemName

_0_org.asam.ods.EnumerationItemStructure = EnumerationItemStructure
_0_org.asam.ods._d_EnumerationItemStructure  = (omniORB.tcInternal.tv_struct, EnumerationItemStructure, EnumerationItemStructure._NP_RepositoryId, "EnumerationItemStructure", "index", omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], "itemName", omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"])
_0_org.asam.ods._tc_EnumerationItemStructure = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_EnumerationItemStructure)
omniORB.registerType(EnumerationItemStructure._NP_RepositoryId, _0_org.asam.ods._d_EnumerationItemStructure, _0_org.asam.ods._tc_EnumerationItemStructure)
del EnumerationItemStructure

# typedef ... EnumerationAttributeStructureSequence
class EnumerationAttributeStructureSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/EnumerationAttributeStructureSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.EnumerationAttributeStructureSequence = EnumerationAttributeStructureSequence
_0_org.asam.ods._d_EnumerationAttributeStructureSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/EnumerationAttributeStructure:1.0"], 0)
_0_org.asam.ods._ad_EnumerationAttributeStructureSequence = (omniORB.tcInternal.tv_alias, EnumerationAttributeStructureSequence._NP_RepositoryId, "EnumerationAttributeStructureSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/EnumerationAttributeStructure:1.0"], 0))
_0_org.asam.ods._tc_EnumerationAttributeStructureSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_EnumerationAttributeStructureSequence)
omniORB.registerType(EnumerationAttributeStructureSequence._NP_RepositoryId, _0_org.asam.ods._ad_EnumerationAttributeStructureSequence, _0_org.asam.ods._tc_EnumerationAttributeStructureSequence)
del EnumerationAttributeStructureSequence

# typedef ... EnumerationItemStructureSequence
class EnumerationItemStructureSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/EnumerationItemStructureSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.EnumerationItemStructureSequence = EnumerationItemStructureSequence
_0_org.asam.ods._d_EnumerationItemStructureSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/EnumerationItemStructure:1.0"], 0)
_0_org.asam.ods._ad_EnumerationItemStructureSequence = (omniORB.tcInternal.tv_alias, EnumerationItemStructureSequence._NP_RepositoryId, "EnumerationItemStructureSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/EnumerationItemStructure:1.0"], 0))
_0_org.asam.ods._tc_EnumerationItemStructureSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_EnumerationItemStructureSequence)
omniORB.registerType(EnumerationItemStructureSequence._NP_RepositoryId, _0_org.asam.ods._ad_EnumerationItemStructureSequence, _0_org.asam.ods._tc_EnumerationItemStructureSequence)
del EnumerationItemStructureSequence

# typedef ... S_COMPLEX
class S_COMPLEX:
    _NP_RepositoryId = "IDL:org/asam/ods/S_COMPLEX:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.S_COMPLEX = S_COMPLEX
_0_org.asam.ods._d_S_COMPLEX  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_COMPLEX:1.0"], 0)
_0_org.asam.ods._ad_S_COMPLEX = (omniORB.tcInternal.tv_alias, S_COMPLEX._NP_RepositoryId, "S_COMPLEX", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_COMPLEX:1.0"], 0))
_0_org.asam.ods._tc_S_COMPLEX = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_S_COMPLEX)
omniORB.registerType(S_COMPLEX._NP_RepositoryId, _0_org.asam.ods._ad_S_COMPLEX, _0_org.asam.ods._tc_S_COMPLEX)
del S_COMPLEX

# typedef ... S_DCOMPLEX
class S_DCOMPLEX:
    _NP_RepositoryId = "IDL:org/asam/ods/S_DCOMPLEX:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.S_DCOMPLEX = S_DCOMPLEX
_0_org.asam.ods._d_S_DCOMPLEX  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_DCOMPLEX:1.0"], 0)
_0_org.asam.ods._ad_S_DCOMPLEX = (omniORB.tcInternal.tv_alias, S_DCOMPLEX._NP_RepositoryId, "S_DCOMPLEX", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_DCOMPLEX:1.0"], 0))
_0_org.asam.ods._tc_S_DCOMPLEX = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_S_DCOMPLEX)
omniORB.registerType(S_DCOMPLEX._NP_RepositoryId, _0_org.asam.ods._ad_S_DCOMPLEX, _0_org.asam.ods._tc_S_DCOMPLEX)
del S_DCOMPLEX

# typedef ... S_LONGLONG
class S_LONGLONG:
    _NP_RepositoryId = "IDL:org/asam/ods/S_LONGLONG:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.S_LONGLONG = S_LONGLONG
_0_org.asam.ods._d_S_LONGLONG  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], 0)
_0_org.asam.ods._ad_S_LONGLONG = (omniORB.tcInternal.tv_alias, S_LONGLONG._NP_RepositoryId, "S_LONGLONG", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], 0))
_0_org.asam.ods._tc_S_LONGLONG = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_S_LONGLONG)
omniORB.registerType(S_LONGLONG._NP_RepositoryId, _0_org.asam.ods._ad_S_LONGLONG, _0_org.asam.ods._tc_S_LONGLONG)
del S_LONGLONG

# typedef ... SS_LONGLONG
class SS_LONGLONG:
    _NP_RepositoryId = "IDL:org/asam/ods/SS_LONGLONG:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SS_LONGLONG = SS_LONGLONG
_0_org.asam.ods._d_SS_LONGLONG  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_LONGLONG:1.0"], 0)
_0_org.asam.ods._ad_SS_LONGLONG = (omniORB.tcInternal.tv_alias, SS_LONGLONG._NP_RepositoryId, "SS_LONGLONG", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_LONGLONG:1.0"], 0))
_0_org.asam.ods._tc_SS_LONGLONG = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SS_LONGLONG)
omniORB.registerType(SS_LONGLONG._NP_RepositoryId, _0_org.asam.ods._ad_SS_LONGLONG, _0_org.asam.ods._tc_SS_LONGLONG)
del SS_LONGLONG

# typedef ... SS_COMPLEX
class SS_COMPLEX:
    _NP_RepositoryId = "IDL:org/asam/ods/SS_COMPLEX:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SS_COMPLEX = SS_COMPLEX
_0_org.asam.ods._d_SS_COMPLEX  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_COMPLEX:1.0"], 0)
_0_org.asam.ods._ad_SS_COMPLEX = (omniORB.tcInternal.tv_alias, SS_COMPLEX._NP_RepositoryId, "SS_COMPLEX", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_COMPLEX:1.0"], 0))
_0_org.asam.ods._tc_SS_COMPLEX = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SS_COMPLEX)
omniORB.registerType(SS_COMPLEX._NP_RepositoryId, _0_org.asam.ods._ad_SS_COMPLEX, _0_org.asam.ods._tc_SS_COMPLEX)
del SS_COMPLEX

# typedef ... SS_DCOMPLEX
class SS_DCOMPLEX:
    _NP_RepositoryId = "IDL:org/asam/ods/SS_DCOMPLEX:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SS_DCOMPLEX = SS_DCOMPLEX
_0_org.asam.ods._d_SS_DCOMPLEX  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_DCOMPLEX:1.0"], 0)
_0_org.asam.ods._ad_SS_DCOMPLEX = (omniORB.tcInternal.tv_alias, SS_DCOMPLEX._NP_RepositoryId, "SS_DCOMPLEX", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_DCOMPLEX:1.0"], 0))
_0_org.asam.ods._tc_SS_DCOMPLEX = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SS_DCOMPLEX)
omniORB.registerType(SS_DCOMPLEX._NP_RepositoryId, _0_org.asam.ods._ad_SS_DCOMPLEX, _0_org.asam.ods._tc_SS_DCOMPLEX)
del SS_DCOMPLEX

# typedef ... S_ExternalReference
class S_ExternalReference:
    _NP_RepositoryId = "IDL:org/asam/ods/S_ExternalReference:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.S_ExternalReference = S_ExternalReference
_0_org.asam.ods._d_S_ExternalReference  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_ExternalReference:1.0"], 0)
_0_org.asam.ods._ad_S_ExternalReference = (omniORB.tcInternal.tv_alias, S_ExternalReference._NP_RepositoryId, "S_ExternalReference", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/T_ExternalReference:1.0"], 0))
_0_org.asam.ods._tc_S_ExternalReference = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_S_ExternalReference)
omniORB.registerType(S_ExternalReference._NP_RepositoryId, _0_org.asam.ods._ad_S_ExternalReference, _0_org.asam.ods._tc_S_ExternalReference)
del S_ExternalReference

# typedef ... SS_ExternalReference
class SS_ExternalReference:
    _NP_RepositoryId = "IDL:org/asam/ods/SS_ExternalReference:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SS_ExternalReference = SS_ExternalReference
_0_org.asam.ods._d_SS_ExternalReference  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_ExternalReference:1.0"], 0)
_0_org.asam.ods._ad_SS_ExternalReference = (omniORB.tcInternal.tv_alias, SS_ExternalReference._NP_RepositoryId, "SS_ExternalReference", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/S_ExternalReference:1.0"], 0))
_0_org.asam.ods._tc_SS_ExternalReference = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SS_ExternalReference)
omniORB.registerType(SS_ExternalReference._NP_RepositoryId, _0_org.asam.ods._ad_SS_ExternalReference, _0_org.asam.ods._tc_SS_ExternalReference)
del SS_ExternalReference

# typedef ... ApplAttrSequence
class ApplAttrSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/ApplAttrSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.ApplAttrSequence = ApplAttrSequence
_0_org.asam.ods._d_ApplAttrSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ApplAttr:1.0"], 0)
_0_org.asam.ods._ad_ApplAttrSequence = (omniORB.tcInternal.tv_alias, ApplAttrSequence._NP_RepositoryId, "ApplAttrSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ApplAttr:1.0"], 0))
_0_org.asam.ods._tc_ApplAttrSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_ApplAttrSequence)
omniORB.registerType(ApplAttrSequence._NP_RepositoryId, _0_org.asam.ods._ad_ApplAttrSequence, _0_org.asam.ods._tc_ApplAttrSequence)
del ApplAttrSequence

# typedef ... ApplRelSequence
class ApplRelSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/ApplRelSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.ApplRelSequence = ApplRelSequence
_0_org.asam.ods._d_ApplRelSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ApplRel:1.0"], 0)
_0_org.asam.ods._ad_ApplRelSequence = (omniORB.tcInternal.tv_alias, ApplRelSequence._NP_RepositoryId, "ApplRelSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ApplRel:1.0"], 0))
_0_org.asam.ods._tc_ApplRelSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_ApplRelSequence)
omniORB.registerType(ApplRelSequence._NP_RepositoryId, _0_org.asam.ods._ad_ApplRelSequence, _0_org.asam.ods._tc_ApplRelSequence)
del ApplRelSequence

# typedef ... AIDNameSequence
class AIDNameSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/AIDNameSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.AIDNameSequence = AIDNameSequence
_0_org.asam.ods._d_AIDNameSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/AIDName:1.0"], 0)
_0_org.asam.ods._ad_AIDNameSequence = (omniORB.tcInternal.tv_alias, AIDNameSequence._NP_RepositoryId, "AIDNameSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/AIDName:1.0"], 0))
_0_org.asam.ods._tc_AIDNameSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_AIDNameSequence)
omniORB.registerType(AIDNameSequence._NP_RepositoryId, _0_org.asam.ods._ad_AIDNameSequence, _0_org.asam.ods._tc_AIDNameSequence)
del AIDNameSequence

# typedef ... AIDNameUnitIdSequence
class AIDNameUnitIdSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/AIDNameUnitIdSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.AIDNameUnitIdSequence = AIDNameUnitIdSequence
_0_org.asam.ods._d_AIDNameUnitIdSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/AIDNameUnitId:1.0"], 0)
_0_org.asam.ods._ad_AIDNameUnitIdSequence = (omniORB.tcInternal.tv_alias, AIDNameUnitIdSequence._NP_RepositoryId, "AIDNameUnitIdSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/AIDNameUnitId:1.0"], 0))
_0_org.asam.ods._tc_AIDNameUnitIdSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_AIDNameUnitIdSequence)
omniORB.registerType(AIDNameUnitIdSequence._NP_RepositoryId, _0_org.asam.ods._ad_AIDNameUnitIdSequence, _0_org.asam.ods._tc_AIDNameUnitIdSequence)
del AIDNameUnitIdSequence

# typedef ... ElemIdSequence
class ElemIdSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/ElemIdSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.ElemIdSequence = ElemIdSequence
_0_org.asam.ods._d_ElemIdSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ElemId:1.0"], 0)
_0_org.asam.ods._ad_ElemIdSequence = (omniORB.tcInternal.tv_alias, ElemIdSequence._NP_RepositoryId, "ElemIdSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ElemId:1.0"], 0))
_0_org.asam.ods._tc_ElemIdSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_ElemIdSequence)
omniORB.registerType(ElemIdSequence._NP_RepositoryId, _0_org.asam.ods._ad_ElemIdSequence, _0_org.asam.ods._tc_ElemIdSequence)
del ElemIdSequence

# typedef ... SelOrderSequence
class SelOrderSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/SelOrderSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SelOrderSequence = SelOrderSequence
_0_org.asam.ods._d_SelOrderSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/SelOrder:1.0"], 0)
_0_org.asam.ods._ad_SelOrderSequence = (omniORB.tcInternal.tv_alias, SelOrderSequence._NP_RepositoryId, "SelOrderSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/SelOrder:1.0"], 0))
_0_org.asam.ods._tc_SelOrderSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SelOrderSequence)
omniORB.registerType(SelOrderSequence._NP_RepositoryId, _0_org.asam.ods._ad_SelOrderSequence, _0_org.asam.ods._tc_SelOrderSequence)
del SelOrderSequence

# typedef ... ACLSequence
class ACLSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/ACLSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.ACLSequence = ACLSequence
_0_org.asam.ods._d_ACLSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ACL:1.0"], 0)
_0_org.asam.ods._ad_ACLSequence = (omniORB.tcInternal.tv_alias, ACLSequence._NP_RepositoryId, "ACLSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ACL:1.0"], 0))
_0_org.asam.ods._tc_ACLSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_ACLSequence)
omniORB.registerType(ACLSequence._NP_RepositoryId, _0_org.asam.ods._ad_ACLSequence, _0_org.asam.ods._tc_ACLSequence)
del ACLSequence

# typedef ... InitialRightSequence
class InitialRightSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/InitialRightSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.InitialRightSequence = InitialRightSequence
_0_org.asam.ods._d_InitialRightSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/InitialRight:1.0"], 0)
_0_org.asam.ods._ad_InitialRightSequence = (omniORB.tcInternal.tv_alias, InitialRightSequence._NP_RepositoryId, "InitialRightSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/InitialRight:1.0"], 0))
_0_org.asam.ods._tc_InitialRightSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_InitialRightSequence)
omniORB.registerType(InitialRightSequence._NP_RepositoryId, _0_org.asam.ods._ad_InitialRightSequence, _0_org.asam.ods._tc_InitialRightSequence)
del InitialRightSequence

# typedef ... SelAIDNameUnitIdSequence
class SelAIDNameUnitIdSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/SelAIDNameUnitIdSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SelAIDNameUnitIdSequence = SelAIDNameUnitIdSequence
_0_org.asam.ods._d_SelAIDNameUnitIdSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/SelAIDNameUnitId:1.0"], 0)
_0_org.asam.ods._ad_SelAIDNameUnitIdSequence = (omniORB.tcInternal.tv_alias, SelAIDNameUnitIdSequence._NP_RepositoryId, "SelAIDNameUnitIdSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/SelAIDNameUnitId:1.0"], 0))
_0_org.asam.ods._tc_SelAIDNameUnitIdSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SelAIDNameUnitIdSequence)
omniORB.registerType(SelAIDNameUnitIdSequence._NP_RepositoryId, _0_org.asam.ods._ad_SelAIDNameUnitIdSequence, _0_org.asam.ods._tc_SelAIDNameUnitIdSequence)
del SelAIDNameUnitIdSequence

# typedef ... JoinDefSequence
class JoinDefSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/JoinDefSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.JoinDefSequence = JoinDefSequence
_0_org.asam.ods._d_JoinDefSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/JoinDef:1.0"], 0)
_0_org.asam.ods._ad_JoinDefSequence = (omniORB.tcInternal.tv_alias, JoinDefSequence._NP_RepositoryId, "JoinDefSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/JoinDef:1.0"], 0))
_0_org.asam.ods._tc_JoinDefSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_JoinDefSequence)
omniORB.registerType(JoinDefSequence._NP_RepositoryId, _0_org.asam.ods._ad_JoinDefSequence, _0_org.asam.ods._tc_JoinDefSequence)
del JoinDefSequence

# typedef ... ApplicationRelationInstanceElementSeqSequence
class ApplicationRelationInstanceElementSeqSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/ApplicationRelationInstanceElementSeqSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.ApplicationRelationInstanceElementSeqSequence = ApplicationRelationInstanceElementSeqSequence
_0_org.asam.ods._d_ApplicationRelationInstanceElementSeqSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelationInstanceElementSeq:1.0"], 0)
_0_org.asam.ods._ad_ApplicationRelationInstanceElementSeqSequence = (omniORB.tcInternal.tv_alias, ApplicationRelationInstanceElementSeqSequence._NP_RepositoryId, "ApplicationRelationInstanceElementSeqSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelationInstanceElementSeq:1.0"], 0))
_0_org.asam.ods._tc_ApplicationRelationInstanceElementSeqSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_ApplicationRelationInstanceElementSeqSequence)
omniORB.registerType(ApplicationRelationInstanceElementSeqSequence._NP_RepositoryId, _0_org.asam.ods._ad_ApplicationRelationInstanceElementSeqSequence, _0_org.asam.ods._tc_ApplicationRelationInstanceElementSeqSequence)
del ApplicationRelationInstanceElementSeqSequence

# struct ApplElem
_0_org.asam.ods.ApplElem = omniORB.newEmptyClass()
class ApplElem (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/ApplElem:1.0"

    def __init__(self, aid, beName, aeName, attributes):
        self.aid = aid
        self.beName = beName
        self.aeName = aeName
        self.attributes = attributes

_0_org.asam.ods.ApplElem = ApplElem
_0_org.asam.ods._d_ApplElem  = (omniORB.tcInternal.tv_struct, ApplElem, ApplElem._NP_RepositoryId, "ApplElem", "aid", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], "beName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], "aeName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], "attributes", omniORB.typeMapping["IDL:org/asam/ods/ApplAttrSequence:1.0"])
_0_org.asam.ods._tc_ApplElem = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ApplElem)
omniORB.registerType(ApplElem._NP_RepositoryId, _0_org.asam.ods._d_ApplElem, _0_org.asam.ods._tc_ApplElem)
del ApplElem

# struct EnumerationStructure
_0_org.asam.ods.EnumerationStructure = omniORB.newEmptyClass()
class EnumerationStructure (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/EnumerationStructure:1.0"

    def __init__(self, enumName, items):
        self.enumName = enumName
        self.items = items

_0_org.asam.ods.EnumerationStructure = EnumerationStructure
_0_org.asam.ods._d_EnumerationStructure  = (omniORB.tcInternal.tv_struct, EnumerationStructure, EnumerationStructure._NP_RepositoryId, "EnumerationStructure", "enumName", omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], "items", omniORB.typeMapping["IDL:org/asam/ods/EnumerationItemStructureSequence:1.0"])
_0_org.asam.ods._tc_EnumerationStructure = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_EnumerationStructure)
omniORB.registerType(EnumerationStructure._NP_RepositoryId, _0_org.asam.ods._d_EnumerationStructure, _0_org.asam.ods._tc_EnumerationStructure)
del EnumerationStructure

# union TS_Union
_0_org.asam.ods.TS_Union = omniORB.newEmptyClass()
class TS_Union (omniORB.Union):
    _NP_RepositoryId = "IDL:org/asam/ods/TS_Union:1.0"

_0_org.asam.ods.TS_Union = TS_Union

TS_Union._m_to_d = {"stringVal": _0_org.asam.ods.DT_STRING, "shortVal": _0_org.asam.ods.DT_SHORT, "floatVal": _0_org.asam.ods.DT_FLOAT, "byteVal": _0_org.asam.ods.DT_BYTE, "booleanVal": _0_org.asam.ods.DT_BOOLEAN, "longVal": _0_org.asam.ods.DT_LONG, "doubleVal": _0_org.asam.ods.DT_DOUBLE, "longlongVal": _0_org.asam.ods.DT_LONGLONG, "complexVal": _0_org.asam.ods.DT_COMPLEX, "dcomplexVal": _0_org.asam.ods.DT_DCOMPLEX, "dateVal": _0_org.asam.ods.DT_DATE, "bytestrVal": _0_org.asam.ods.DT_BYTESTR, "blobVal": _0_org.asam.ods.DT_BLOB, "stringSeq": _0_org.asam.ods.DS_STRING, "shortSeq": _0_org.asam.ods.DS_SHORT, "floatSeq": _0_org.asam.ods.DS_FLOAT, "byteSeq": _0_org.asam.ods.DS_BYTE, "booleanSeq": _0_org.asam.ods.DS_BOOLEAN, "longSeq": _0_org.asam.ods.DS_LONG, "doubleSeq": _0_org.asam.ods.DS_DOUBLE, "longlongSeq": _0_org.asam.ods.DS_LONGLONG, "complexSeq": _0_org.asam.ods.DS_COMPLEX, "dcomplexSeq": _0_org.asam.ods.DS_DCOMPLEX, "dateSeq": _0_org.asam.ods.DS_DATE, "bytestrSeq": _0_org.asam.ods.DS_BYTESTR, "extRefVal": _0_org.asam.ods.DT_EXTERNALREFERENCE, "extRefSeq": _0_org.asam.ods.DS_EXTERNALREFERENCE, "enumVal": _0_org.asam.ods.DT_ENUM, "enumSeq": _0_org.asam.ods.DS_ENUM}
TS_Union._d_to_m = {_0_org.asam.ods.DT_STRING: "stringVal", _0_org.asam.ods.DT_SHORT: "shortVal", _0_org.asam.ods.DT_FLOAT: "floatVal", _0_org.asam.ods.DT_BYTE: "byteVal", _0_org.asam.ods.DT_BOOLEAN: "booleanVal", _0_org.asam.ods.DT_LONG: "longVal", _0_org.asam.ods.DT_DOUBLE: "doubleVal", _0_org.asam.ods.DT_LONGLONG: "longlongVal", _0_org.asam.ods.DT_COMPLEX: "complexVal", _0_org.asam.ods.DT_DCOMPLEX: "dcomplexVal", _0_org.asam.ods.DT_DATE: "dateVal", _0_org.asam.ods.DT_BYTESTR: "bytestrVal", _0_org.asam.ods.DT_BLOB: "blobVal", _0_org.asam.ods.DS_STRING: "stringSeq", _0_org.asam.ods.DS_SHORT: "shortSeq", _0_org.asam.ods.DS_FLOAT: "floatSeq", _0_org.asam.ods.DS_BYTE: "byteSeq", _0_org.asam.ods.DS_BOOLEAN: "booleanSeq", _0_org.asam.ods.DS_LONG: "longSeq", _0_org.asam.ods.DS_DOUBLE: "doubleSeq", _0_org.asam.ods.DS_LONGLONG: "longlongSeq", _0_org.asam.ods.DS_COMPLEX: "complexSeq", _0_org.asam.ods.DS_DCOMPLEX: "dcomplexSeq", _0_org.asam.ods.DS_DATE: "dateSeq", _0_org.asam.ods.DS_BYTESTR: "bytestrSeq", _0_org.asam.ods.DT_EXTERNALREFERENCE: "extRefVal", _0_org.asam.ods.DS_EXTERNALREFERENCE: "extRefSeq", _0_org.asam.ods.DT_ENUM: "enumVal", _0_org.asam.ods.DS_ENUM: "enumSeq"}
TS_Union._def_m  = None
TS_Union._def_d  = None

_0_org.asam.ods._m_TS_Union  = ((_0_org.asam.ods.DT_STRING, "stringVal", omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"]), (_0_org.asam.ods.DT_SHORT, "shortVal", omniORB.typeMapping["IDL:org/asam/ods/T_SHORT:1.0"]), (_0_org.asam.ods.DT_FLOAT, "floatVal", omniORB.typeMapping["IDL:org/asam/ods/T_FLOAT:1.0"]), (_0_org.asam.ods.DT_BYTE, "byteVal", omniORB.typeMapping["IDL:org/asam/ods/T_BYTE:1.0"]), (_0_org.asam.ods.DT_BOOLEAN, "booleanVal", omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"]), (_0_org.asam.ods.DT_LONG, "longVal", omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"]), (_0_org.asam.ods.DT_DOUBLE, "doubleVal", omniORB.typeMapping["IDL:org/asam/ods/T_DOUBLE:1.0"]), (_0_org.asam.ods.DT_LONGLONG, "longlongVal", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"]), (_0_org.asam.ods.DT_COMPLEX, "complexVal", omniORB.typeMapping["IDL:org/asam/ods/T_COMPLEX:1.0"]), (_0_org.asam.ods.DT_DCOMPLEX, "dcomplexVal", omniORB.typeMapping["IDL:org/asam/ods/T_DCOMPLEX:1.0"]), (_0_org.asam.ods.DT_DATE, "dateVal", omniORB.typeMapping["IDL:org/asam/ods/T_DATE:1.0"]), (_0_org.asam.ods.DT_BYTESTR, "bytestrVal", omniORB.typeMapping["IDL:org/asam/ods/T_BYTESTR:1.0"]), (_0_org.asam.ods.DT_BLOB, "blobVal", omniORB.typeMapping["IDL:org/asam/ods/T_BLOB:1.0"]), (_0_org.asam.ods.DS_STRING, "stringSeq", omniORB.typeMapping["IDL:org/asam/ods/S_STRING:1.0"]), (_0_org.asam.ods.DS_SHORT, "shortSeq", omniORB.typeMapping["IDL:org/asam/ods/S_SHORT:1.0"]), (_0_org.asam.ods.DS_FLOAT, "floatSeq", omniORB.typeMapping["IDL:org/asam/ods/S_FLOAT:1.0"]), (_0_org.asam.ods.DS_BYTE, "byteSeq", omniORB.typeMapping["IDL:org/asam/ods/S_BYTE:1.0"]), (_0_org.asam.ods.DS_BOOLEAN, "booleanSeq", omniORB.typeMapping["IDL:org/asam/ods/S_BOOLEAN:1.0"]), (_0_org.asam.ods.DS_LONG, "longSeq", omniORB.typeMapping["IDL:org/asam/ods/S_LONG:1.0"]), (_0_org.asam.ods.DS_DOUBLE, "doubleSeq", omniORB.typeMapping["IDL:org/asam/ods/S_DOUBLE:1.0"]), (_0_org.asam.ods.DS_LONGLONG, "longlongSeq", omniORB.typeMapping["IDL:org/asam/ods/S_LONGLONG:1.0"]), (_0_org.asam.ods.DS_COMPLEX, "complexSeq", omniORB.typeMapping["IDL:org/asam/ods/S_COMPLEX:1.0"]), (_0_org.asam.ods.DS_DCOMPLEX, "dcomplexSeq", omniORB.typeMapping["IDL:org/asam/ods/S_DCOMPLEX:1.0"]), (_0_org.asam.ods.DS_DATE, "dateSeq", omniORB.typeMapping["IDL:org/asam/ods/S_DATE:1.0"]), (_0_org.asam.ods.DS_BYTESTR, "bytestrSeq", omniORB.typeMapping["IDL:org/asam/ods/S_BYTESTR:1.0"]), (_0_org.asam.ods.DT_EXTERNALREFERENCE, "extRefVal", omniORB.typeMapping["IDL:org/asam/ods/T_ExternalReference:1.0"]), (_0_org.asam.ods.DS_EXTERNALREFERENCE, "extRefSeq", omniORB.typeMapping["IDL:org/asam/ods/S_ExternalReference:1.0"]), (_0_org.asam.ods.DT_ENUM, "enumVal", omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"]), (_0_org.asam.ods.DS_ENUM, "enumSeq", omniORB.typeMapping["IDL:org/asam/ods/S_LONG:1.0"]),)
_0_org.asam.ods._d_TS_Union  = (omniORB.tcInternal.tv_union, TS_Union, TS_Union._NP_RepositoryId, "TS_Union", omniORB.typeMapping["IDL:org/asam/ods/DataType:1.0"], -1, _0_org.asam.ods._m_TS_Union, None, {_0_org.asam.ods.DT_STRING: _0_org.asam.ods._m_TS_Union[0], _0_org.asam.ods.DT_SHORT: _0_org.asam.ods._m_TS_Union[1], _0_org.asam.ods.DT_FLOAT: _0_org.asam.ods._m_TS_Union[2], _0_org.asam.ods.DT_BYTE: _0_org.asam.ods._m_TS_Union[3], _0_org.asam.ods.DT_BOOLEAN: _0_org.asam.ods._m_TS_Union[4], _0_org.asam.ods.DT_LONG: _0_org.asam.ods._m_TS_Union[5], _0_org.asam.ods.DT_DOUBLE: _0_org.asam.ods._m_TS_Union[6], _0_org.asam.ods.DT_LONGLONG: _0_org.asam.ods._m_TS_Union[7], _0_org.asam.ods.DT_COMPLEX: _0_org.asam.ods._m_TS_Union[8], _0_org.asam.ods.DT_DCOMPLEX: _0_org.asam.ods._m_TS_Union[9], _0_org.asam.ods.DT_DATE: _0_org.asam.ods._m_TS_Union[10], _0_org.asam.ods.DT_BYTESTR: _0_org.asam.ods._m_TS_Union[11], _0_org.asam.ods.DT_BLOB: _0_org.asam.ods._m_TS_Union[12], _0_org.asam.ods.DS_STRING: _0_org.asam.ods._m_TS_Union[13], _0_org.asam.ods.DS_SHORT: _0_org.asam.ods._m_TS_Union[14], _0_org.asam.ods.DS_FLOAT: _0_org.asam.ods._m_TS_Union[15], _0_org.asam.ods.DS_BYTE: _0_org.asam.ods._m_TS_Union[16], _0_org.asam.ods.DS_BOOLEAN: _0_org.asam.ods._m_TS_Union[17], _0_org.asam.ods.DS_LONG: _0_org.asam.ods._m_TS_Union[18], _0_org.asam.ods.DS_DOUBLE: _0_org.asam.ods._m_TS_Union[19], _0_org.asam.ods.DS_LONGLONG: _0_org.asam.ods._m_TS_Union[20], _0_org.asam.ods.DS_COMPLEX: _0_org.asam.ods._m_TS_Union[21], _0_org.asam.ods.DS_DCOMPLEX: _0_org.asam.ods._m_TS_Union[22], _0_org.asam.ods.DS_DATE: _0_org.asam.ods._m_TS_Union[23], _0_org.asam.ods.DS_BYTESTR: _0_org.asam.ods._m_TS_Union[24], _0_org.asam.ods.DT_EXTERNALREFERENCE: _0_org.asam.ods._m_TS_Union[25], _0_org.asam.ods.DS_EXTERNALREFERENCE: _0_org.asam.ods._m_TS_Union[26], _0_org.asam.ods.DT_ENUM: _0_org.asam.ods._m_TS_Union[27], _0_org.asam.ods.DS_ENUM: _0_org.asam.ods._m_TS_Union[28]})
_0_org.asam.ods._tc_TS_Union = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_TS_Union)
omniORB.registerType(TS_Union._NP_RepositoryId, _0_org.asam.ods._d_TS_Union, _0_org.asam.ods._tc_TS_Union)
del TS_Union

# union TS_UnionSeq
_0_org.asam.ods.TS_UnionSeq = omniORB.newEmptyClass()
class TS_UnionSeq (omniORB.Union):
    _NP_RepositoryId = "IDL:org/asam/ods/TS_UnionSeq:1.0"

_0_org.asam.ods.TS_UnionSeq = TS_UnionSeq

TS_UnionSeq._m_to_d = {"stringVal": _0_org.asam.ods.DT_STRING, "shortVal": _0_org.asam.ods.DT_SHORT, "floatVal": _0_org.asam.ods.DT_FLOAT, "byteVal": _0_org.asam.ods.DT_BYTE, "booleanVal": _0_org.asam.ods.DT_BOOLEAN, "longVal": _0_org.asam.ods.DT_LONG, "doubleVal": _0_org.asam.ods.DT_DOUBLE, "longlongVal": _0_org.asam.ods.DT_LONGLONG, "complexVal": _0_org.asam.ods.DT_COMPLEX, "dcomplexVal": _0_org.asam.ods.DT_DCOMPLEX, "dateVal": _0_org.asam.ods.DT_DATE, "bytestrVal": _0_org.asam.ods.DT_BYTESTR, "blobVal": _0_org.asam.ods.DT_BLOB, "stringSeq": _0_org.asam.ods.DS_STRING, "shortSeq": _0_org.asam.ods.DS_SHORT, "floatSeq": _0_org.asam.ods.DS_FLOAT, "byteSeq": _0_org.asam.ods.DS_BYTE, "booleanSeq": _0_org.asam.ods.DS_BOOLEAN, "longSeq": _0_org.asam.ods.DS_LONG, "doubleSeq": _0_org.asam.ods.DS_DOUBLE, "longlongSeq": _0_org.asam.ods.DS_LONGLONG, "complexSeq": _0_org.asam.ods.DS_COMPLEX, "dcomplexSeq": _0_org.asam.ods.DS_DCOMPLEX, "dateSeq": _0_org.asam.ods.DS_DATE, "bytestrSeq": _0_org.asam.ods.DS_BYTESTR, "extRefVal": _0_org.asam.ods.DT_EXTERNALREFERENCE, "extRefSeq": _0_org.asam.ods.DS_EXTERNALREFERENCE, "enumVal": _0_org.asam.ods.DT_ENUM, "enumSeq": _0_org.asam.ods.DS_ENUM}
TS_UnionSeq._d_to_m = {_0_org.asam.ods.DT_STRING: "stringVal", _0_org.asam.ods.DT_SHORT: "shortVal", _0_org.asam.ods.DT_FLOAT: "floatVal", _0_org.asam.ods.DT_BYTE: "byteVal", _0_org.asam.ods.DT_BOOLEAN: "booleanVal", _0_org.asam.ods.DT_LONG: "longVal", _0_org.asam.ods.DT_DOUBLE: "doubleVal", _0_org.asam.ods.DT_LONGLONG: "longlongVal", _0_org.asam.ods.DT_COMPLEX: "complexVal", _0_org.asam.ods.DT_DCOMPLEX: "dcomplexVal", _0_org.asam.ods.DT_DATE: "dateVal", _0_org.asam.ods.DT_BYTESTR: "bytestrVal", _0_org.asam.ods.DT_BLOB: "blobVal", _0_org.asam.ods.DS_STRING: "stringSeq", _0_org.asam.ods.DS_SHORT: "shortSeq", _0_org.asam.ods.DS_FLOAT: "floatSeq", _0_org.asam.ods.DS_BYTE: "byteSeq", _0_org.asam.ods.DS_BOOLEAN: "booleanSeq", _0_org.asam.ods.DS_LONG: "longSeq", _0_org.asam.ods.DS_DOUBLE: "doubleSeq", _0_org.asam.ods.DS_LONGLONG: "longlongSeq", _0_org.asam.ods.DS_COMPLEX: "complexSeq", _0_org.asam.ods.DS_DCOMPLEX: "dcomplexSeq", _0_org.asam.ods.DS_DATE: "dateSeq", _0_org.asam.ods.DS_BYTESTR: "bytestrSeq", _0_org.asam.ods.DT_EXTERNALREFERENCE: "extRefVal", _0_org.asam.ods.DS_EXTERNALREFERENCE: "extRefSeq", _0_org.asam.ods.DT_ENUM: "enumVal", _0_org.asam.ods.DS_ENUM: "enumSeq"}
TS_UnionSeq._def_m  = None
TS_UnionSeq._def_d  = None

_0_org.asam.ods._m_TS_UnionSeq  = ((_0_org.asam.ods.DT_STRING, "stringVal", omniORB.typeMapping["IDL:org/asam/ods/S_STRING:1.0"]), (_0_org.asam.ods.DT_SHORT, "shortVal", omniORB.typeMapping["IDL:org/asam/ods/S_SHORT:1.0"]), (_0_org.asam.ods.DT_FLOAT, "floatVal", omniORB.typeMapping["IDL:org/asam/ods/S_FLOAT:1.0"]), (_0_org.asam.ods.DT_BYTE, "byteVal", omniORB.typeMapping["IDL:org/asam/ods/S_BYTE:1.0"]), (_0_org.asam.ods.DT_BOOLEAN, "booleanVal", omniORB.typeMapping["IDL:org/asam/ods/S_BOOLEAN:1.0"]), (_0_org.asam.ods.DT_LONG, "longVal", omniORB.typeMapping["IDL:org/asam/ods/S_LONG:1.0"]), (_0_org.asam.ods.DT_DOUBLE, "doubleVal", omniORB.typeMapping["IDL:org/asam/ods/S_DOUBLE:1.0"]), (_0_org.asam.ods.DT_LONGLONG, "longlongVal", omniORB.typeMapping["IDL:org/asam/ods/S_LONGLONG:1.0"]), (_0_org.asam.ods.DT_COMPLEX, "complexVal", omniORB.typeMapping["IDL:org/asam/ods/S_COMPLEX:1.0"]), (_0_org.asam.ods.DT_DCOMPLEX, "dcomplexVal", omniORB.typeMapping["IDL:org/asam/ods/S_DCOMPLEX:1.0"]), (_0_org.asam.ods.DT_DATE, "dateVal", omniORB.typeMapping["IDL:org/asam/ods/S_DATE:1.0"]), (_0_org.asam.ods.DT_BYTESTR, "bytestrVal", omniORB.typeMapping["IDL:org/asam/ods/S_BYTESTR:1.0"]), (_0_org.asam.ods.DT_BLOB, "blobVal", omniORB.typeMapping["IDL:org/asam/ods/S_BLOB:1.0"]), (_0_org.asam.ods.DS_STRING, "stringSeq", omniORB.typeMapping["IDL:org/asam/ods/SS_STRING:1.0"]), (_0_org.asam.ods.DS_SHORT, "shortSeq", omniORB.typeMapping["IDL:org/asam/ods/SS_SHORT:1.0"]), (_0_org.asam.ods.DS_FLOAT, "floatSeq", omniORB.typeMapping["IDL:org/asam/ods/SS_FLOAT:1.0"]), (_0_org.asam.ods.DS_BYTE, "byteSeq", omniORB.typeMapping["IDL:org/asam/ods/SS_BYTE:1.0"]), (_0_org.asam.ods.DS_BOOLEAN, "booleanSeq", omniORB.typeMapping["IDL:org/asam/ods/SS_BOOLEAN:1.0"]), (_0_org.asam.ods.DS_LONG, "longSeq", omniORB.typeMapping["IDL:org/asam/ods/SS_LONG:1.0"]), (_0_org.asam.ods.DS_DOUBLE, "doubleSeq", omniORB.typeMapping["IDL:org/asam/ods/SS_DOUBLE:1.0"]), (_0_org.asam.ods.DS_LONGLONG, "longlongSeq", omniORB.typeMapping["IDL:org/asam/ods/SS_LONGLONG:1.0"]), (_0_org.asam.ods.DS_COMPLEX, "complexSeq", omniORB.typeMapping["IDL:org/asam/ods/SS_COMPLEX:1.0"]), (_0_org.asam.ods.DS_DCOMPLEX, "dcomplexSeq", omniORB.typeMapping["IDL:org/asam/ods/SS_DCOMPLEX:1.0"]), (_0_org.asam.ods.DS_DATE, "dateSeq", omniORB.typeMapping["IDL:org/asam/ods/SS_DATE:1.0"]), (_0_org.asam.ods.DS_BYTESTR, "bytestrSeq", omniORB.typeMapping["IDL:org/asam/ods/SS_BYTESTR:1.0"]), (_0_org.asam.ods.DT_EXTERNALREFERENCE, "extRefVal", omniORB.typeMapping["IDL:org/asam/ods/S_ExternalReference:1.0"]), (_0_org.asam.ods.DS_EXTERNALREFERENCE, "extRefSeq", omniORB.typeMapping["IDL:org/asam/ods/SS_ExternalReference:1.0"]), (_0_org.asam.ods.DT_ENUM, "enumVal", omniORB.typeMapping["IDL:org/asam/ods/S_LONG:1.0"]), (_0_org.asam.ods.DS_ENUM, "enumSeq", omniORB.typeMapping["IDL:org/asam/ods/SS_LONG:1.0"]),)
_0_org.asam.ods._d_TS_UnionSeq  = (omniORB.tcInternal.tv_union, TS_UnionSeq, TS_UnionSeq._NP_RepositoryId, "TS_UnionSeq", omniORB.typeMapping["IDL:org/asam/ods/DataType:1.0"], -1, _0_org.asam.ods._m_TS_UnionSeq, None, {_0_org.asam.ods.DT_STRING: _0_org.asam.ods._m_TS_UnionSeq[0], _0_org.asam.ods.DT_SHORT: _0_org.asam.ods._m_TS_UnionSeq[1], _0_org.asam.ods.DT_FLOAT: _0_org.asam.ods._m_TS_UnionSeq[2], _0_org.asam.ods.DT_BYTE: _0_org.asam.ods._m_TS_UnionSeq[3], _0_org.asam.ods.DT_BOOLEAN: _0_org.asam.ods._m_TS_UnionSeq[4], _0_org.asam.ods.DT_LONG: _0_org.asam.ods._m_TS_UnionSeq[5], _0_org.asam.ods.DT_DOUBLE: _0_org.asam.ods._m_TS_UnionSeq[6], _0_org.asam.ods.DT_LONGLONG: _0_org.asam.ods._m_TS_UnionSeq[7], _0_org.asam.ods.DT_COMPLEX: _0_org.asam.ods._m_TS_UnionSeq[8], _0_org.asam.ods.DT_DCOMPLEX: _0_org.asam.ods._m_TS_UnionSeq[9], _0_org.asam.ods.DT_DATE: _0_org.asam.ods._m_TS_UnionSeq[10], _0_org.asam.ods.DT_BYTESTR: _0_org.asam.ods._m_TS_UnionSeq[11], _0_org.asam.ods.DT_BLOB: _0_org.asam.ods._m_TS_UnionSeq[12], _0_org.asam.ods.DS_STRING: _0_org.asam.ods._m_TS_UnionSeq[13], _0_org.asam.ods.DS_SHORT: _0_org.asam.ods._m_TS_UnionSeq[14], _0_org.asam.ods.DS_FLOAT: _0_org.asam.ods._m_TS_UnionSeq[15], _0_org.asam.ods.DS_BYTE: _0_org.asam.ods._m_TS_UnionSeq[16], _0_org.asam.ods.DS_BOOLEAN: _0_org.asam.ods._m_TS_UnionSeq[17], _0_org.asam.ods.DS_LONG: _0_org.asam.ods._m_TS_UnionSeq[18], _0_org.asam.ods.DS_DOUBLE: _0_org.asam.ods._m_TS_UnionSeq[19], _0_org.asam.ods.DS_LONGLONG: _0_org.asam.ods._m_TS_UnionSeq[20], _0_org.asam.ods.DS_COMPLEX: _0_org.asam.ods._m_TS_UnionSeq[21], _0_org.asam.ods.DS_DCOMPLEX: _0_org.asam.ods._m_TS_UnionSeq[22], _0_org.asam.ods.DS_DATE: _0_org.asam.ods._m_TS_UnionSeq[23], _0_org.asam.ods.DS_BYTESTR: _0_org.asam.ods._m_TS_UnionSeq[24], _0_org.asam.ods.DT_EXTERNALREFERENCE: _0_org.asam.ods._m_TS_UnionSeq[25], _0_org.asam.ods.DS_EXTERNALREFERENCE: _0_org.asam.ods._m_TS_UnionSeq[26], _0_org.asam.ods.DT_ENUM: _0_org.asam.ods._m_TS_UnionSeq[27], _0_org.asam.ods.DS_ENUM: _0_org.asam.ods._m_TS_UnionSeq[28]})
_0_org.asam.ods._tc_TS_UnionSeq = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_TS_UnionSeq)
omniORB.registerType(TS_UnionSeq._NP_RepositoryId, _0_org.asam.ods._d_TS_UnionSeq, _0_org.asam.ods._tc_TS_UnionSeq)
del TS_UnionSeq

# typedef ... EnumerationStructureSequence
class EnumerationStructureSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/EnumerationStructureSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.EnumerationStructureSequence = EnumerationStructureSequence
_0_org.asam.ods._d_EnumerationStructureSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/EnumerationStructure:1.0"], 0)
_0_org.asam.ods._ad_EnumerationStructureSequence = (omniORB.tcInternal.tv_alias, EnumerationStructureSequence._NP_RepositoryId, "EnumerationStructureSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/EnumerationStructure:1.0"], 0))
_0_org.asam.ods._tc_EnumerationStructureSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_EnumerationStructureSequence)
omniORB.registerType(EnumerationStructureSequence._NP_RepositoryId, _0_org.asam.ods._ad_EnumerationStructureSequence, _0_org.asam.ods._tc_EnumerationStructureSequence)
del EnumerationStructureSequence

# typedef ... ApplElemSequence
class ApplElemSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/ApplElemSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.ApplElemSequence = ApplElemSequence
_0_org.asam.ods._d_ApplElemSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ApplElem:1.0"], 0)
_0_org.asam.ods._ad_ApplElemSequence = (omniORB.tcInternal.tv_alias, ApplElemSequence._NP_RepositoryId, "ApplElemSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ApplElem:1.0"], 0))
_0_org.asam.ods._tc_ApplElemSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_ApplElemSequence)
omniORB.registerType(ApplElemSequence._NP_RepositoryId, _0_org.asam.ods._ad_ApplElemSequence, _0_org.asam.ods._tc_ApplElemSequence)
del ApplElemSequence

# struct TS_Value
_0_org.asam.ods.TS_Value = omniORB.newEmptyClass()
class TS_Value (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/TS_Value:1.0"

    def __init__(self, u, flag):
        self.u = u
        self.flag = flag

_0_org.asam.ods.TS_Value = TS_Value
_0_org.asam.ods._d_TS_Value  = (omniORB.tcInternal.tv_struct, TS_Value, TS_Value._NP_RepositoryId, "TS_Value", "u", omniORB.typeMapping["IDL:org/asam/ods/TS_Union:1.0"], "flag", omniORB.typeMapping["IDL:org/asam/ods/T_SHORT:1.0"])
_0_org.asam.ods._tc_TS_Value = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_TS_Value)
omniORB.registerType(TS_Value._NP_RepositoryId, _0_org.asam.ods._d_TS_Value, _0_org.asam.ods._tc_TS_Value)
del TS_Value

# struct TS_ValueSeq
_0_org.asam.ods.TS_ValueSeq = omniORB.newEmptyClass()
class TS_ValueSeq (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/TS_ValueSeq:1.0"

    def __init__(self, u, flag):
        self.u = u
        self.flag = flag

_0_org.asam.ods.TS_ValueSeq = TS_ValueSeq
_0_org.asam.ods._d_TS_ValueSeq  = (omniORB.tcInternal.tv_struct, TS_ValueSeq, TS_ValueSeq._NP_RepositoryId, "TS_ValueSeq", "u", omniORB.typeMapping["IDL:org/asam/ods/TS_UnionSeq:1.0"], "flag", omniORB.typeMapping["IDL:org/asam/ods/S_SHORT:1.0"])
_0_org.asam.ods._tc_TS_ValueSeq = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_TS_ValueSeq)
omniORB.registerType(TS_ValueSeq._NP_RepositoryId, _0_org.asam.ods._d_TS_ValueSeq, _0_org.asam.ods._tc_TS_ValueSeq)
del TS_ValueSeq

# struct ApplicationStructureValue
_0_org.asam.ods.ApplicationStructureValue = omniORB.newEmptyClass()
class ApplicationStructureValue (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/ApplicationStructureValue:1.0"

    def __init__(self, applElems, applRels):
        self.applElems = applElems
        self.applRels = applRels

_0_org.asam.ods.ApplicationStructureValue = ApplicationStructureValue
_0_org.asam.ods._d_ApplicationStructureValue  = (omniORB.tcInternal.tv_struct, ApplicationStructureValue, ApplicationStructureValue._NP_RepositoryId, "ApplicationStructureValue", "applElems", omniORB.typeMapping["IDL:org/asam/ods/ApplElemSequence:1.0"], "applRels", omniORB.typeMapping["IDL:org/asam/ods/ApplRelSequence:1.0"])
_0_org.asam.ods._tc_ApplicationStructureValue = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ApplicationStructureValue)
omniORB.registerType(ApplicationStructureValue._NP_RepositoryId, _0_org.asam.ods._d_ApplicationStructureValue, _0_org.asam.ods._tc_ApplicationStructureValue)
del ApplicationStructureValue

# struct NameValueSeqUnit
_0_org.asam.ods.NameValueSeqUnit = omniORB.newEmptyClass()
class NameValueSeqUnit (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/NameValueSeqUnit:1.0"

    def __init__(self, valName, value, unit):
        self.valName = valName
        self.value = value
        self.unit = unit

_0_org.asam.ods.NameValueSeqUnit = NameValueSeqUnit
_0_org.asam.ods._d_NameValueSeqUnit  = (omniORB.tcInternal.tv_struct, NameValueSeqUnit, NameValueSeqUnit._NP_RepositoryId, "NameValueSeqUnit", "valName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], "value", omniORB.typeMapping["IDL:org/asam/ods/TS_ValueSeq:1.0"], "unit", omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"])
_0_org.asam.ods._tc_NameValueSeqUnit = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_NameValueSeqUnit)
omniORB.registerType(NameValueSeqUnit._NP_RepositoryId, _0_org.asam.ods._d_NameValueSeqUnit, _0_org.asam.ods._tc_NameValueSeqUnit)
del NameValueSeqUnit

# struct AIDNameValueUnitId
_0_org.asam.ods.AIDNameValueUnitId = omniORB.newEmptyClass()
class AIDNameValueUnitId (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/AIDNameValueUnitId:1.0"

    def __init__(self, attr, unitId, values):
        self.attr = attr
        self.unitId = unitId
        self.values = values

_0_org.asam.ods.AIDNameValueUnitId = AIDNameValueUnitId
_0_org.asam.ods._d_AIDNameValueUnitId  = (omniORB.tcInternal.tv_struct, AIDNameValueUnitId, AIDNameValueUnitId._NP_RepositoryId, "AIDNameValueUnitId", "attr", omniORB.typeMapping["IDL:org/asam/ods/AIDName:1.0"], "unitId", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], "values", omniORB.typeMapping["IDL:org/asam/ods/TS_Value:1.0"])
_0_org.asam.ods._tc_AIDNameValueUnitId = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_AIDNameValueUnitId)
omniORB.registerType(AIDNameValueUnitId._NP_RepositoryId, _0_org.asam.ods._d_AIDNameValueUnitId, _0_org.asam.ods._tc_AIDNameValueUnitId)
del AIDNameValueUnitId

# struct AIDNameValueSeqUnitId
_0_org.asam.ods.AIDNameValueSeqUnitId = omniORB.newEmptyClass()
class AIDNameValueSeqUnitId (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/AIDNameValueSeqUnitId:1.0"

    def __init__(self, attr, unitId, values):
        self.attr = attr
        self.unitId = unitId
        self.values = values

_0_org.asam.ods.AIDNameValueSeqUnitId = AIDNameValueSeqUnitId
_0_org.asam.ods._d_AIDNameValueSeqUnitId  = (omniORB.tcInternal.tv_struct, AIDNameValueSeqUnitId, AIDNameValueSeqUnitId._NP_RepositoryId, "AIDNameValueSeqUnitId", "attr", omniORB.typeMapping["IDL:org/asam/ods/AIDName:1.0"], "unitId", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], "values", omniORB.typeMapping["IDL:org/asam/ods/TS_ValueSeq:1.0"])
_0_org.asam.ods._tc_AIDNameValueSeqUnitId = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_AIDNameValueSeqUnitId)
omniORB.registerType(AIDNameValueSeqUnitId._NP_RepositoryId, _0_org.asam.ods._d_AIDNameValueSeqUnitId, _0_org.asam.ods._tc_AIDNameValueSeqUnitId)
del AIDNameValueSeqUnitId

# struct NameValueSeqUnitId
_0_org.asam.ods.NameValueSeqUnitId = omniORB.newEmptyClass()
class NameValueSeqUnitId (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/NameValueSeqUnitId:1.0"

    def __init__(self, valName, value, unitId):
        self.valName = valName
        self.value = value
        self.unitId = unitId

_0_org.asam.ods.NameValueSeqUnitId = NameValueSeqUnitId
_0_org.asam.ods._d_NameValueSeqUnitId  = (omniORB.tcInternal.tv_struct, NameValueSeqUnitId, NameValueSeqUnitId._NP_RepositoryId, "NameValueSeqUnitId", "valName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], "value", omniORB.typeMapping["IDL:org/asam/ods/TS_ValueSeq:1.0"], "unitId", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"])
_0_org.asam.ods._tc_NameValueSeqUnitId = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_NameValueSeqUnitId)
omniORB.registerType(NameValueSeqUnitId._NP_RepositoryId, _0_org.asam.ods._d_NameValueSeqUnitId, _0_org.asam.ods._tc_NameValueSeqUnitId)
del NameValueSeqUnitId

# struct SelValue
_0_org.asam.ods.SelValue = omniORB.newEmptyClass()
class SelValue (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/SelValue:1.0"

    def __init__(self, attr, oper, value):
        self.attr = attr
        self.oper = oper
        self.value = value

_0_org.asam.ods.SelValue = SelValue
_0_org.asam.ods._d_SelValue  = (omniORB.tcInternal.tv_struct, SelValue, SelValue._NP_RepositoryId, "SelValue", "attr", omniORB.typeMapping["IDL:org/asam/ods/AIDNameValueUnitId:1.0"], "oper", omniORB.typeMapping["IDL:org/asam/ods/SelOpcode:1.0"], "value", omniORB.typeMapping["IDL:org/asam/ods/TS_Value:1.0"])
_0_org.asam.ods._tc_SelValue = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_SelValue)
omniORB.registerType(SelValue._NP_RepositoryId, _0_org.asam.ods._d_SelValue, _0_org.asam.ods._tc_SelValue)
del SelValue

# struct NameValueUnitId
_0_org.asam.ods.NameValueUnitId = omniORB.newEmptyClass()
class NameValueUnitId (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/NameValueUnitId:1.0"

    def __init__(self, valName, value, unitId):
        self.valName = valName
        self.value = value
        self.unitId = unitId

_0_org.asam.ods.NameValueUnitId = NameValueUnitId
_0_org.asam.ods._d_NameValueUnitId  = (omniORB.tcInternal.tv_struct, NameValueUnitId, NameValueUnitId._NP_RepositoryId, "NameValueUnitId", "valName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], "value", omniORB.typeMapping["IDL:org/asam/ods/TS_Value:1.0"], "unitId", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"])
_0_org.asam.ods._tc_NameValueUnitId = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_NameValueUnitId)
omniORB.registerType(NameValueUnitId._NP_RepositoryId, _0_org.asam.ods._d_NameValueUnitId, _0_org.asam.ods._tc_NameValueUnitId)
del NameValueUnitId

# struct SelValueExt
_0_org.asam.ods.SelValueExt = omniORB.newEmptyClass()
class SelValueExt (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/SelValueExt:1.0"

    def __init__(self, attr, oper, value):
        self.attr = attr
        self.oper = oper
        self.value = value

_0_org.asam.ods.SelValueExt = SelValueExt
_0_org.asam.ods._d_SelValueExt  = (omniORB.tcInternal.tv_struct, SelValueExt, SelValueExt._NP_RepositoryId, "SelValueExt", "attr", omniORB.typeMapping["IDL:org/asam/ods/AIDNameUnitId:1.0"], "oper", omniORB.typeMapping["IDL:org/asam/ods/SelOpcode:1.0"], "value", omniORB.typeMapping["IDL:org/asam/ods/TS_Value:1.0"])
_0_org.asam.ods._tc_SelValueExt = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_SelValueExt)
omniORB.registerType(SelValueExt._NP_RepositoryId, _0_org.asam.ods._d_SelValueExt, _0_org.asam.ods._tc_SelValueExt)
del SelValueExt

# union SelItem
_0_org.asam.ods.SelItem = omniORB.newEmptyClass()
class SelItem (omniORB.Union):
    _NP_RepositoryId = "IDL:org/asam/ods/SelItem:1.0"

_0_org.asam.ods.SelItem = SelItem

SelItem._m_to_d = {"value": _0_org.asam.ods.SEL_VALUE_TYPE, "operator": _0_org.asam.ods.SEL_OPERATOR_TYPE}
SelItem._d_to_m = {_0_org.asam.ods.SEL_VALUE_TYPE: "value", _0_org.asam.ods.SEL_OPERATOR_TYPE: "operator"}
SelItem._def_m  = None
SelItem._def_d  = None

_0_org.asam.ods._m_SelItem  = ((_0_org.asam.ods.SEL_VALUE_TYPE, "value", omniORB.typeMapping["IDL:org/asam/ods/SelValueExt:1.0"]), (_0_org.asam.ods.SEL_OPERATOR_TYPE, "operator", omniORB.typeMapping["IDL:org/asam/ods/SelOperator:1.0"]),)
_0_org.asam.ods._d_SelItem  = (omniORB.tcInternal.tv_union, SelItem, SelItem._NP_RepositoryId, "SelItem", omniORB.typeMapping["IDL:org/asam/ods/SelType:1.0"], -1, _0_org.asam.ods._m_SelItem, None, {_0_org.asam.ods.SEL_VALUE_TYPE: _0_org.asam.ods._m_SelItem[0], _0_org.asam.ods.SEL_OPERATOR_TYPE: _0_org.asam.ods._m_SelItem[1]})
_0_org.asam.ods._tc_SelItem = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_SelItem)
omniORB.registerType(SelItem._NP_RepositoryId, _0_org.asam.ods._d_SelItem, _0_org.asam.ods._tc_SelItem)
del SelItem

# typedef ... NameValueSeqUnitSequence
class NameValueSeqUnitSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/NameValueSeqUnitSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.NameValueSeqUnitSequence = NameValueSeqUnitSequence
_0_org.asam.ods._d_NameValueSeqUnitSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/NameValueSeqUnit:1.0"], 0)
_0_org.asam.ods._ad_NameValueSeqUnitSequence = (omniORB.tcInternal.tv_alias, NameValueSeqUnitSequence._NP_RepositoryId, "NameValueSeqUnitSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/NameValueSeqUnit:1.0"], 0))
_0_org.asam.ods._tc_NameValueSeqUnitSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_NameValueSeqUnitSequence)
omniORB.registerType(NameValueSeqUnitSequence._NP_RepositoryId, _0_org.asam.ods._ad_NameValueSeqUnitSequence, _0_org.asam.ods._tc_NameValueSeqUnitSequence)
del NameValueSeqUnitSequence

# typedef ... AIDNameValueSeqUnitIdSequence
class AIDNameValueSeqUnitIdSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/AIDNameValueSeqUnitIdSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.AIDNameValueSeqUnitIdSequence = AIDNameValueSeqUnitIdSequence
_0_org.asam.ods._d_AIDNameValueSeqUnitIdSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/AIDNameValueSeqUnitId:1.0"], 0)
_0_org.asam.ods._ad_AIDNameValueSeqUnitIdSequence = (omniORB.tcInternal.tv_alias, AIDNameValueSeqUnitIdSequence._NP_RepositoryId, "AIDNameValueSeqUnitIdSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/AIDNameValueSeqUnitId:1.0"], 0))
_0_org.asam.ods._tc_AIDNameValueSeqUnitIdSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_AIDNameValueSeqUnitIdSequence)
omniORB.registerType(AIDNameValueSeqUnitIdSequence._NP_RepositoryId, _0_org.asam.ods._ad_AIDNameValueSeqUnitIdSequence, _0_org.asam.ods._tc_AIDNameValueSeqUnitIdSequence)
del AIDNameValueSeqUnitIdSequence

# typedef ... SelValueSequence
class SelValueSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/SelValueSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SelValueSequence = SelValueSequence
_0_org.asam.ods._d_SelValueSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/SelValue:1.0"], 0)
_0_org.asam.ods._ad_SelValueSequence = (omniORB.tcInternal.tv_alias, SelValueSequence._NP_RepositoryId, "SelValueSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/SelValue:1.0"], 0))
_0_org.asam.ods._tc_SelValueSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SelValueSequence)
omniORB.registerType(SelValueSequence._NP_RepositoryId, _0_org.asam.ods._ad_SelValueSequence, _0_org.asam.ods._tc_SelValueSequence)
del SelValueSequence

# typedef ... NameValueSeqUnitIdSequence
class NameValueSeqUnitIdSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/NameValueSeqUnitIdSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.NameValueSeqUnitIdSequence = NameValueSeqUnitIdSequence
_0_org.asam.ods._d_NameValueSeqUnitIdSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/NameValueSeqUnitId:1.0"], 0)
_0_org.asam.ods._ad_NameValueSeqUnitIdSequence = (omniORB.tcInternal.tv_alias, NameValueSeqUnitIdSequence._NP_RepositoryId, "NameValueSeqUnitIdSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/NameValueSeqUnitId:1.0"], 0))
_0_org.asam.ods._tc_NameValueSeqUnitIdSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_NameValueSeqUnitIdSequence)
omniORB.registerType(NameValueSeqUnitIdSequence._NP_RepositoryId, _0_org.asam.ods._ad_NameValueSeqUnitIdSequence, _0_org.asam.ods._tc_NameValueSeqUnitIdSequence)
del NameValueSeqUnitIdSequence

# typedef ... SelItemSequence
class SelItemSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/SelItemSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.SelItemSequence = SelItemSequence
_0_org.asam.ods._d_SelItemSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/SelItem:1.0"], 0)
_0_org.asam.ods._ad_SelItemSequence = (omniORB.tcInternal.tv_alias, SelItemSequence._NP_RepositoryId, "SelItemSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/SelItem:1.0"], 0))
_0_org.asam.ods._tc_SelItemSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_SelItemSequence)
omniORB.registerType(SelItemSequence._NP_RepositoryId, _0_org.asam.ods._ad_SelItemSequence, _0_org.asam.ods._tc_SelItemSequence)
del SelItemSequence

# struct NameValue
_0_org.asam.ods.NameValue = omniORB.newEmptyClass()
class NameValue (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/NameValue:1.0"

    def __init__(self, valName, value):
        self.valName = valName
        self.value = value

_0_org.asam.ods.NameValue = NameValue
_0_org.asam.ods._d_NameValue  = (omniORB.tcInternal.tv_struct, NameValue, NameValue._NP_RepositoryId, "NameValue", "valName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], "value", omniORB.typeMapping["IDL:org/asam/ods/TS_Value:1.0"])
_0_org.asam.ods._tc_NameValue = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_NameValue)
omniORB.registerType(NameValue._NP_RepositoryId, _0_org.asam.ods._d_NameValue, _0_org.asam.ods._tc_NameValue)
del NameValue

# struct NameValueUnit
_0_org.asam.ods.NameValueUnit = omniORB.newEmptyClass()
class NameValueUnit (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/NameValueUnit:1.0"

    def __init__(self, valName, value, unit):
        self.valName = valName
        self.value = value
        self.unit = unit

_0_org.asam.ods.NameValueUnit = NameValueUnit
_0_org.asam.ods._d_NameValueUnit  = (omniORB.tcInternal.tv_struct, NameValueUnit, NameValueUnit._NP_RepositoryId, "NameValueUnit", "valName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], "value", omniORB.typeMapping["IDL:org/asam/ods/TS_Value:1.0"], "unit", omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"])
_0_org.asam.ods._tc_NameValueUnit = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_NameValueUnit)
omniORB.registerType(NameValueUnit._NP_RepositoryId, _0_org.asam.ods._d_NameValueUnit, _0_org.asam.ods._tc_NameValueUnit)
del NameValueUnit

# struct AttrResultSet
_0_org.asam.ods.AttrResultSet = omniORB.newEmptyClass()
class AttrResultSet (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/AttrResultSet:1.0"

    def __init__(self, attrValues, rest):
        self.attrValues = attrValues
        self.rest = rest

_0_org.asam.ods.AttrResultSet = AttrResultSet
_0_org.asam.ods._d_AttrResultSet  = (omniORB.tcInternal.tv_struct, AttrResultSet, AttrResultSet._NP_RepositoryId, "AttrResultSet", "attrValues", omniORB.typeMapping["IDL:org/asam/ods/NameValueSeqUnitId:1.0"], "rest", omniORB.typeMapping["IDL:org/asam/ods/NameValueUnitIdIterator:1.0"])
_0_org.asam.ods._tc_AttrResultSet = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_AttrResultSet)
omniORB.registerType(AttrResultSet._NP_RepositoryId, _0_org.asam.ods._d_AttrResultSet, _0_org.asam.ods._tc_AttrResultSet)
del AttrResultSet

# struct QueryStructure
_0_org.asam.ods.QueryStructure = omniORB.newEmptyClass()
class QueryStructure (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/QueryStructure:1.0"

    def __init__(self, anuSeq, condSeq, operSeq, relInst, relName, orderBy):
        self.anuSeq = anuSeq
        self.condSeq = condSeq
        self.operSeq = operSeq
        self.relInst = relInst
        self.relName = relName
        self.orderBy = orderBy

_0_org.asam.ods.QueryStructure = QueryStructure
_0_org.asam.ods._d_QueryStructure  = (omniORB.tcInternal.tv_struct, QueryStructure, QueryStructure._NP_RepositoryId, "QueryStructure", "anuSeq", omniORB.typeMapping["IDL:org/asam/ods/AIDNameUnitIdSequence:1.0"], "condSeq", omniORB.typeMapping["IDL:org/asam/ods/SelValueSequence:1.0"], "operSeq", omniORB.typeMapping["IDL:org/asam/ods/SelOperatorSequence:1.0"], "relInst", omniORB.typeMapping["IDL:org/asam/ods/ElemId:1.0"], "relName", omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], "orderBy", omniORB.typeMapping["IDL:org/asam/ods/SelOrderSequence:1.0"])
_0_org.asam.ods._tc_QueryStructure = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_QueryStructure)
omniORB.registerType(QueryStructure._NP_RepositoryId, _0_org.asam.ods._d_QueryStructure, _0_org.asam.ods._tc_QueryStructure)
del QueryStructure

# struct ElemResultSetExt
_0_org.asam.ods.ElemResultSetExt = omniORB.newEmptyClass()
class ElemResultSetExt (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/ElemResultSetExt:1.0"

    def __init__(self, aid, values):
        self.aid = aid
        self.values = values

_0_org.asam.ods.ElemResultSetExt = ElemResultSetExt
_0_org.asam.ods._d_ElemResultSetExt  = (omniORB.tcInternal.tv_struct, ElemResultSetExt, ElemResultSetExt._NP_RepositoryId, "ElemResultSetExt", "aid", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], "values", omniORB.typeMapping["IDL:org/asam/ods/NameValueSeqUnitIdSequence:1.0"])
_0_org.asam.ods._tc_ElemResultSetExt = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ElemResultSetExt)
omniORB.registerType(ElemResultSetExt._NP_RepositoryId, _0_org.asam.ods._d_ElemResultSetExt, _0_org.asam.ods._tc_ElemResultSetExt)
del ElemResultSetExt

# struct QueryStructureExt
_0_org.asam.ods.QueryStructureExt = omniORB.newEmptyClass()
class QueryStructureExt (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/QueryStructureExt:1.0"

    def __init__(self, anuSeq, condSeq, joinSeq, orderBy, groupBy):
        self.anuSeq = anuSeq
        self.condSeq = condSeq
        self.joinSeq = joinSeq
        self.orderBy = orderBy
        self.groupBy = groupBy

_0_org.asam.ods.QueryStructureExt = QueryStructureExt
_0_org.asam.ods._d_QueryStructureExt  = (omniORB.tcInternal.tv_struct, QueryStructureExt, QueryStructureExt._NP_RepositoryId, "QueryStructureExt", "anuSeq", omniORB.typeMapping["IDL:org/asam/ods/SelAIDNameUnitIdSequence:1.0"], "condSeq", omniORB.typeMapping["IDL:org/asam/ods/SelItemSequence:1.0"], "joinSeq", omniORB.typeMapping["IDL:org/asam/ods/JoinDefSequence:1.0"], "orderBy", omniORB.typeMapping["IDL:org/asam/ods/SelOrderSequence:1.0"], "groupBy", omniORB.typeMapping["IDL:org/asam/ods/AIDNameSequence:1.0"])
_0_org.asam.ods._tc_QueryStructureExt = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_QueryStructureExt)
omniORB.registerType(QueryStructureExt._NP_RepositoryId, _0_org.asam.ods._d_QueryStructureExt, _0_org.asam.ods._tc_QueryStructureExt)
del QueryStructureExt

# typedef ... NameValueSequence
class NameValueSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/NameValueSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.NameValueSequence = NameValueSequence
_0_org.asam.ods._d_NameValueSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/NameValue:1.0"], 0)
_0_org.asam.ods._ad_NameValueSequence = (omniORB.tcInternal.tv_alias, NameValueSequence._NP_RepositoryId, "NameValueSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/NameValue:1.0"], 0))
_0_org.asam.ods._tc_NameValueSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_NameValueSequence)
omniORB.registerType(NameValueSequence._NP_RepositoryId, _0_org.asam.ods._ad_NameValueSequence, _0_org.asam.ods._tc_NameValueSequence)
del NameValueSequence

# typedef ... NameValueUnitSequence
class NameValueUnitSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/NameValueUnitSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.NameValueUnitSequence = NameValueUnitSequence
_0_org.asam.ods._d_NameValueUnitSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/NameValueUnit:1.0"], 0)
_0_org.asam.ods._ad_NameValueUnitSequence = (omniORB.tcInternal.tv_alias, NameValueUnitSequence._NP_RepositoryId, "NameValueUnitSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/NameValueUnit:1.0"], 0))
_0_org.asam.ods._tc_NameValueUnitSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_NameValueUnitSequence)
omniORB.registerType(NameValueUnitSequence._NP_RepositoryId, _0_org.asam.ods._ad_NameValueUnitSequence, _0_org.asam.ods._tc_NameValueUnitSequence)
del NameValueUnitSequence

# typedef ... AttrResultSetSequence
class AttrResultSetSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/AttrResultSetSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.AttrResultSetSequence = AttrResultSetSequence
_0_org.asam.ods._d_AttrResultSetSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/AttrResultSet:1.0"], 0)
_0_org.asam.ods._ad_AttrResultSetSequence = (omniORB.tcInternal.tv_alias, AttrResultSetSequence._NP_RepositoryId, "AttrResultSetSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/AttrResultSet:1.0"], 0))
_0_org.asam.ods._tc_AttrResultSetSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_AttrResultSetSequence)
omniORB.registerType(AttrResultSetSequence._NP_RepositoryId, _0_org.asam.ods._ad_AttrResultSetSequence, _0_org.asam.ods._tc_AttrResultSetSequence)
del AttrResultSetSequence

# typedef ... ElemResultSetExtSequence
class ElemResultSetExtSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/ElemResultSetExtSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.ElemResultSetExtSequence = ElemResultSetExtSequence
_0_org.asam.ods._d_ElemResultSetExtSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ElemResultSetExt:1.0"], 0)
_0_org.asam.ods._ad_ElemResultSetExtSequence = (omniORB.tcInternal.tv_alias, ElemResultSetExtSequence._NP_RepositoryId, "ElemResultSetExtSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ElemResultSetExt:1.0"], 0))
_0_org.asam.ods._tc_ElemResultSetExtSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_ElemResultSetExtSequence)
omniORB.registerType(ElemResultSetExtSequence._NP_RepositoryId, _0_org.asam.ods._ad_ElemResultSetExtSequence, _0_org.asam.ods._tc_ElemResultSetExtSequence)
del ElemResultSetExtSequence

# struct ElemResultSet
_0_org.asam.ods.ElemResultSet = omniORB.newEmptyClass()
class ElemResultSet (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/ElemResultSet:1.0"

    def __init__(self, aid, attrValues):
        self.aid = aid
        self.attrValues = attrValues

_0_org.asam.ods.ElemResultSet = ElemResultSet
_0_org.asam.ods._d_ElemResultSet  = (omniORB.tcInternal.tv_struct, ElemResultSet, ElemResultSet._NP_RepositoryId, "ElemResultSet", "aid", omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], "attrValues", omniORB.typeMapping["IDL:org/asam/ods/AttrResultSetSequence:1.0"])
_0_org.asam.ods._tc_ElemResultSet = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ElemResultSet)
omniORB.registerType(ElemResultSet._NP_RepositoryId, _0_org.asam.ods._d_ElemResultSet, _0_org.asam.ods._tc_ElemResultSet)
del ElemResultSet

# struct ResultSetExt
_0_org.asam.ods.ResultSetExt = omniORB.newEmptyClass()
class ResultSetExt (omniORB.StructBase):
    _NP_RepositoryId = "IDL:org/asam/ods/ResultSetExt:1.0"

    def __init__(self, firstElems, restElems):
        self.firstElems = firstElems
        self.restElems = restElems

_0_org.asam.ods.ResultSetExt = ResultSetExt
_0_org.asam.ods._d_ResultSetExt  = (omniORB.tcInternal.tv_struct, ResultSetExt, ResultSetExt._NP_RepositoryId, "ResultSetExt", "firstElems", omniORB.typeMapping["IDL:org/asam/ods/ElemResultSetExtSequence:1.0"], "restElems", omniORB.typeMapping["IDL:org/asam/ods/ElemResultSetExtSeqIterator:1.0"])
_0_org.asam.ods._tc_ResultSetExt = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ResultSetExt)
omniORB.registerType(ResultSetExt._NP_RepositoryId, _0_org.asam.ods._d_ResultSetExt, _0_org.asam.ods._tc_ResultSetExt)
del ResultSetExt

# typedef ... ElemResultSetSequence
class ElemResultSetSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/ElemResultSetSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.ElemResultSetSequence = ElemResultSetSequence
_0_org.asam.ods._d_ElemResultSetSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ElemResultSet:1.0"], 0)
_0_org.asam.ods._ad_ElemResultSetSequence = (omniORB.tcInternal.tv_alias, ElemResultSetSequence._NP_RepositoryId, "ElemResultSetSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ElemResultSet:1.0"], 0))
_0_org.asam.ods._tc_ElemResultSetSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_ElemResultSetSequence)
omniORB.registerType(ElemResultSetSequence._NP_RepositoryId, _0_org.asam.ods._ad_ElemResultSetSequence, _0_org.asam.ods._tc_ElemResultSetSequence)
del ElemResultSetSequence

# typedef ... ResultSetExtSequence
class ResultSetExtSequence:
    _NP_RepositoryId = "IDL:org/asam/ods/ResultSetExtSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_org.asam.ods.ResultSetExtSequence = ResultSetExtSequence
_0_org.asam.ods._d_ResultSetExtSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ResultSetExt:1.0"], 0)
_0_org.asam.ods._ad_ResultSetExtSequence = (omniORB.tcInternal.tv_alias, ResultSetExtSequence._NP_RepositoryId, "ResultSetExtSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:org/asam/ods/ResultSetExt:1.0"], 0))
_0_org.asam.ods._tc_ResultSetExtSequence = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._ad_ResultSetExtSequence)
omniORB.registerType(ResultSetExtSequence._NP_RepositoryId, _0_org.asam.ods._ad_ResultSetExtSequence, _0_org.asam.ods._tc_ResultSetExtSequence)
del ResultSetExtSequence

# interface ResultType
_0_org.asam.ods._d_ResultType = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/ResultType:1.0", "ResultType")
omniORB.typeMapping["IDL:org/asam/ods/ResultType:1.0"] = _0_org.asam.ods._d_ResultType
_0_org.asam.ods.ResultType = omniORB.newEmptyClass()
class ResultType :
    _NP_RepositoryId = _0_org.asam.ods._d_ResultType[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    INSTELEM_ITERATOR_AS_RESULT = 0
    TABLE_ITERATOR_AS_RESULT = 1
    TABLE_AS_RESULT = 2


_0_org.asam.ods.ResultType = ResultType
_0_org.asam.ods._tc_ResultType = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ResultType)
omniORB.registerType(ResultType._NP_RepositoryId, _0_org.asam.ods._d_ResultType, _0_org.asam.ods._tc_ResultType)

# ResultType object reference
class _objref_ResultType (CORBA.Object):
    _NP_RepositoryId = ResultType._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

omniORB.registerObjref(ResultType._NP_RepositoryId, _objref_ResultType)
_0_org.asam.ods._objref_ResultType = _objref_ResultType
del ResultType, _objref_ResultType

# ResultType skeleton
__name__ = "org__POA.asam.ods"
class ResultType (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.ResultType._NP_RepositoryId


    _omni_op_d = {}

ResultType._omni_skeleton = ResultType
_0_org__POA.asam.ods.ResultType = ResultType
omniORB.registerSkeleton(ResultType._NP_RepositoryId, ResultType)
del ResultType
__name__ = "org.asam.ods"

# interface LockMode
_0_org.asam.ods._d_LockMode = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/LockMode:1.0", "LockMode")
omniORB.typeMapping["IDL:org/asam/ods/LockMode:1.0"] = _0_org.asam.ods._d_LockMode
_0_org.asam.ods.LockMode = omniORB.newEmptyClass()
class LockMode :
    _NP_RepositoryId = _0_org.asam.ods._d_LockMode[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    LOCK_INSTANCEELEMENT = 0
    LOCK_APPLICATIONELEMENT = 1
    LOCK_CHILDREN = 2


_0_org.asam.ods.LockMode = LockMode
_0_org.asam.ods._tc_LockMode = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_LockMode)
omniORB.registerType(LockMode._NP_RepositoryId, _0_org.asam.ods._d_LockMode, _0_org.asam.ods._tc_LockMode)

# LockMode object reference
class _objref_LockMode (CORBA.Object):
    _NP_RepositoryId = LockMode._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

omniORB.registerObjref(LockMode._NP_RepositoryId, _objref_LockMode)
_0_org.asam.ods._objref_LockMode = _objref_LockMode
del LockMode, _objref_LockMode

# LockMode skeleton
__name__ = "org__POA.asam.ods"
class LockMode (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.LockMode._NP_RepositoryId


    _omni_op_d = {}

LockMode._omni_skeleton = LockMode
_0_org__POA.asam.ods.LockMode = LockMode
omniORB.registerSkeleton(LockMode._NP_RepositoryId, LockMode)
del LockMode
__name__ = "org.asam.ods"

# interface SecurityRights
_0_org.asam.ods._d_SecurityRights = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/SecurityRights:1.0", "SecurityRights")
omniORB.typeMapping["IDL:org/asam/ods/SecurityRights:1.0"] = _0_org.asam.ods._d_SecurityRights
_0_org.asam.ods.SecurityRights = omniORB.newEmptyClass()
class SecurityRights :
    _NP_RepositoryId = _0_org.asam.ods._d_SecurityRights[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    SEC_READ = 1
    SEC_UPDATE = 2
    SEC_INSERT = 4
    SEC_DELETE = 8
    SEC_GRANT = 16


_0_org.asam.ods.SecurityRights = SecurityRights
_0_org.asam.ods._tc_SecurityRights = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_SecurityRights)
omniORB.registerType(SecurityRights._NP_RepositoryId, _0_org.asam.ods._d_SecurityRights, _0_org.asam.ods._tc_SecurityRights)

# SecurityRights object reference
class _objref_SecurityRights (CORBA.Object):
    _NP_RepositoryId = SecurityRights._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

omniORB.registerObjref(SecurityRights._NP_RepositoryId, _objref_SecurityRights)
_0_org.asam.ods._objref_SecurityRights = _objref_SecurityRights
del SecurityRights, _objref_SecurityRights

# SecurityRights skeleton
__name__ = "org__POA.asam.ods"
class SecurityRights (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.SecurityRights._NP_RepositoryId


    _omni_op_d = {}

SecurityRights._omni_skeleton = SecurityRights
_0_org__POA.asam.ods.SecurityRights = SecurityRights
omniORB.registerSkeleton(SecurityRights._NP_RepositoryId, SecurityRights)
del SecurityRights
__name__ = "org.asam.ods"

# interface SecurityLevel
_0_org.asam.ods._d_SecurityLevel = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/SecurityLevel:1.0", "SecurityLevel")
omniORB.typeMapping["IDL:org/asam/ods/SecurityLevel:1.0"] = _0_org.asam.ods._d_SecurityLevel
_0_org.asam.ods.SecurityLevel = omniORB.newEmptyClass()
class SecurityLevel :
    _NP_RepositoryId = _0_org.asam.ods._d_SecurityLevel[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    NO_SECURITY = 0
    ELEMENT_SECURITY = 1
    INSTANCE_SECURITY = 2
    ATTRIBUTE_SECURITY = 4


_0_org.asam.ods.SecurityLevel = SecurityLevel
_0_org.asam.ods._tc_SecurityLevel = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_SecurityLevel)
omniORB.registerType(SecurityLevel._NP_RepositoryId, _0_org.asam.ods._d_SecurityLevel, _0_org.asam.ods._tc_SecurityLevel)

# SecurityLevel object reference
class _objref_SecurityLevel (CORBA.Object):
    _NP_RepositoryId = SecurityLevel._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

omniORB.registerObjref(SecurityLevel._NP_RepositoryId, _objref_SecurityLevel)
_0_org.asam.ods._objref_SecurityLevel = _objref_SecurityLevel
del SecurityLevel, _objref_SecurityLevel

# SecurityLevel skeleton
__name__ = "org__POA.asam.ods"
class SecurityLevel (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.SecurityLevel._NP_RepositoryId


    _omni_op_d = {}

SecurityLevel._omni_skeleton = SecurityLevel
_0_org__POA.asam.ods.SecurityLevel = SecurityLevel
omniORB.registerSkeleton(SecurityLevel._NP_RepositoryId, SecurityLevel)
del SecurityLevel
__name__ = "org.asam.ods"

# interface QueryConstants
_0_org.asam.ods._d_QueryConstants = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/QueryConstants:1.0", "QueryConstants")
omniORB.typeMapping["IDL:org/asam/ods/QueryConstants:1.0"] = _0_org.asam.ods._d_QueryConstants
_0_org.asam.ods.QueryConstants = omniORB.newEmptyClass()
class QueryConstants :
    _NP_RepositoryId = _0_org.asam.ods._d_QueryConstants[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    MaxDurationDEFAULT = 0
    MaxDuration = "MaxDuration"
    QueryResultType = "QueryResultType"
    QueryResultTypeDEFAULT = 0


_0_org.asam.ods.QueryConstants = QueryConstants
_0_org.asam.ods._tc_QueryConstants = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_QueryConstants)
omniORB.registerType(QueryConstants._NP_RepositoryId, _0_org.asam.ods._d_QueryConstants, _0_org.asam.ods._tc_QueryConstants)

# QueryConstants object reference
class _objref_QueryConstants (CORBA.Object):
    _NP_RepositoryId = QueryConstants._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

omniORB.registerObjref(QueryConstants._NP_RepositoryId, _objref_QueryConstants)
_0_org.asam.ods._objref_QueryConstants = _objref_QueryConstants
del QueryConstants, _objref_QueryConstants

# QueryConstants skeleton
__name__ = "org__POA.asam.ods"
class QueryConstants (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.QueryConstants._NP_RepositoryId


    _omni_op_d = {}

QueryConstants._omni_skeleton = QueryConstants
_0_org__POA.asam.ods.QueryConstants = QueryConstants
omniORB.registerSkeleton(QueryConstants._NP_RepositoryId, QueryConstants)
del QueryConstants
__name__ = "org.asam.ods"

# exception AoException
_0_org.asam.ods.AoException = omniORB.newEmptyClass()
class AoException (CORBA.UserException):
    _NP_RepositoryId = "IDL:org/asam/ods/AoException:1.0"

    def __init__(self, errCode, sevFlag, minorCode, reason):
        CORBA.UserException.__init__(self, errCode, sevFlag, minorCode, reason)
        self.errCode = errCode
        self.sevFlag = sevFlag
        self.minorCode = minorCode
        self.reason = reason

_0_org.asam.ods.AoException = AoException
_0_org.asam.ods._d_AoException  = (omniORB.tcInternal.tv_except, AoException, AoException._NP_RepositoryId, "AoException", "errCode", omniORB.typeMapping["IDL:org/asam/ods/ErrorCode:1.0"], "sevFlag", omniORB.typeMapping["IDL:org/asam/ods/SeverityFlag:1.0"], "minorCode", omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], "reason", omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"])
_0_org.asam.ods._tc_AoException = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_AoException)
omniORB.registerType(AoException._NP_RepositoryId, _0_org.asam.ods._d_AoException, _0_org.asam.ods._tc_AoException)
del AoException

# interface AoFactory
_0_org.asam.ods._d_AoFactory = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/AoFactory:1.0", "AoFactory")
omniORB.typeMapping["IDL:org/asam/ods/AoFactory:1.0"] = _0_org.asam.ods._d_AoFactory
_0_org.asam.ods.AoFactory = omniORB.newEmptyClass()
class AoFactory :
    _NP_RepositoryId = _0_org.asam.ods._d_AoFactory[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.AoFactory = AoFactory
_0_org.asam.ods._tc_AoFactory = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_AoFactory)
omniORB.registerType(AoFactory._NP_RepositoryId, _0_org.asam.ods._d_AoFactory, _0_org.asam.ods._tc_AoFactory)

# AoFactory operations and attributes
AoFactory._d_getDescription = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoFactory._d_getInterfaceVersion = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoFactory._d_getName = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoFactory._d_getType = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoFactory._d_newSession = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/AoSession:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# AoFactory object reference
class _objref_AoFactory (CORBA.Object):
    _NP_RepositoryId = AoFactory._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getDescription(self, *args):
        return self._obj.invoke("getDescription", _0_org.asam.ods.AoFactory._d_getDescription, args)

    def getInterfaceVersion(self, *args):
        return self._obj.invoke("getInterfaceVersion", _0_org.asam.ods.AoFactory._d_getInterfaceVersion, args)

    def getName(self, *args):
        return self._obj.invoke("getName", _0_org.asam.ods.AoFactory._d_getName, args)

    def getType(self, *args):
        return self._obj.invoke("getType", _0_org.asam.ods.AoFactory._d_getType, args)

    def newSession(self, *args):
        return self._obj.invoke("newSession", _0_org.asam.ods.AoFactory._d_newSession, args)

omniORB.registerObjref(AoFactory._NP_RepositoryId, _objref_AoFactory)
_0_org.asam.ods._objref_AoFactory = _objref_AoFactory
del AoFactory, _objref_AoFactory

# AoFactory skeleton
__name__ = "org__POA.asam.ods"
class AoFactory (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.AoFactory._NP_RepositoryId


    _omni_op_d = {"getDescription": _0_org.asam.ods.AoFactory._d_getDescription, "getInterfaceVersion": _0_org.asam.ods.AoFactory._d_getInterfaceVersion, "getName": _0_org.asam.ods.AoFactory._d_getName, "getType": _0_org.asam.ods.AoFactory._d_getType, "newSession": _0_org.asam.ods.AoFactory._d_newSession}

AoFactory._omni_skeleton = AoFactory
_0_org__POA.asam.ods.AoFactory = AoFactory
omniORB.registerSkeleton(AoFactory._NP_RepositoryId, AoFactory)
del AoFactory
__name__ = "org.asam.ods"

# interface AoSession
_0_org.asam.ods._d_AoSession = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/AoSession:1.0", "AoSession")
omniORB.typeMapping["IDL:org/asam/ods/AoSession:1.0"] = _0_org.asam.ods._d_AoSession
_0_org.asam.ods.AoSession = omniORB.newEmptyClass()
class AoSession :
    _NP_RepositoryId = _0_org.asam.ods._d_AoSession[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.AoSession = AoSession
_0_org.asam.ods._tc_AoSession = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_AoSession)
omniORB.registerType(AoSession._NP_RepositoryId, _0_org.asam.ods._d_AoSession, _0_org.asam.ods._tc_AoSession)

# AoSession operations and attributes
AoSession._d_abortTransaction = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_close = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_commitTransaction = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_getApplicationStructure = ((), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationStructure:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_getApplicationStructureValue = ((), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationStructureValue:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_getBaseStructure = ((), (omniORB.typeMapping["IDL:org/asam/ods/BaseStructure:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_getContext = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameValueIterator:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_getContextByName = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameValue:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_listContext = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameIterator:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_removeContext = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_setContext = ((omniORB.typeMapping["IDL:org/asam/ods/NameValue:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_setContextString = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_startTransaction = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_flush = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_setCurrentInitialRights = ((omniORB.typeMapping["IDL:org/asam/ods/InitialRightSequence:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_getLockMode = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_SHORT:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_setLockMode = ((omniORB.typeMapping["IDL:org/asam/ods/T_SHORT:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_getApplElemAccess = ((), (omniORB.typeMapping["IDL:org/asam/ods/ApplElemAccess:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_setPassword = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_getDescription = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_getName = ((), (omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_getType = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_createQueryEvaluator = ((), (omniORB.typeMapping["IDL:org/asam/ods/QueryEvaluator:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_createBlob = ((), (omniORB.typeMapping["IDL:org/asam/ods/Blob:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_createCoSession = ((), (omniORB.typeMapping["IDL:org/asam/ods/AoSession:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_getUser = ((), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_getEnumerationAttributes = ((), (omniORB.typeMapping["IDL:org/asam/ods/EnumerationAttributeStructureSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
AoSession._d_getEnumerationStructure = ((), (omniORB.typeMapping["IDL:org/asam/ods/EnumerationStructureSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# AoSession object reference
class _objref_AoSession (CORBA.Object):
    _NP_RepositoryId = AoSession._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def abortTransaction(self, *args):
        return self._obj.invoke("abortTransaction", _0_org.asam.ods.AoSession._d_abortTransaction, args)

    def close(self, *args):
        return self._obj.invoke("close", _0_org.asam.ods.AoSession._d_close, args)

    def commitTransaction(self, *args):
        return self._obj.invoke("commitTransaction", _0_org.asam.ods.AoSession._d_commitTransaction, args)

    def getApplicationStructure(self, *args):
        return self._obj.invoke("getApplicationStructure", _0_org.asam.ods.AoSession._d_getApplicationStructure, args)

    def getApplicationStructureValue(self, *args):
        return self._obj.invoke("getApplicationStructureValue", _0_org.asam.ods.AoSession._d_getApplicationStructureValue, args)

    def getBaseStructure(self, *args):
        return self._obj.invoke("getBaseStructure", _0_org.asam.ods.AoSession._d_getBaseStructure, args)

    def getContext(self, *args):
        return self._obj.invoke("getContext", _0_org.asam.ods.AoSession._d_getContext, args)

    def getContextByName(self, *args):
        return self._obj.invoke("getContextByName", _0_org.asam.ods.AoSession._d_getContextByName, args)

    def listContext(self, *args):
        return self._obj.invoke("listContext", _0_org.asam.ods.AoSession._d_listContext, args)

    def removeContext(self, *args):
        return self._obj.invoke("removeContext", _0_org.asam.ods.AoSession._d_removeContext, args)

    def setContext(self, *args):
        return self._obj.invoke("setContext", _0_org.asam.ods.AoSession._d_setContext, args)

    def setContextString(self, *args):
        return self._obj.invoke("setContextString", _0_org.asam.ods.AoSession._d_setContextString, args)

    def startTransaction(self, *args):
        return self._obj.invoke("startTransaction", _0_org.asam.ods.AoSession._d_startTransaction, args)

    def flush(self, *args):
        return self._obj.invoke("flush", _0_org.asam.ods.AoSession._d_flush, args)

    def setCurrentInitialRights(self, *args):
        return self._obj.invoke("setCurrentInitialRights", _0_org.asam.ods.AoSession._d_setCurrentInitialRights, args)

    def getLockMode(self, *args):
        return self._obj.invoke("getLockMode", _0_org.asam.ods.AoSession._d_getLockMode, args)

    def setLockMode(self, *args):
        return self._obj.invoke("setLockMode", _0_org.asam.ods.AoSession._d_setLockMode, args)

    def getApplElemAccess(self, *args):
        return self._obj.invoke("getApplElemAccess", _0_org.asam.ods.AoSession._d_getApplElemAccess, args)

    def setPassword(self, *args):
        return self._obj.invoke("setPassword", _0_org.asam.ods.AoSession._d_setPassword, args)

    def getDescription(self, *args):
        return self._obj.invoke("getDescription", _0_org.asam.ods.AoSession._d_getDescription, args)

    def getName(self, *args):
        return self._obj.invoke("getName", _0_org.asam.ods.AoSession._d_getName, args)

    def getType(self, *args):
        return self._obj.invoke("getType", _0_org.asam.ods.AoSession._d_getType, args)

    def createQueryEvaluator(self, *args):
        return self._obj.invoke("createQueryEvaluator", _0_org.asam.ods.AoSession._d_createQueryEvaluator, args)

    def createBlob(self, *args):
        return self._obj.invoke("createBlob", _0_org.asam.ods.AoSession._d_createBlob, args)

    def createCoSession(self, *args):
        return self._obj.invoke("createCoSession", _0_org.asam.ods.AoSession._d_createCoSession, args)

    def getUser(self, *args):
        return self._obj.invoke("getUser", _0_org.asam.ods.AoSession._d_getUser, args)

    def getEnumerationAttributes(self, *args):
        return self._obj.invoke("getEnumerationAttributes", _0_org.asam.ods.AoSession._d_getEnumerationAttributes, args)

    def getEnumerationStructure(self, *args):
        return self._obj.invoke("getEnumerationStructure", _0_org.asam.ods.AoSession._d_getEnumerationStructure, args)

omniORB.registerObjref(AoSession._NP_RepositoryId, _objref_AoSession)
_0_org.asam.ods._objref_AoSession = _objref_AoSession
del AoSession, _objref_AoSession

# AoSession skeleton
__name__ = "org__POA.asam.ods"
class AoSession (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.AoSession._NP_RepositoryId


    _omni_op_d = {"abortTransaction": _0_org.asam.ods.AoSession._d_abortTransaction, "close": _0_org.asam.ods.AoSession._d_close, "commitTransaction": _0_org.asam.ods.AoSession._d_commitTransaction, "getApplicationStructure": _0_org.asam.ods.AoSession._d_getApplicationStructure, "getApplicationStructureValue": _0_org.asam.ods.AoSession._d_getApplicationStructureValue, "getBaseStructure": _0_org.asam.ods.AoSession._d_getBaseStructure, "getContext": _0_org.asam.ods.AoSession._d_getContext, "getContextByName": _0_org.asam.ods.AoSession._d_getContextByName, "listContext": _0_org.asam.ods.AoSession._d_listContext, "removeContext": _0_org.asam.ods.AoSession._d_removeContext, "setContext": _0_org.asam.ods.AoSession._d_setContext, "setContextString": _0_org.asam.ods.AoSession._d_setContextString, "startTransaction": _0_org.asam.ods.AoSession._d_startTransaction, "flush": _0_org.asam.ods.AoSession._d_flush, "setCurrentInitialRights": _0_org.asam.ods.AoSession._d_setCurrentInitialRights, "getLockMode": _0_org.asam.ods.AoSession._d_getLockMode, "setLockMode": _0_org.asam.ods.AoSession._d_setLockMode, "getApplElemAccess": _0_org.asam.ods.AoSession._d_getApplElemAccess, "setPassword": _0_org.asam.ods.AoSession._d_setPassword, "getDescription": _0_org.asam.ods.AoSession._d_getDescription, "getName": _0_org.asam.ods.AoSession._d_getName, "getType": _0_org.asam.ods.AoSession._d_getType, "createQueryEvaluator": _0_org.asam.ods.AoSession._d_createQueryEvaluator, "createBlob": _0_org.asam.ods.AoSession._d_createBlob, "createCoSession": _0_org.asam.ods.AoSession._d_createCoSession, "getUser": _0_org.asam.ods.AoSession._d_getUser, "getEnumerationAttributes": _0_org.asam.ods.AoSession._d_getEnumerationAttributes, "getEnumerationStructure": _0_org.asam.ods.AoSession._d_getEnumerationStructure}

AoSession._omni_skeleton = AoSession
_0_org__POA.asam.ods.AoSession = AoSession
omniORB.registerSkeleton(AoSession._NP_RepositoryId, AoSession)
del AoSession
__name__ = "org.asam.ods"

# interface ApplicationAttribute
_0_org.asam.ods._d_ApplicationAttribute = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/ApplicationAttribute:1.0", "ApplicationAttribute")
omniORB.typeMapping["IDL:org/asam/ods/ApplicationAttribute:1.0"] = _0_org.asam.ods._d_ApplicationAttribute
_0_org.asam.ods.ApplicationAttribute = omniORB.newEmptyClass()
class ApplicationAttribute :
    _NP_RepositoryId = _0_org.asam.ods._d_ApplicationAttribute[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.ApplicationAttribute = ApplicationAttribute
_0_org.asam.ods._tc_ApplicationAttribute = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ApplicationAttribute)
omniORB.registerType(ApplicationAttribute._NP_RepositoryId, _0_org.asam.ods._d_ApplicationAttribute, _0_org.asam.ods._tc_ApplicationAttribute)

# ApplicationAttribute operations and attributes
ApplicationAttribute._d_getBaseAttribute = ((), (omniORB.typeMapping["IDL:org/asam/ods/BaseAttribute:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_getDataType = ((), (omniORB.typeMapping["IDL:org/asam/ods/DataType:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_getLength = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_getName = ((), (omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_getUnit = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_isObligatory = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_isUnique = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_setBaseAttribute = ((omniORB.typeMapping["IDL:org/asam/ods/BaseAttribute:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_setDataType = ((omniORB.typeMapping["IDL:org/asam/ods/DataType:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_setIsObligatory = ((omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_setIsUnique = ((omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_setLength = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_setName = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_setUnit = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_setRights = ((omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/RightsSet:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_getRights = ((), (omniORB.typeMapping["IDL:org/asam/ods/ACLSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_getApplicationElement = ((), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_isAutogenerated = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_setIsAutogenerated = ((omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_getEnumerationDefinition = ((), (omniORB.typeMapping["IDL:org/asam/ods/EnumerationDefinition:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_setEnumerationDefinition = ((omniORB.typeMapping["IDL:org/asam/ods/EnumerationDefinition:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_hasUnit = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_withUnit = ((omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_hasValueFlag = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationAttribute._d_withValueFlag = ((omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# ApplicationAttribute object reference
class _objref_ApplicationAttribute (CORBA.Object):
    _NP_RepositoryId = ApplicationAttribute._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getBaseAttribute(self, *args):
        return self._obj.invoke("getBaseAttribute", _0_org.asam.ods.ApplicationAttribute._d_getBaseAttribute, args)

    def getDataType(self, *args):
        return self._obj.invoke("getDataType", _0_org.asam.ods.ApplicationAttribute._d_getDataType, args)

    def getLength(self, *args):
        return self._obj.invoke("getLength", _0_org.asam.ods.ApplicationAttribute._d_getLength, args)

    def getName(self, *args):
        return self._obj.invoke("getName", _0_org.asam.ods.ApplicationAttribute._d_getName, args)

    def getUnit(self, *args):
        return self._obj.invoke("getUnit", _0_org.asam.ods.ApplicationAttribute._d_getUnit, args)

    def isObligatory(self, *args):
        return self._obj.invoke("isObligatory", _0_org.asam.ods.ApplicationAttribute._d_isObligatory, args)

    def isUnique(self, *args):
        return self._obj.invoke("isUnique", _0_org.asam.ods.ApplicationAttribute._d_isUnique, args)

    def setBaseAttribute(self, *args):
        return self._obj.invoke("setBaseAttribute", _0_org.asam.ods.ApplicationAttribute._d_setBaseAttribute, args)

    def setDataType(self, *args):
        return self._obj.invoke("setDataType", _0_org.asam.ods.ApplicationAttribute._d_setDataType, args)

    def setIsObligatory(self, *args):
        return self._obj.invoke("setIsObligatory", _0_org.asam.ods.ApplicationAttribute._d_setIsObligatory, args)

    def setIsUnique(self, *args):
        return self._obj.invoke("setIsUnique", _0_org.asam.ods.ApplicationAttribute._d_setIsUnique, args)

    def setLength(self, *args):
        return self._obj.invoke("setLength", _0_org.asam.ods.ApplicationAttribute._d_setLength, args)

    def setName(self, *args):
        return self._obj.invoke("setName", _0_org.asam.ods.ApplicationAttribute._d_setName, args)

    def setUnit(self, *args):
        return self._obj.invoke("setUnit", _0_org.asam.ods.ApplicationAttribute._d_setUnit, args)

    def setRights(self, *args):
        return self._obj.invoke("setRights", _0_org.asam.ods.ApplicationAttribute._d_setRights, args)

    def getRights(self, *args):
        return self._obj.invoke("getRights", _0_org.asam.ods.ApplicationAttribute._d_getRights, args)

    def getApplicationElement(self, *args):
        return self._obj.invoke("getApplicationElement", _0_org.asam.ods.ApplicationAttribute._d_getApplicationElement, args)

    def isAutogenerated(self, *args):
        return self._obj.invoke("isAutogenerated", _0_org.asam.ods.ApplicationAttribute._d_isAutogenerated, args)

    def setIsAutogenerated(self, *args):
        return self._obj.invoke("setIsAutogenerated", _0_org.asam.ods.ApplicationAttribute._d_setIsAutogenerated, args)

    def getEnumerationDefinition(self, *args):
        return self._obj.invoke("getEnumerationDefinition", _0_org.asam.ods.ApplicationAttribute._d_getEnumerationDefinition, args)

    def setEnumerationDefinition(self, *args):
        return self._obj.invoke("setEnumerationDefinition", _0_org.asam.ods.ApplicationAttribute._d_setEnumerationDefinition, args)

    def hasUnit(self, *args):
        return self._obj.invoke("hasUnit", _0_org.asam.ods.ApplicationAttribute._d_hasUnit, args)

    def withUnit(self, *args):
        return self._obj.invoke("withUnit", _0_org.asam.ods.ApplicationAttribute._d_withUnit, args)

    def hasValueFlag(self, *args):
        return self._obj.invoke("hasValueFlag", _0_org.asam.ods.ApplicationAttribute._d_hasValueFlag, args)

    def withValueFlag(self, *args):
        return self._obj.invoke("withValueFlag", _0_org.asam.ods.ApplicationAttribute._d_withValueFlag, args)

omniORB.registerObjref(ApplicationAttribute._NP_RepositoryId, _objref_ApplicationAttribute)
_0_org.asam.ods._objref_ApplicationAttribute = _objref_ApplicationAttribute
del ApplicationAttribute, _objref_ApplicationAttribute

# ApplicationAttribute skeleton
__name__ = "org__POA.asam.ods"
class ApplicationAttribute (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.ApplicationAttribute._NP_RepositoryId


    _omni_op_d = {"getBaseAttribute": _0_org.asam.ods.ApplicationAttribute._d_getBaseAttribute, "getDataType": _0_org.asam.ods.ApplicationAttribute._d_getDataType, "getLength": _0_org.asam.ods.ApplicationAttribute._d_getLength, "getName": _0_org.asam.ods.ApplicationAttribute._d_getName, "getUnit": _0_org.asam.ods.ApplicationAttribute._d_getUnit, "isObligatory": _0_org.asam.ods.ApplicationAttribute._d_isObligatory, "isUnique": _0_org.asam.ods.ApplicationAttribute._d_isUnique, "setBaseAttribute": _0_org.asam.ods.ApplicationAttribute._d_setBaseAttribute, "setDataType": _0_org.asam.ods.ApplicationAttribute._d_setDataType, "setIsObligatory": _0_org.asam.ods.ApplicationAttribute._d_setIsObligatory, "setIsUnique": _0_org.asam.ods.ApplicationAttribute._d_setIsUnique, "setLength": _0_org.asam.ods.ApplicationAttribute._d_setLength, "setName": _0_org.asam.ods.ApplicationAttribute._d_setName, "setUnit": _0_org.asam.ods.ApplicationAttribute._d_setUnit, "setRights": _0_org.asam.ods.ApplicationAttribute._d_setRights, "getRights": _0_org.asam.ods.ApplicationAttribute._d_getRights, "getApplicationElement": _0_org.asam.ods.ApplicationAttribute._d_getApplicationElement, "isAutogenerated": _0_org.asam.ods.ApplicationAttribute._d_isAutogenerated, "setIsAutogenerated": _0_org.asam.ods.ApplicationAttribute._d_setIsAutogenerated, "getEnumerationDefinition": _0_org.asam.ods.ApplicationAttribute._d_getEnumerationDefinition, "setEnumerationDefinition": _0_org.asam.ods.ApplicationAttribute._d_setEnumerationDefinition, "hasUnit": _0_org.asam.ods.ApplicationAttribute._d_hasUnit, "withUnit": _0_org.asam.ods.ApplicationAttribute._d_withUnit, "hasValueFlag": _0_org.asam.ods.ApplicationAttribute._d_hasValueFlag, "withValueFlag": _0_org.asam.ods.ApplicationAttribute._d_withValueFlag}

ApplicationAttribute._omni_skeleton = ApplicationAttribute
_0_org__POA.asam.ods.ApplicationAttribute = ApplicationAttribute
omniORB.registerSkeleton(ApplicationAttribute._NP_RepositoryId, ApplicationAttribute)
del ApplicationAttribute
__name__ = "org.asam.ods"

# interface ApplicationElement
_0_org.asam.ods._d_ApplicationElement = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/ApplicationElement:1.0", "ApplicationElement")
omniORB.typeMapping["IDL:org/asam/ods/ApplicationElement:1.0"] = _0_org.asam.ods._d_ApplicationElement
_0_org.asam.ods.ApplicationElement = omniORB.newEmptyClass()
class ApplicationElement :
    _NP_RepositoryId = _0_org.asam.ods._d_ApplicationElement[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.ApplicationElement = ApplicationElement
_0_org.asam.ods._tc_ApplicationElement = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ApplicationElement)
omniORB.registerType(ApplicationElement._NP_RepositoryId, _0_org.asam.ods._d_ApplicationElement, _0_org.asam.ods._tc_ApplicationElement)

# ApplicationElement operations and attributes
ApplicationElement._d_createAttribute = ((), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationAttribute:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_createInstance = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getAllRelatedElements = ((), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationElementSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getAllRelations = ((), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelationSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getAttributeByBaseName = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationAttribute:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getAttributeByName = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationAttribute:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getAttributes = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationAttributeSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getBaseElement = ((), (omniORB.typeMapping["IDL:org/asam/ods/BaseElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getId = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getInstanceById = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getInstanceByName = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getInstances = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElementIterator:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getName = ((), (omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getRelatedElementsByRelationship = ((omniORB.typeMapping["IDL:org/asam/ods/Relationship:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationElementSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getRelationsByType = ((omniORB.typeMapping["IDL:org/asam/ods/RelationType:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelationSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_listAllRelatedElements = ((), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_listAttributes = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_listInstances = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameIterator:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_listRelatedElementsByRelationship = ((omniORB.typeMapping["IDL:org/asam/ods/Relationship:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_removeAttribute = ((omniORB.typeMapping["IDL:org/asam/ods/ApplicationAttribute:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_removeInstance = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_setBaseElement = ((omniORB.typeMapping["IDL:org/asam/ods/BaseElement:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_setName = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_setRights = ((omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/RightsSet:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getRights = ((), (omniORB.typeMapping["IDL:org/asam/ods/ACLSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getInitialRights = ((), (omniORB.typeMapping["IDL:org/asam/ods/InitialRightSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_setInitialRights = ((omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/RightsSet:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_setInitialRightRelation = ((omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelation:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getInitialRightRelations = ((), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelationSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getSecurityLevel = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_setSecurityLevel = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/RightsSet:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getApplicationStructure = ((), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationStructure:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_createInstances = ((omniORB.typeMapping["IDL:org/asam/ods/NameValueSeqUnitSequence:1.0"], omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelationInstanceElementSeqSequence:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElementSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationElement._d_getRelationsByBaseName = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelationSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# ApplicationElement object reference
class _objref_ApplicationElement (CORBA.Object):
    _NP_RepositoryId = ApplicationElement._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def createAttribute(self, *args):
        return self._obj.invoke("createAttribute", _0_org.asam.ods.ApplicationElement._d_createAttribute, args)

    def createInstance(self, *args):
        return self._obj.invoke("createInstance", _0_org.asam.ods.ApplicationElement._d_createInstance, args)

    def getAllRelatedElements(self, *args):
        return self._obj.invoke("getAllRelatedElements", _0_org.asam.ods.ApplicationElement._d_getAllRelatedElements, args)

    def getAllRelations(self, *args):
        return self._obj.invoke("getAllRelations", _0_org.asam.ods.ApplicationElement._d_getAllRelations, args)

    def getAttributeByBaseName(self, *args):
        return self._obj.invoke("getAttributeByBaseName", _0_org.asam.ods.ApplicationElement._d_getAttributeByBaseName, args)

    def getAttributeByName(self, *args):
        return self._obj.invoke("getAttributeByName", _0_org.asam.ods.ApplicationElement._d_getAttributeByName, args)

    def getAttributes(self, *args):
        return self._obj.invoke("getAttributes", _0_org.asam.ods.ApplicationElement._d_getAttributes, args)

    def getBaseElement(self, *args):
        return self._obj.invoke("getBaseElement", _0_org.asam.ods.ApplicationElement._d_getBaseElement, args)

    def getId(self, *args):
        return self._obj.invoke("getId", _0_org.asam.ods.ApplicationElement._d_getId, args)

    def getInstanceById(self, *args):
        return self._obj.invoke("getInstanceById", _0_org.asam.ods.ApplicationElement._d_getInstanceById, args)

    def getInstanceByName(self, *args):
        return self._obj.invoke("getInstanceByName", _0_org.asam.ods.ApplicationElement._d_getInstanceByName, args)

    def getInstances(self, *args):
        return self._obj.invoke("getInstances", _0_org.asam.ods.ApplicationElement._d_getInstances, args)

    def getName(self, *args):
        return self._obj.invoke("getName", _0_org.asam.ods.ApplicationElement._d_getName, args)

    def getRelatedElementsByRelationship(self, *args):
        return self._obj.invoke("getRelatedElementsByRelationship", _0_org.asam.ods.ApplicationElement._d_getRelatedElementsByRelationship, args)

    def getRelationsByType(self, *args):
        return self._obj.invoke("getRelationsByType", _0_org.asam.ods.ApplicationElement._d_getRelationsByType, args)

    def listAllRelatedElements(self, *args):
        return self._obj.invoke("listAllRelatedElements", _0_org.asam.ods.ApplicationElement._d_listAllRelatedElements, args)

    def listAttributes(self, *args):
        return self._obj.invoke("listAttributes", _0_org.asam.ods.ApplicationElement._d_listAttributes, args)

    def listInstances(self, *args):
        return self._obj.invoke("listInstances", _0_org.asam.ods.ApplicationElement._d_listInstances, args)

    def listRelatedElementsByRelationship(self, *args):
        return self._obj.invoke("listRelatedElementsByRelationship", _0_org.asam.ods.ApplicationElement._d_listRelatedElementsByRelationship, args)

    def removeAttribute(self, *args):
        return self._obj.invoke("removeAttribute", _0_org.asam.ods.ApplicationElement._d_removeAttribute, args)

    def removeInstance(self, *args):
        return self._obj.invoke("removeInstance", _0_org.asam.ods.ApplicationElement._d_removeInstance, args)

    def setBaseElement(self, *args):
        return self._obj.invoke("setBaseElement", _0_org.asam.ods.ApplicationElement._d_setBaseElement, args)

    def setName(self, *args):
        return self._obj.invoke("setName", _0_org.asam.ods.ApplicationElement._d_setName, args)

    def setRights(self, *args):
        return self._obj.invoke("setRights", _0_org.asam.ods.ApplicationElement._d_setRights, args)

    def getRights(self, *args):
        return self._obj.invoke("getRights", _0_org.asam.ods.ApplicationElement._d_getRights, args)

    def getInitialRights(self, *args):
        return self._obj.invoke("getInitialRights", _0_org.asam.ods.ApplicationElement._d_getInitialRights, args)

    def setInitialRights(self, *args):
        return self._obj.invoke("setInitialRights", _0_org.asam.ods.ApplicationElement._d_setInitialRights, args)

    def setInitialRightRelation(self, *args):
        return self._obj.invoke("setInitialRightRelation", _0_org.asam.ods.ApplicationElement._d_setInitialRightRelation, args)

    def getInitialRightRelations(self, *args):
        return self._obj.invoke("getInitialRightRelations", _0_org.asam.ods.ApplicationElement._d_getInitialRightRelations, args)

    def getSecurityLevel(self, *args):
        return self._obj.invoke("getSecurityLevel", _0_org.asam.ods.ApplicationElement._d_getSecurityLevel, args)

    def setSecurityLevel(self, *args):
        return self._obj.invoke("setSecurityLevel", _0_org.asam.ods.ApplicationElement._d_setSecurityLevel, args)

    def getApplicationStructure(self, *args):
        return self._obj.invoke("getApplicationStructure", _0_org.asam.ods.ApplicationElement._d_getApplicationStructure, args)

    def createInstances(self, *args):
        return self._obj.invoke("createInstances", _0_org.asam.ods.ApplicationElement._d_createInstances, args)

    def getRelationsByBaseName(self, *args):
        return self._obj.invoke("getRelationsByBaseName", _0_org.asam.ods.ApplicationElement._d_getRelationsByBaseName, args)

omniORB.registerObjref(ApplicationElement._NP_RepositoryId, _objref_ApplicationElement)
_0_org.asam.ods._objref_ApplicationElement = _objref_ApplicationElement
del ApplicationElement, _objref_ApplicationElement

# ApplicationElement skeleton
__name__ = "org__POA.asam.ods"
class ApplicationElement (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.ApplicationElement._NP_RepositoryId


    _omni_op_d = {"createAttribute": _0_org.asam.ods.ApplicationElement._d_createAttribute, "createInstance": _0_org.asam.ods.ApplicationElement._d_createInstance, "getAllRelatedElements": _0_org.asam.ods.ApplicationElement._d_getAllRelatedElements, "getAllRelations": _0_org.asam.ods.ApplicationElement._d_getAllRelations, "getAttributeByBaseName": _0_org.asam.ods.ApplicationElement._d_getAttributeByBaseName, "getAttributeByName": _0_org.asam.ods.ApplicationElement._d_getAttributeByName, "getAttributes": _0_org.asam.ods.ApplicationElement._d_getAttributes, "getBaseElement": _0_org.asam.ods.ApplicationElement._d_getBaseElement, "getId": _0_org.asam.ods.ApplicationElement._d_getId, "getInstanceById": _0_org.asam.ods.ApplicationElement._d_getInstanceById, "getInstanceByName": _0_org.asam.ods.ApplicationElement._d_getInstanceByName, "getInstances": _0_org.asam.ods.ApplicationElement._d_getInstances, "getName": _0_org.asam.ods.ApplicationElement._d_getName, "getRelatedElementsByRelationship": _0_org.asam.ods.ApplicationElement._d_getRelatedElementsByRelationship, "getRelationsByType": _0_org.asam.ods.ApplicationElement._d_getRelationsByType, "listAllRelatedElements": _0_org.asam.ods.ApplicationElement._d_listAllRelatedElements, "listAttributes": _0_org.asam.ods.ApplicationElement._d_listAttributes, "listInstances": _0_org.asam.ods.ApplicationElement._d_listInstances, "listRelatedElementsByRelationship": _0_org.asam.ods.ApplicationElement._d_listRelatedElementsByRelationship, "removeAttribute": _0_org.asam.ods.ApplicationElement._d_removeAttribute, "removeInstance": _0_org.asam.ods.ApplicationElement._d_removeInstance, "setBaseElement": _0_org.asam.ods.ApplicationElement._d_setBaseElement, "setName": _0_org.asam.ods.ApplicationElement._d_setName, "setRights": _0_org.asam.ods.ApplicationElement._d_setRights, "getRights": _0_org.asam.ods.ApplicationElement._d_getRights, "getInitialRights": _0_org.asam.ods.ApplicationElement._d_getInitialRights, "setInitialRights": _0_org.asam.ods.ApplicationElement._d_setInitialRights, "setInitialRightRelation": _0_org.asam.ods.ApplicationElement._d_setInitialRightRelation, "getInitialRightRelations": _0_org.asam.ods.ApplicationElement._d_getInitialRightRelations, "getSecurityLevel": _0_org.asam.ods.ApplicationElement._d_getSecurityLevel, "setSecurityLevel": _0_org.asam.ods.ApplicationElement._d_setSecurityLevel, "getApplicationStructure": _0_org.asam.ods.ApplicationElement._d_getApplicationStructure, "createInstances": _0_org.asam.ods.ApplicationElement._d_createInstances, "getRelationsByBaseName": _0_org.asam.ods.ApplicationElement._d_getRelationsByBaseName}

ApplicationElement._omni_skeleton = ApplicationElement
_0_org__POA.asam.ods.ApplicationElement = ApplicationElement
omniORB.registerSkeleton(ApplicationElement._NP_RepositoryId, ApplicationElement)
del ApplicationElement
__name__ = "org.asam.ods"

# interface ApplicationRelation
_0_org.asam.ods._d_ApplicationRelation = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/ApplicationRelation:1.0", "ApplicationRelation")
omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelation:1.0"] = _0_org.asam.ods._d_ApplicationRelation
_0_org.asam.ods.ApplicationRelation = omniORB.newEmptyClass()
class ApplicationRelation :
    _NP_RepositoryId = _0_org.asam.ods._d_ApplicationRelation[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.ApplicationRelation = ApplicationRelation
_0_org.asam.ods._tc_ApplicationRelation = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ApplicationRelation)
omniORB.registerType(ApplicationRelation._NP_RepositoryId, _0_org.asam.ods._d_ApplicationRelation, _0_org.asam.ods._tc_ApplicationRelation)

# ApplicationRelation operations and attributes
ApplicationRelation._d_getBaseRelation = ((), (omniORB.typeMapping["IDL:org/asam/ods/BaseRelation:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_getElem1 = ((), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_getElem2 = ((), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_getInverseRelationRange = ((), (omniORB.typeMapping["IDL:org/asam/ods/RelationRange:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_getInverseRelationship = ((), (omniORB.typeMapping["IDL:org/asam/ods/Relationship:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_getRelationName = ((), (omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_getRelationRange = ((), (omniORB.typeMapping["IDL:org/asam/ods/RelationRange:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_getRelationship = ((), (omniORB.typeMapping["IDL:org/asam/ods/Relationship:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_getRelationType = ((), (omniORB.typeMapping["IDL:org/asam/ods/RelationType:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_setBaseRelation = ((omniORB.typeMapping["IDL:org/asam/ods/BaseRelation:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_setElem1 = ((omniORB.typeMapping["IDL:org/asam/ods/ApplicationElement:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_setElem2 = ((omniORB.typeMapping["IDL:org/asam/ods/ApplicationElement:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_setInverseRelationRange = ((omniORB.typeMapping["IDL:org/asam/ods/RelationRange:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_setRelationName = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_setRelationRange = ((omniORB.typeMapping["IDL:org/asam/ods/RelationRange:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_setRelationType = ((omniORB.typeMapping["IDL:org/asam/ods/RelationType:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_getInverseRelationName = ((), (omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationRelation._d_setInverseRelationName = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# ApplicationRelation object reference
class _objref_ApplicationRelation (CORBA.Object):
    _NP_RepositoryId = ApplicationRelation._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getBaseRelation(self, *args):
        return self._obj.invoke("getBaseRelation", _0_org.asam.ods.ApplicationRelation._d_getBaseRelation, args)

    def getElem1(self, *args):
        return self._obj.invoke("getElem1", _0_org.asam.ods.ApplicationRelation._d_getElem1, args)

    def getElem2(self, *args):
        return self._obj.invoke("getElem2", _0_org.asam.ods.ApplicationRelation._d_getElem2, args)

    def getInverseRelationRange(self, *args):
        return self._obj.invoke("getInverseRelationRange", _0_org.asam.ods.ApplicationRelation._d_getInverseRelationRange, args)

    def getInverseRelationship(self, *args):
        return self._obj.invoke("getInverseRelationship", _0_org.asam.ods.ApplicationRelation._d_getInverseRelationship, args)

    def getRelationName(self, *args):
        return self._obj.invoke("getRelationName", _0_org.asam.ods.ApplicationRelation._d_getRelationName, args)

    def getRelationRange(self, *args):
        return self._obj.invoke("getRelationRange", _0_org.asam.ods.ApplicationRelation._d_getRelationRange, args)

    def getRelationship(self, *args):
        return self._obj.invoke("getRelationship", _0_org.asam.ods.ApplicationRelation._d_getRelationship, args)

    def getRelationType(self, *args):
        return self._obj.invoke("getRelationType", _0_org.asam.ods.ApplicationRelation._d_getRelationType, args)

    def setBaseRelation(self, *args):
        return self._obj.invoke("setBaseRelation", _0_org.asam.ods.ApplicationRelation._d_setBaseRelation, args)

    def setElem1(self, *args):
        return self._obj.invoke("setElem1", _0_org.asam.ods.ApplicationRelation._d_setElem1, args)

    def setElem2(self, *args):
        return self._obj.invoke("setElem2", _0_org.asam.ods.ApplicationRelation._d_setElem2, args)

    def setInverseRelationRange(self, *args):
        return self._obj.invoke("setInverseRelationRange", _0_org.asam.ods.ApplicationRelation._d_setInverseRelationRange, args)

    def setRelationName(self, *args):
        return self._obj.invoke("setRelationName", _0_org.asam.ods.ApplicationRelation._d_setRelationName, args)

    def setRelationRange(self, *args):
        return self._obj.invoke("setRelationRange", _0_org.asam.ods.ApplicationRelation._d_setRelationRange, args)

    def setRelationType(self, *args):
        return self._obj.invoke("setRelationType", _0_org.asam.ods.ApplicationRelation._d_setRelationType, args)

    def getInverseRelationName(self, *args):
        return self._obj.invoke("getInverseRelationName", _0_org.asam.ods.ApplicationRelation._d_getInverseRelationName, args)

    def setInverseRelationName(self, *args):
        return self._obj.invoke("setInverseRelationName", _0_org.asam.ods.ApplicationRelation._d_setInverseRelationName, args)

omniORB.registerObjref(ApplicationRelation._NP_RepositoryId, _objref_ApplicationRelation)
_0_org.asam.ods._objref_ApplicationRelation = _objref_ApplicationRelation
del ApplicationRelation, _objref_ApplicationRelation

# ApplicationRelation skeleton
__name__ = "org__POA.asam.ods"
class ApplicationRelation (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.ApplicationRelation._NP_RepositoryId


    _omni_op_d = {"getBaseRelation": _0_org.asam.ods.ApplicationRelation._d_getBaseRelation, "getElem1": _0_org.asam.ods.ApplicationRelation._d_getElem1, "getElem2": _0_org.asam.ods.ApplicationRelation._d_getElem2, "getInverseRelationRange": _0_org.asam.ods.ApplicationRelation._d_getInverseRelationRange, "getInverseRelationship": _0_org.asam.ods.ApplicationRelation._d_getInverseRelationship, "getRelationName": _0_org.asam.ods.ApplicationRelation._d_getRelationName, "getRelationRange": _0_org.asam.ods.ApplicationRelation._d_getRelationRange, "getRelationship": _0_org.asam.ods.ApplicationRelation._d_getRelationship, "getRelationType": _0_org.asam.ods.ApplicationRelation._d_getRelationType, "setBaseRelation": _0_org.asam.ods.ApplicationRelation._d_setBaseRelation, "setElem1": _0_org.asam.ods.ApplicationRelation._d_setElem1, "setElem2": _0_org.asam.ods.ApplicationRelation._d_setElem2, "setInverseRelationRange": _0_org.asam.ods.ApplicationRelation._d_setInverseRelationRange, "setRelationName": _0_org.asam.ods.ApplicationRelation._d_setRelationName, "setRelationRange": _0_org.asam.ods.ApplicationRelation._d_setRelationRange, "setRelationType": _0_org.asam.ods.ApplicationRelation._d_setRelationType, "getInverseRelationName": _0_org.asam.ods.ApplicationRelation._d_getInverseRelationName, "setInverseRelationName": _0_org.asam.ods.ApplicationRelation._d_setInverseRelationName}

ApplicationRelation._omni_skeleton = ApplicationRelation
_0_org__POA.asam.ods.ApplicationRelation = ApplicationRelation
omniORB.registerSkeleton(ApplicationRelation._NP_RepositoryId, ApplicationRelation)
del ApplicationRelation
__name__ = "org.asam.ods"

# interface ApplicationStructure
_0_org.asam.ods._d_ApplicationStructure = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/ApplicationStructure:1.0", "ApplicationStructure")
omniORB.typeMapping["IDL:org/asam/ods/ApplicationStructure:1.0"] = _0_org.asam.ods._d_ApplicationStructure
_0_org.asam.ods.ApplicationStructure = omniORB.newEmptyClass()
class ApplicationStructure :
    _NP_RepositoryId = _0_org.asam.ods._d_ApplicationStructure[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.ApplicationStructure = ApplicationStructure
_0_org.asam.ods._tc_ApplicationStructure = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ApplicationStructure)
omniORB.registerType(ApplicationStructure._NP_RepositoryId, _0_org.asam.ods._d_ApplicationStructure, _0_org.asam.ods._tc_ApplicationStructure)

# ApplicationStructure operations and attributes
ApplicationStructure._d_check = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_createElement = ((omniORB.typeMapping["IDL:org/asam/ods/BaseElement:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_createRelation = ((), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelation:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_getElementById = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_getElementByName = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_getElements = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationElementSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_getElementsByBaseType = ((omniORB.typeMapping["IDL:org/asam/ods/BaseType:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationElementSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_getInstanceByAsamPath = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_getRelations = ((omniORB.typeMapping["IDL:org/asam/ods/ApplicationElement:1.0"], omniORB.typeMapping["IDL:org/asam/ods/ApplicationElement:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelationSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_getTopLevelElements = ((omniORB.typeMapping["IDL:org/asam/ods/BaseType:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationElementSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_listElements = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_listElementsByBaseType = ((omniORB.typeMapping["IDL:org/asam/ods/BaseType:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_listTopLevelElements = ((omniORB.typeMapping["IDL:org/asam/ods/BaseType:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_removeElement = ((omniORB.typeMapping["IDL:org/asam/ods/ApplicationElement:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_removeRelation = ((omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelation:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_getInstancesById = ((omniORB.typeMapping["IDL:org/asam/ods/ElemIdSequence:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElementSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_getSession = ((), (omniORB.typeMapping["IDL:org/asam/ods/AoSession:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_createEnumerationDefinition = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/EnumerationDefinition:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_removeEnumerationDefinition = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_listEnumerations = ((), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_getEnumerationDefinition = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/EnumerationDefinition:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplicationStructure._d_createInstanceRelations = ((omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelation:1.0"], omniORB.typeMapping["IDL:org/asam/ods/InstanceElementSequence:1.0"], omniORB.typeMapping["IDL:org/asam/ods/InstanceElementSequence:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# ApplicationStructure object reference
class _objref_ApplicationStructure (CORBA.Object):
    _NP_RepositoryId = ApplicationStructure._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def check(self, *args):
        return self._obj.invoke("check", _0_org.asam.ods.ApplicationStructure._d_check, args)

    def createElement(self, *args):
        return self._obj.invoke("createElement", _0_org.asam.ods.ApplicationStructure._d_createElement, args)

    def createRelation(self, *args):
        return self._obj.invoke("createRelation", _0_org.asam.ods.ApplicationStructure._d_createRelation, args)

    def getElementById(self, *args):
        return self._obj.invoke("getElementById", _0_org.asam.ods.ApplicationStructure._d_getElementById, args)

    def getElementByName(self, *args):
        return self._obj.invoke("getElementByName", _0_org.asam.ods.ApplicationStructure._d_getElementByName, args)

    def getElements(self, *args):
        return self._obj.invoke("getElements", _0_org.asam.ods.ApplicationStructure._d_getElements, args)

    def getElementsByBaseType(self, *args):
        return self._obj.invoke("getElementsByBaseType", _0_org.asam.ods.ApplicationStructure._d_getElementsByBaseType, args)

    def getInstanceByAsamPath(self, *args):
        return self._obj.invoke("getInstanceByAsamPath", _0_org.asam.ods.ApplicationStructure._d_getInstanceByAsamPath, args)

    def getRelations(self, *args):
        return self._obj.invoke("getRelations", _0_org.asam.ods.ApplicationStructure._d_getRelations, args)

    def getTopLevelElements(self, *args):
        return self._obj.invoke("getTopLevelElements", _0_org.asam.ods.ApplicationStructure._d_getTopLevelElements, args)

    def listElements(self, *args):
        return self._obj.invoke("listElements", _0_org.asam.ods.ApplicationStructure._d_listElements, args)

    def listElementsByBaseType(self, *args):
        return self._obj.invoke("listElementsByBaseType", _0_org.asam.ods.ApplicationStructure._d_listElementsByBaseType, args)

    def listTopLevelElements(self, *args):
        return self._obj.invoke("listTopLevelElements", _0_org.asam.ods.ApplicationStructure._d_listTopLevelElements, args)

    def removeElement(self, *args):
        return self._obj.invoke("removeElement", _0_org.asam.ods.ApplicationStructure._d_removeElement, args)

    def removeRelation(self, *args):
        return self._obj.invoke("removeRelation", _0_org.asam.ods.ApplicationStructure._d_removeRelation, args)

    def getInstancesById(self, *args):
        return self._obj.invoke("getInstancesById", _0_org.asam.ods.ApplicationStructure._d_getInstancesById, args)

    def getSession(self, *args):
        return self._obj.invoke("getSession", _0_org.asam.ods.ApplicationStructure._d_getSession, args)

    def createEnumerationDefinition(self, *args):
        return self._obj.invoke("createEnumerationDefinition", _0_org.asam.ods.ApplicationStructure._d_createEnumerationDefinition, args)

    def removeEnumerationDefinition(self, *args):
        return self._obj.invoke("removeEnumerationDefinition", _0_org.asam.ods.ApplicationStructure._d_removeEnumerationDefinition, args)

    def listEnumerations(self, *args):
        return self._obj.invoke("listEnumerations", _0_org.asam.ods.ApplicationStructure._d_listEnumerations, args)

    def getEnumerationDefinition(self, *args):
        return self._obj.invoke("getEnumerationDefinition", _0_org.asam.ods.ApplicationStructure._d_getEnumerationDefinition, args)

    def createInstanceRelations(self, *args):
        return self._obj.invoke("createInstanceRelations", _0_org.asam.ods.ApplicationStructure._d_createInstanceRelations, args)

omniORB.registerObjref(ApplicationStructure._NP_RepositoryId, _objref_ApplicationStructure)
_0_org.asam.ods._objref_ApplicationStructure = _objref_ApplicationStructure
del ApplicationStructure, _objref_ApplicationStructure

# ApplicationStructure skeleton
__name__ = "org__POA.asam.ods"
class ApplicationStructure (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.ApplicationStructure._NP_RepositoryId


    _omni_op_d = {"check": _0_org.asam.ods.ApplicationStructure._d_check, "createElement": _0_org.asam.ods.ApplicationStructure._d_createElement, "createRelation": _0_org.asam.ods.ApplicationStructure._d_createRelation, "getElementById": _0_org.asam.ods.ApplicationStructure._d_getElementById, "getElementByName": _0_org.asam.ods.ApplicationStructure._d_getElementByName, "getElements": _0_org.asam.ods.ApplicationStructure._d_getElements, "getElementsByBaseType": _0_org.asam.ods.ApplicationStructure._d_getElementsByBaseType, "getInstanceByAsamPath": _0_org.asam.ods.ApplicationStructure._d_getInstanceByAsamPath, "getRelations": _0_org.asam.ods.ApplicationStructure._d_getRelations, "getTopLevelElements": _0_org.asam.ods.ApplicationStructure._d_getTopLevelElements, "listElements": _0_org.asam.ods.ApplicationStructure._d_listElements, "listElementsByBaseType": _0_org.asam.ods.ApplicationStructure._d_listElementsByBaseType, "listTopLevelElements": _0_org.asam.ods.ApplicationStructure._d_listTopLevelElements, "removeElement": _0_org.asam.ods.ApplicationStructure._d_removeElement, "removeRelation": _0_org.asam.ods.ApplicationStructure._d_removeRelation, "getInstancesById": _0_org.asam.ods.ApplicationStructure._d_getInstancesById, "getSession": _0_org.asam.ods.ApplicationStructure._d_getSession, "createEnumerationDefinition": _0_org.asam.ods.ApplicationStructure._d_createEnumerationDefinition, "removeEnumerationDefinition": _0_org.asam.ods.ApplicationStructure._d_removeEnumerationDefinition, "listEnumerations": _0_org.asam.ods.ApplicationStructure._d_listEnumerations, "getEnumerationDefinition": _0_org.asam.ods.ApplicationStructure._d_getEnumerationDefinition, "createInstanceRelations": _0_org.asam.ods.ApplicationStructure._d_createInstanceRelations}

ApplicationStructure._omni_skeleton = ApplicationStructure
_0_org__POA.asam.ods.ApplicationStructure = ApplicationStructure
omniORB.registerSkeleton(ApplicationStructure._NP_RepositoryId, ApplicationStructure)
del ApplicationStructure
__name__ = "org.asam.ods"

# interface BaseAttribute
_0_org.asam.ods._d_BaseAttribute = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/BaseAttribute:1.0", "BaseAttribute")
omniORB.typeMapping["IDL:org/asam/ods/BaseAttribute:1.0"] = _0_org.asam.ods._d_BaseAttribute
_0_org.asam.ods.BaseAttribute = omniORB.newEmptyClass()
class BaseAttribute :
    _NP_RepositoryId = _0_org.asam.ods._d_BaseAttribute[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.BaseAttribute = BaseAttribute
_0_org.asam.ods._tc_BaseAttribute = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_BaseAttribute)
omniORB.registerType(BaseAttribute._NP_RepositoryId, _0_org.asam.ods._d_BaseAttribute, _0_org.asam.ods._tc_BaseAttribute)

# BaseAttribute operations and attributes
BaseAttribute._d_getDataType = ((), (omniORB.typeMapping["IDL:org/asam/ods/DataType:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseAttribute._d_getName = ((), (omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseAttribute._d_isObligatory = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseAttribute._d_isUnique = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseAttribute._d_getBaseElement = ((), (omniORB.typeMapping["IDL:org/asam/ods/BaseElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseAttribute._d_getEnumerationDefinition = ((), (omniORB.typeMapping["IDL:org/asam/ods/EnumerationDefinition:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# BaseAttribute object reference
class _objref_BaseAttribute (CORBA.Object):
    _NP_RepositoryId = BaseAttribute._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getDataType(self, *args):
        return self._obj.invoke("getDataType", _0_org.asam.ods.BaseAttribute._d_getDataType, args)

    def getName(self, *args):
        return self._obj.invoke("getName", _0_org.asam.ods.BaseAttribute._d_getName, args)

    def isObligatory(self, *args):
        return self._obj.invoke("isObligatory", _0_org.asam.ods.BaseAttribute._d_isObligatory, args)

    def isUnique(self, *args):
        return self._obj.invoke("isUnique", _0_org.asam.ods.BaseAttribute._d_isUnique, args)

    def getBaseElement(self, *args):
        return self._obj.invoke("getBaseElement", _0_org.asam.ods.BaseAttribute._d_getBaseElement, args)

    def getEnumerationDefinition(self, *args):
        return self._obj.invoke("getEnumerationDefinition", _0_org.asam.ods.BaseAttribute._d_getEnumerationDefinition, args)

omniORB.registerObjref(BaseAttribute._NP_RepositoryId, _objref_BaseAttribute)
_0_org.asam.ods._objref_BaseAttribute = _objref_BaseAttribute
del BaseAttribute, _objref_BaseAttribute

# BaseAttribute skeleton
__name__ = "org__POA.asam.ods"
class BaseAttribute (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.BaseAttribute._NP_RepositoryId


    _omni_op_d = {"getDataType": _0_org.asam.ods.BaseAttribute._d_getDataType, "getName": _0_org.asam.ods.BaseAttribute._d_getName, "isObligatory": _0_org.asam.ods.BaseAttribute._d_isObligatory, "isUnique": _0_org.asam.ods.BaseAttribute._d_isUnique, "getBaseElement": _0_org.asam.ods.BaseAttribute._d_getBaseElement, "getEnumerationDefinition": _0_org.asam.ods.BaseAttribute._d_getEnumerationDefinition}

BaseAttribute._omni_skeleton = BaseAttribute
_0_org__POA.asam.ods.BaseAttribute = BaseAttribute
omniORB.registerSkeleton(BaseAttribute._NP_RepositoryId, BaseAttribute)
del BaseAttribute
__name__ = "org.asam.ods"

# interface BaseElement
_0_org.asam.ods._d_BaseElement = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/BaseElement:1.0", "BaseElement")
omniORB.typeMapping["IDL:org/asam/ods/BaseElement:1.0"] = _0_org.asam.ods._d_BaseElement
_0_org.asam.ods.BaseElement = omniORB.newEmptyClass()
class BaseElement :
    _NP_RepositoryId = _0_org.asam.ods._d_BaseElement[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.BaseElement = BaseElement
_0_org.asam.ods._tc_BaseElement = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_BaseElement)
omniORB.registerType(BaseElement._NP_RepositoryId, _0_org.asam.ods._d_BaseElement, _0_org.asam.ods._tc_BaseElement)

# BaseElement operations and attributes
BaseElement._d_getAllRelations = ((), (omniORB.typeMapping["IDL:org/asam/ods/BaseRelationSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseElement._d_getAttributes = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/BaseAttributeSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseElement._d_getRelatedElementsByRelationship = ((omniORB.typeMapping["IDL:org/asam/ods/Relationship:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/BaseElementSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseElement._d_getRelationsByType = ((omniORB.typeMapping["IDL:org/asam/ods/RelationType:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/BaseRelationSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseElement._d_getType = ((), (omniORB.typeMapping["IDL:org/asam/ods/BaseType:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseElement._d_isTopLevel = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseElement._d_listAttributes = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseElement._d_listRelatedElementsByRelationship = ((omniORB.typeMapping["IDL:org/asam/ods/Relationship:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/BaseTypeSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# BaseElement object reference
class _objref_BaseElement (CORBA.Object):
    _NP_RepositoryId = BaseElement._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getAllRelations(self, *args):
        return self._obj.invoke("getAllRelations", _0_org.asam.ods.BaseElement._d_getAllRelations, args)

    def getAttributes(self, *args):
        return self._obj.invoke("getAttributes", _0_org.asam.ods.BaseElement._d_getAttributes, args)

    def getRelatedElementsByRelationship(self, *args):
        return self._obj.invoke("getRelatedElementsByRelationship", _0_org.asam.ods.BaseElement._d_getRelatedElementsByRelationship, args)

    def getRelationsByType(self, *args):
        return self._obj.invoke("getRelationsByType", _0_org.asam.ods.BaseElement._d_getRelationsByType, args)

    def getType(self, *args):
        return self._obj.invoke("getType", _0_org.asam.ods.BaseElement._d_getType, args)

    def isTopLevel(self, *args):
        return self._obj.invoke("isTopLevel", _0_org.asam.ods.BaseElement._d_isTopLevel, args)

    def listAttributes(self, *args):
        return self._obj.invoke("listAttributes", _0_org.asam.ods.BaseElement._d_listAttributes, args)

    def listRelatedElementsByRelationship(self, *args):
        return self._obj.invoke("listRelatedElementsByRelationship", _0_org.asam.ods.BaseElement._d_listRelatedElementsByRelationship, args)

omniORB.registerObjref(BaseElement._NP_RepositoryId, _objref_BaseElement)
_0_org.asam.ods._objref_BaseElement = _objref_BaseElement
del BaseElement, _objref_BaseElement

# BaseElement skeleton
__name__ = "org__POA.asam.ods"
class BaseElement (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.BaseElement._NP_RepositoryId


    _omni_op_d = {"getAllRelations": _0_org.asam.ods.BaseElement._d_getAllRelations, "getAttributes": _0_org.asam.ods.BaseElement._d_getAttributes, "getRelatedElementsByRelationship": _0_org.asam.ods.BaseElement._d_getRelatedElementsByRelationship, "getRelationsByType": _0_org.asam.ods.BaseElement._d_getRelationsByType, "getType": _0_org.asam.ods.BaseElement._d_getType, "isTopLevel": _0_org.asam.ods.BaseElement._d_isTopLevel, "listAttributes": _0_org.asam.ods.BaseElement._d_listAttributes, "listRelatedElementsByRelationship": _0_org.asam.ods.BaseElement._d_listRelatedElementsByRelationship}

BaseElement._omni_skeleton = BaseElement
_0_org__POA.asam.ods.BaseElement = BaseElement
omniORB.registerSkeleton(BaseElement._NP_RepositoryId, BaseElement)
del BaseElement
__name__ = "org.asam.ods"

# interface BaseRelation
_0_org.asam.ods._d_BaseRelation = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/BaseRelation:1.0", "BaseRelation")
omniORB.typeMapping["IDL:org/asam/ods/BaseRelation:1.0"] = _0_org.asam.ods._d_BaseRelation
_0_org.asam.ods.BaseRelation = omniORB.newEmptyClass()
class BaseRelation :
    _NP_RepositoryId = _0_org.asam.ods._d_BaseRelation[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.BaseRelation = BaseRelation
_0_org.asam.ods._tc_BaseRelation = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_BaseRelation)
omniORB.registerType(BaseRelation._NP_RepositoryId, _0_org.asam.ods._d_BaseRelation, _0_org.asam.ods._tc_BaseRelation)

# BaseRelation operations and attributes
BaseRelation._d_getElem1 = ((), (omniORB.typeMapping["IDL:org/asam/ods/BaseElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseRelation._d_getElem2 = ((), (omniORB.typeMapping["IDL:org/asam/ods/BaseElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseRelation._d_getInverseRelationRange = ((), (omniORB.typeMapping["IDL:org/asam/ods/RelationRange:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseRelation._d_getInverseRelationship = ((), (omniORB.typeMapping["IDL:org/asam/ods/Relationship:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseRelation._d_getRelationName = ((), (omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseRelation._d_getRelationRange = ((), (omniORB.typeMapping["IDL:org/asam/ods/RelationRange:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseRelation._d_getRelationship = ((), (omniORB.typeMapping["IDL:org/asam/ods/Relationship:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseRelation._d_getRelationType = ((), (omniORB.typeMapping["IDL:org/asam/ods/RelationType:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseRelation._d_getInverseRelationName = ((), (omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# BaseRelation object reference
class _objref_BaseRelation (CORBA.Object):
    _NP_RepositoryId = BaseRelation._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getElem1(self, *args):
        return self._obj.invoke("getElem1", _0_org.asam.ods.BaseRelation._d_getElem1, args)

    def getElem2(self, *args):
        return self._obj.invoke("getElem2", _0_org.asam.ods.BaseRelation._d_getElem2, args)

    def getInverseRelationRange(self, *args):
        return self._obj.invoke("getInverseRelationRange", _0_org.asam.ods.BaseRelation._d_getInverseRelationRange, args)

    def getInverseRelationship(self, *args):
        return self._obj.invoke("getInverseRelationship", _0_org.asam.ods.BaseRelation._d_getInverseRelationship, args)

    def getRelationName(self, *args):
        return self._obj.invoke("getRelationName", _0_org.asam.ods.BaseRelation._d_getRelationName, args)

    def getRelationRange(self, *args):
        return self._obj.invoke("getRelationRange", _0_org.asam.ods.BaseRelation._d_getRelationRange, args)

    def getRelationship(self, *args):
        return self._obj.invoke("getRelationship", _0_org.asam.ods.BaseRelation._d_getRelationship, args)

    def getRelationType(self, *args):
        return self._obj.invoke("getRelationType", _0_org.asam.ods.BaseRelation._d_getRelationType, args)

    def getInverseRelationName(self, *args):
        return self._obj.invoke("getInverseRelationName", _0_org.asam.ods.BaseRelation._d_getInverseRelationName, args)

omniORB.registerObjref(BaseRelation._NP_RepositoryId, _objref_BaseRelation)
_0_org.asam.ods._objref_BaseRelation = _objref_BaseRelation
del BaseRelation, _objref_BaseRelation

# BaseRelation skeleton
__name__ = "org__POA.asam.ods"
class BaseRelation (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.BaseRelation._NP_RepositoryId


    _omni_op_d = {"getElem1": _0_org.asam.ods.BaseRelation._d_getElem1, "getElem2": _0_org.asam.ods.BaseRelation._d_getElem2, "getInverseRelationRange": _0_org.asam.ods.BaseRelation._d_getInverseRelationRange, "getInverseRelationship": _0_org.asam.ods.BaseRelation._d_getInverseRelationship, "getRelationName": _0_org.asam.ods.BaseRelation._d_getRelationName, "getRelationRange": _0_org.asam.ods.BaseRelation._d_getRelationRange, "getRelationship": _0_org.asam.ods.BaseRelation._d_getRelationship, "getRelationType": _0_org.asam.ods.BaseRelation._d_getRelationType, "getInverseRelationName": _0_org.asam.ods.BaseRelation._d_getInverseRelationName}

BaseRelation._omni_skeleton = BaseRelation
_0_org__POA.asam.ods.BaseRelation = BaseRelation
omniORB.registerSkeleton(BaseRelation._NP_RepositoryId, BaseRelation)
del BaseRelation
__name__ = "org.asam.ods"

# interface BaseStructure
_0_org.asam.ods._d_BaseStructure = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/BaseStructure:1.0", "BaseStructure")
omniORB.typeMapping["IDL:org/asam/ods/BaseStructure:1.0"] = _0_org.asam.ods._d_BaseStructure
_0_org.asam.ods.BaseStructure = omniORB.newEmptyClass()
class BaseStructure :
    _NP_RepositoryId = _0_org.asam.ods._d_BaseStructure[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.BaseStructure = BaseStructure
_0_org.asam.ods._tc_BaseStructure = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_BaseStructure)
omniORB.registerType(BaseStructure._NP_RepositoryId, _0_org.asam.ods._d_BaseStructure, _0_org.asam.ods._tc_BaseStructure)

# BaseStructure operations and attributes
BaseStructure._d_getElementByType = ((omniORB.typeMapping["IDL:org/asam/ods/BaseType:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/BaseElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseStructure._d_getElements = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/BaseElementSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseStructure._d_getRelation = ((omniORB.typeMapping["IDL:org/asam/ods/BaseElement:1.0"], omniORB.typeMapping["IDL:org/asam/ods/BaseElement:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/BaseRelation:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseStructure._d_getTopLevelElements = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/BaseElementSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseStructure._d_getVersion = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseStructure._d_listElements = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/BaseTypeSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
BaseStructure._d_listTopLevelElements = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/BaseTypeSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# BaseStructure object reference
class _objref_BaseStructure (CORBA.Object):
    _NP_RepositoryId = BaseStructure._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getElementByType(self, *args):
        return self._obj.invoke("getElementByType", _0_org.asam.ods.BaseStructure._d_getElementByType, args)

    def getElements(self, *args):
        return self._obj.invoke("getElements", _0_org.asam.ods.BaseStructure._d_getElements, args)

    def getRelation(self, *args):
        return self._obj.invoke("getRelation", _0_org.asam.ods.BaseStructure._d_getRelation, args)

    def getTopLevelElements(self, *args):
        return self._obj.invoke("getTopLevelElements", _0_org.asam.ods.BaseStructure._d_getTopLevelElements, args)

    def getVersion(self, *args):
        return self._obj.invoke("getVersion", _0_org.asam.ods.BaseStructure._d_getVersion, args)

    def listElements(self, *args):
        return self._obj.invoke("listElements", _0_org.asam.ods.BaseStructure._d_listElements, args)

    def listTopLevelElements(self, *args):
        return self._obj.invoke("listTopLevelElements", _0_org.asam.ods.BaseStructure._d_listTopLevelElements, args)

omniORB.registerObjref(BaseStructure._NP_RepositoryId, _objref_BaseStructure)
_0_org.asam.ods._objref_BaseStructure = _objref_BaseStructure
del BaseStructure, _objref_BaseStructure

# BaseStructure skeleton
__name__ = "org__POA.asam.ods"
class BaseStructure (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.BaseStructure._NP_RepositoryId


    _omni_op_d = {"getElementByType": _0_org.asam.ods.BaseStructure._d_getElementByType, "getElements": _0_org.asam.ods.BaseStructure._d_getElements, "getRelation": _0_org.asam.ods.BaseStructure._d_getRelation, "getTopLevelElements": _0_org.asam.ods.BaseStructure._d_getTopLevelElements, "getVersion": _0_org.asam.ods.BaseStructure._d_getVersion, "listElements": _0_org.asam.ods.BaseStructure._d_listElements, "listTopLevelElements": _0_org.asam.ods.BaseStructure._d_listTopLevelElements}

BaseStructure._omni_skeleton = BaseStructure
_0_org__POA.asam.ods.BaseStructure = BaseStructure
omniORB.registerSkeleton(BaseStructure._NP_RepositoryId, BaseStructure)
del BaseStructure
__name__ = "org.asam.ods"

# interface Blob
_0_org.asam.ods._d_Blob = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/Blob:1.0", "Blob")
omniORB.typeMapping["IDL:org/asam/ods/Blob:1.0"] = _0_org.asam.ods._d_Blob
_0_org.asam.ods.Blob = omniORB.newEmptyClass()
class Blob :
    _NP_RepositoryId = _0_org.asam.ods._d_Blob[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.Blob = Blob
_0_org.asam.ods._tc_Blob = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_Blob)
omniORB.registerType(Blob._NP_RepositoryId, _0_org.asam.ods._d_Blob, _0_org.asam.ods._tc_Blob)

# Blob operations and attributes
Blob._d_append = ((omniORB.typeMapping["IDL:org/asam/ods/S_BYTE:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Blob._d_compare = ((omniORB.typeMapping["IDL:org/asam/ods/T_BLOB:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Blob._d_get = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/S_BYTE:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Blob._d_getHeader = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Blob._d_getLength = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Blob._d_set = ((omniORB.typeMapping["IDL:org/asam/ods/S_BYTE:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Blob._d_setHeader = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Blob._d_destroy = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# Blob object reference
class _objref_Blob (CORBA.Object):
    _NP_RepositoryId = Blob._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def append(self, *args):
        return self._obj.invoke("append", _0_org.asam.ods.Blob._d_append, args)

    def compare(self, *args):
        return self._obj.invoke("compare", _0_org.asam.ods.Blob._d_compare, args)

    def get(self, *args):
        return self._obj.invoke("get", _0_org.asam.ods.Blob._d_get, args)

    def getHeader(self, *args):
        return self._obj.invoke("getHeader", _0_org.asam.ods.Blob._d_getHeader, args)

    def getLength(self, *args):
        return self._obj.invoke("getLength", _0_org.asam.ods.Blob._d_getLength, args)

    def set(self, *args):
        return self._obj.invoke("set", _0_org.asam.ods.Blob._d_set, args)

    def setHeader(self, *args):
        return self._obj.invoke("setHeader", _0_org.asam.ods.Blob._d_setHeader, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_org.asam.ods.Blob._d_destroy, args)

omniORB.registerObjref(Blob._NP_RepositoryId, _objref_Blob)
_0_org.asam.ods._objref_Blob = _objref_Blob
del Blob, _objref_Blob

# Blob skeleton
__name__ = "org__POA.asam.ods"
class Blob (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.Blob._NP_RepositoryId


    _omni_op_d = {"append": _0_org.asam.ods.Blob._d_append, "compare": _0_org.asam.ods.Blob._d_compare, "get": _0_org.asam.ods.Blob._d_get, "getHeader": _0_org.asam.ods.Blob._d_getHeader, "getLength": _0_org.asam.ods.Blob._d_getLength, "set": _0_org.asam.ods.Blob._d_set, "setHeader": _0_org.asam.ods.Blob._d_setHeader, "destroy": _0_org.asam.ods.Blob._d_destroy}

Blob._omni_skeleton = Blob
_0_org__POA.asam.ods.Blob = Blob
omniORB.registerSkeleton(Blob._NP_RepositoryId, Blob)
del Blob
__name__ = "org.asam.ods"

# interface Column
_0_org.asam.ods._d_Column = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/Column:1.0", "Column")
omniORB.typeMapping["IDL:org/asam/ods/Column:1.0"] = _0_org.asam.ods._d_Column
_0_org.asam.ods.Column = omniORB.newEmptyClass()
class Column :
    _NP_RepositoryId = _0_org.asam.ods._d_Column[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.Column = Column
_0_org.asam.ods._tc_Column = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_Column)
omniORB.registerType(Column._NP_RepositoryId, _0_org.asam.ods._d_Column, _0_org.asam.ods._tc_Column)

# Column operations and attributes
Column._d_getFormula = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Column._d_getName = ((), (omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Column._d_getSourceMQ = ((), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Column._d_getUnit = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Column._d_setFormula = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Column._d_setUnit = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Column._d_isIndependent = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Column._d_isScaling = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Column._d_setIndependent = ((omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Column._d_setScaling = ((omniORB.typeMapping["IDL:org/asam/ods/T_BOOLEAN:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Column._d_getDataType = ((), (omniORB.typeMapping["IDL:org/asam/ods/DataType:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Column._d_destroy = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Column._d_getSequenceRepresentation = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Column._d_setSequenceRepresentation = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Column._d_getGenerationParameters = ((), (omniORB.typeMapping["IDL:org/asam/ods/TS_Union:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Column._d_setGenerationParameters = ((omniORB.typeMapping["IDL:org/asam/ods/TS_Union:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Column._d_getRawDataType = ((), (omniORB.typeMapping["IDL:org/asam/ods/DataType:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# Column object reference
class _objref_Column (CORBA.Object):
    _NP_RepositoryId = Column._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getFormula(self, *args):
        return self._obj.invoke("getFormula", _0_org.asam.ods.Column._d_getFormula, args)

    def getName(self, *args):
        return self._obj.invoke("getName", _0_org.asam.ods.Column._d_getName, args)

    def getSourceMQ(self, *args):
        return self._obj.invoke("getSourceMQ", _0_org.asam.ods.Column._d_getSourceMQ, args)

    def getUnit(self, *args):
        return self._obj.invoke("getUnit", _0_org.asam.ods.Column._d_getUnit, args)

    def setFormula(self, *args):
        return self._obj.invoke("setFormula", _0_org.asam.ods.Column._d_setFormula, args)

    def setUnit(self, *args):
        return self._obj.invoke("setUnit", _0_org.asam.ods.Column._d_setUnit, args)

    def isIndependent(self, *args):
        return self._obj.invoke("isIndependent", _0_org.asam.ods.Column._d_isIndependent, args)

    def isScaling(self, *args):
        return self._obj.invoke("isScaling", _0_org.asam.ods.Column._d_isScaling, args)

    def setIndependent(self, *args):
        return self._obj.invoke("setIndependent", _0_org.asam.ods.Column._d_setIndependent, args)

    def setScaling(self, *args):
        return self._obj.invoke("setScaling", _0_org.asam.ods.Column._d_setScaling, args)

    def getDataType(self, *args):
        return self._obj.invoke("getDataType", _0_org.asam.ods.Column._d_getDataType, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_org.asam.ods.Column._d_destroy, args)

    def getSequenceRepresentation(self, *args):
        return self._obj.invoke("getSequenceRepresentation", _0_org.asam.ods.Column._d_getSequenceRepresentation, args)

    def setSequenceRepresentation(self, *args):
        return self._obj.invoke("setSequenceRepresentation", _0_org.asam.ods.Column._d_setSequenceRepresentation, args)

    def getGenerationParameters(self, *args):
        return self._obj.invoke("getGenerationParameters", _0_org.asam.ods.Column._d_getGenerationParameters, args)

    def setGenerationParameters(self, *args):
        return self._obj.invoke("setGenerationParameters", _0_org.asam.ods.Column._d_setGenerationParameters, args)

    def getRawDataType(self, *args):
        return self._obj.invoke("getRawDataType", _0_org.asam.ods.Column._d_getRawDataType, args)

omniORB.registerObjref(Column._NP_RepositoryId, _objref_Column)
_0_org.asam.ods._objref_Column = _objref_Column
del Column, _objref_Column

# Column skeleton
__name__ = "org__POA.asam.ods"
class Column (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.Column._NP_RepositoryId


    _omni_op_d = {"getFormula": _0_org.asam.ods.Column._d_getFormula, "getName": _0_org.asam.ods.Column._d_getName, "getSourceMQ": _0_org.asam.ods.Column._d_getSourceMQ, "getUnit": _0_org.asam.ods.Column._d_getUnit, "setFormula": _0_org.asam.ods.Column._d_setFormula, "setUnit": _0_org.asam.ods.Column._d_setUnit, "isIndependent": _0_org.asam.ods.Column._d_isIndependent, "isScaling": _0_org.asam.ods.Column._d_isScaling, "setIndependent": _0_org.asam.ods.Column._d_setIndependent, "setScaling": _0_org.asam.ods.Column._d_setScaling, "getDataType": _0_org.asam.ods.Column._d_getDataType, "destroy": _0_org.asam.ods.Column._d_destroy, "getSequenceRepresentation": _0_org.asam.ods.Column._d_getSequenceRepresentation, "setSequenceRepresentation": _0_org.asam.ods.Column._d_setSequenceRepresentation, "getGenerationParameters": _0_org.asam.ods.Column._d_getGenerationParameters, "setGenerationParameters": _0_org.asam.ods.Column._d_setGenerationParameters, "getRawDataType": _0_org.asam.ods.Column._d_getRawDataType}

Column._omni_skeleton = Column
_0_org__POA.asam.ods.Column = Column
omniORB.registerSkeleton(Column._NP_RepositoryId, Column)
del Column
__name__ = "org.asam.ods"

# interface InstanceElement
_0_org.asam.ods._d_InstanceElement = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/InstanceElement:1.0", "InstanceElement")
omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"] = _0_org.asam.ods._d_InstanceElement
_0_org.asam.ods.InstanceElement = omniORB.newEmptyClass()
class InstanceElement :
    _NP_RepositoryId = _0_org.asam.ods._d_InstanceElement[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.InstanceElement = InstanceElement
_0_org.asam.ods._tc_InstanceElement = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_InstanceElement)
omniORB.registerType(InstanceElement._NP_RepositoryId, _0_org.asam.ods._d_InstanceElement, _0_org.asam.ods._tc_InstanceElement)

# InstanceElement operations and attributes
InstanceElement._d_addInstanceAttribute = ((omniORB.typeMapping["IDL:org/asam/ods/NameValueUnit:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_createRelation = ((omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelation:1.0"], omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_getApplicationElement = ((), (omniORB.typeMapping["IDL:org/asam/ods/ApplicationElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_getAsamPath = ((), (omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_getId = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_getName = ((), (omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_getRelatedInstances = ((omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelation:1.0"], omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElementIterator:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_getRelatedInstancesByRelationship = ((omniORB.typeMapping["IDL:org/asam/ods/Relationship:1.0"], omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElementIterator:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_getValue = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameValueUnit:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_getValueByBaseName = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameValueUnit:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_listAttributes = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], omniORB.typeMapping["IDL:org/asam/ods/AttrType:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_listRelatedInstances = ((omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelation:1.0"], omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/NameIterator:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_listRelatedInstancesByRelationship = ((omniORB.typeMapping["IDL:org/asam/ods/Relationship:1.0"], omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/NameIterator:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_removeInstanceAttribute = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_removeRelation = ((omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelation:1.0"], omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_renameInstanceAttribute = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_setName = ((omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_setValue = ((omniORB.typeMapping["IDL:org/asam/ods/NameValueUnit:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_upcastMeasurement = ((), (omniORB.typeMapping["IDL:org/asam/ods/Measurement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_upcastSubMatrix = ((), (omniORB.typeMapping["IDL:org/asam/ods/SubMatrix:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_getValueInUnit = ((omniORB.typeMapping["IDL:org/asam/ods/NameUnit:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameValueUnit:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_setValueSeq = ((omniORB.typeMapping["IDL:org/asam/ods/NameValueUnitSequence:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_setRights = ((omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/RightsSet:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_getRights = ((), (omniORB.typeMapping["IDL:org/asam/ods/ACLSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_getInitialRights = ((), (omniORB.typeMapping["IDL:org/asam/ods/InitialRightSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_setInitialRights = ((omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/RightsSet:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_shallowCopy = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_deepCopy = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_getValueSeq = ((omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameValueUnitSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_destroy = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_compare = ((omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElement._d_createRelatedInstances = ((omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelation:1.0"], omniORB.typeMapping["IDL:org/asam/ods/NameValueSeqUnitSequence:1.0"], omniORB.typeMapping["IDL:org/asam/ods/ApplicationRelationInstanceElementSeqSequence:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElementSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# InstanceElement object reference
class _objref_InstanceElement (CORBA.Object):
    _NP_RepositoryId = InstanceElement._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def addInstanceAttribute(self, *args):
        return self._obj.invoke("addInstanceAttribute", _0_org.asam.ods.InstanceElement._d_addInstanceAttribute, args)

    def createRelation(self, *args):
        return self._obj.invoke("createRelation", _0_org.asam.ods.InstanceElement._d_createRelation, args)

    def getApplicationElement(self, *args):
        return self._obj.invoke("getApplicationElement", _0_org.asam.ods.InstanceElement._d_getApplicationElement, args)

    def getAsamPath(self, *args):
        return self._obj.invoke("getAsamPath", _0_org.asam.ods.InstanceElement._d_getAsamPath, args)

    def getId(self, *args):
        return self._obj.invoke("getId", _0_org.asam.ods.InstanceElement._d_getId, args)

    def getName(self, *args):
        return self._obj.invoke("getName", _0_org.asam.ods.InstanceElement._d_getName, args)

    def getRelatedInstances(self, *args):
        return self._obj.invoke("getRelatedInstances", _0_org.asam.ods.InstanceElement._d_getRelatedInstances, args)

    def getRelatedInstancesByRelationship(self, *args):
        return self._obj.invoke("getRelatedInstancesByRelationship", _0_org.asam.ods.InstanceElement._d_getRelatedInstancesByRelationship, args)

    def getValue(self, *args):
        return self._obj.invoke("getValue", _0_org.asam.ods.InstanceElement._d_getValue, args)

    def getValueByBaseName(self, *args):
        return self._obj.invoke("getValueByBaseName", _0_org.asam.ods.InstanceElement._d_getValueByBaseName, args)

    def listAttributes(self, *args):
        return self._obj.invoke("listAttributes", _0_org.asam.ods.InstanceElement._d_listAttributes, args)

    def listRelatedInstances(self, *args):
        return self._obj.invoke("listRelatedInstances", _0_org.asam.ods.InstanceElement._d_listRelatedInstances, args)

    def listRelatedInstancesByRelationship(self, *args):
        return self._obj.invoke("listRelatedInstancesByRelationship", _0_org.asam.ods.InstanceElement._d_listRelatedInstancesByRelationship, args)

    def removeInstanceAttribute(self, *args):
        return self._obj.invoke("removeInstanceAttribute", _0_org.asam.ods.InstanceElement._d_removeInstanceAttribute, args)

    def removeRelation(self, *args):
        return self._obj.invoke("removeRelation", _0_org.asam.ods.InstanceElement._d_removeRelation, args)

    def renameInstanceAttribute(self, *args):
        return self._obj.invoke("renameInstanceAttribute", _0_org.asam.ods.InstanceElement._d_renameInstanceAttribute, args)

    def setName(self, *args):
        return self._obj.invoke("setName", _0_org.asam.ods.InstanceElement._d_setName, args)

    def setValue(self, *args):
        return self._obj.invoke("setValue", _0_org.asam.ods.InstanceElement._d_setValue, args)

    def upcastMeasurement(self, *args):
        return self._obj.invoke("upcastMeasurement", _0_org.asam.ods.InstanceElement._d_upcastMeasurement, args)

    def upcastSubMatrix(self, *args):
        return self._obj.invoke("upcastSubMatrix", _0_org.asam.ods.InstanceElement._d_upcastSubMatrix, args)

    def getValueInUnit(self, *args):
        return self._obj.invoke("getValueInUnit", _0_org.asam.ods.InstanceElement._d_getValueInUnit, args)

    def setValueSeq(self, *args):
        return self._obj.invoke("setValueSeq", _0_org.asam.ods.InstanceElement._d_setValueSeq, args)

    def setRights(self, *args):
        return self._obj.invoke("setRights", _0_org.asam.ods.InstanceElement._d_setRights, args)

    def getRights(self, *args):
        return self._obj.invoke("getRights", _0_org.asam.ods.InstanceElement._d_getRights, args)

    def getInitialRights(self, *args):
        return self._obj.invoke("getInitialRights", _0_org.asam.ods.InstanceElement._d_getInitialRights, args)

    def setInitialRights(self, *args):
        return self._obj.invoke("setInitialRights", _0_org.asam.ods.InstanceElement._d_setInitialRights, args)

    def shallowCopy(self, *args):
        return self._obj.invoke("shallowCopy", _0_org.asam.ods.InstanceElement._d_shallowCopy, args)

    def deepCopy(self, *args):
        return self._obj.invoke("deepCopy", _0_org.asam.ods.InstanceElement._d_deepCopy, args)

    def getValueSeq(self, *args):
        return self._obj.invoke("getValueSeq", _0_org.asam.ods.InstanceElement._d_getValueSeq, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_org.asam.ods.InstanceElement._d_destroy, args)

    def compare(self, *args):
        return self._obj.invoke("compare", _0_org.asam.ods.InstanceElement._d_compare, args)

    def createRelatedInstances(self, *args):
        return self._obj.invoke("createRelatedInstances", _0_org.asam.ods.InstanceElement._d_createRelatedInstances, args)

omniORB.registerObjref(InstanceElement._NP_RepositoryId, _objref_InstanceElement)
_0_org.asam.ods._objref_InstanceElement = _objref_InstanceElement
del InstanceElement, _objref_InstanceElement

# InstanceElement skeleton
__name__ = "org__POA.asam.ods"
class InstanceElement (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.InstanceElement._NP_RepositoryId


    _omni_op_d = {"addInstanceAttribute": _0_org.asam.ods.InstanceElement._d_addInstanceAttribute, "createRelation": _0_org.asam.ods.InstanceElement._d_createRelation, "getApplicationElement": _0_org.asam.ods.InstanceElement._d_getApplicationElement, "getAsamPath": _0_org.asam.ods.InstanceElement._d_getAsamPath, "getId": _0_org.asam.ods.InstanceElement._d_getId, "getName": _0_org.asam.ods.InstanceElement._d_getName, "getRelatedInstances": _0_org.asam.ods.InstanceElement._d_getRelatedInstances, "getRelatedInstancesByRelationship": _0_org.asam.ods.InstanceElement._d_getRelatedInstancesByRelationship, "getValue": _0_org.asam.ods.InstanceElement._d_getValue, "getValueByBaseName": _0_org.asam.ods.InstanceElement._d_getValueByBaseName, "listAttributes": _0_org.asam.ods.InstanceElement._d_listAttributes, "listRelatedInstances": _0_org.asam.ods.InstanceElement._d_listRelatedInstances, "listRelatedInstancesByRelationship": _0_org.asam.ods.InstanceElement._d_listRelatedInstancesByRelationship, "removeInstanceAttribute": _0_org.asam.ods.InstanceElement._d_removeInstanceAttribute, "removeRelation": _0_org.asam.ods.InstanceElement._d_removeRelation, "renameInstanceAttribute": _0_org.asam.ods.InstanceElement._d_renameInstanceAttribute, "setName": _0_org.asam.ods.InstanceElement._d_setName, "setValue": _0_org.asam.ods.InstanceElement._d_setValue, "upcastMeasurement": _0_org.asam.ods.InstanceElement._d_upcastMeasurement, "upcastSubMatrix": _0_org.asam.ods.InstanceElement._d_upcastSubMatrix, "getValueInUnit": _0_org.asam.ods.InstanceElement._d_getValueInUnit, "setValueSeq": _0_org.asam.ods.InstanceElement._d_setValueSeq, "setRights": _0_org.asam.ods.InstanceElement._d_setRights, "getRights": _0_org.asam.ods.InstanceElement._d_getRights, "getInitialRights": _0_org.asam.ods.InstanceElement._d_getInitialRights, "setInitialRights": _0_org.asam.ods.InstanceElement._d_setInitialRights, "shallowCopy": _0_org.asam.ods.InstanceElement._d_shallowCopy, "deepCopy": _0_org.asam.ods.InstanceElement._d_deepCopy, "getValueSeq": _0_org.asam.ods.InstanceElement._d_getValueSeq, "destroy": _0_org.asam.ods.InstanceElement._d_destroy, "compare": _0_org.asam.ods.InstanceElement._d_compare, "createRelatedInstances": _0_org.asam.ods.InstanceElement._d_createRelatedInstances}

InstanceElement._omni_skeleton = InstanceElement
_0_org__POA.asam.ods.InstanceElement = InstanceElement
omniORB.registerSkeleton(InstanceElement._NP_RepositoryId, InstanceElement)
del InstanceElement
__name__ = "org.asam.ods"

# interface InstanceElementIterator
_0_org.asam.ods._d_InstanceElementIterator = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/InstanceElementIterator:1.0", "InstanceElementIterator")
omniORB.typeMapping["IDL:org/asam/ods/InstanceElementIterator:1.0"] = _0_org.asam.ods._d_InstanceElementIterator
_0_org.asam.ods.InstanceElementIterator = omniORB.newEmptyClass()
class InstanceElementIterator :
    _NP_RepositoryId = _0_org.asam.ods._d_InstanceElementIterator[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.InstanceElementIterator = InstanceElementIterator
_0_org.asam.ods._tc_InstanceElementIterator = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_InstanceElementIterator)
omniORB.registerType(InstanceElementIterator._NP_RepositoryId, _0_org.asam.ods._d_InstanceElementIterator, _0_org.asam.ods._tc_InstanceElementIterator)

# InstanceElementIterator operations and attributes
InstanceElementIterator._d_destroy = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElementIterator._d_getCount = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElementIterator._d_nextN = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElementSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElementIterator._d_nextOne = ((), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElement:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
InstanceElementIterator._d_reset = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# InstanceElementIterator object reference
class _objref_InstanceElementIterator (CORBA.Object):
    _NP_RepositoryId = InstanceElementIterator._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_org.asam.ods.InstanceElementIterator._d_destroy, args)

    def getCount(self, *args):
        return self._obj.invoke("getCount", _0_org.asam.ods.InstanceElementIterator._d_getCount, args)

    def nextN(self, *args):
        return self._obj.invoke("nextN", _0_org.asam.ods.InstanceElementIterator._d_nextN, args)

    def nextOne(self, *args):
        return self._obj.invoke("nextOne", _0_org.asam.ods.InstanceElementIterator._d_nextOne, args)

    def reset(self, *args):
        return self._obj.invoke("reset", _0_org.asam.ods.InstanceElementIterator._d_reset, args)

omniORB.registerObjref(InstanceElementIterator._NP_RepositoryId, _objref_InstanceElementIterator)
_0_org.asam.ods._objref_InstanceElementIterator = _objref_InstanceElementIterator
del InstanceElementIterator, _objref_InstanceElementIterator

# InstanceElementIterator skeleton
__name__ = "org__POA.asam.ods"
class InstanceElementIterator (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.InstanceElementIterator._NP_RepositoryId


    _omni_op_d = {"destroy": _0_org.asam.ods.InstanceElementIterator._d_destroy, "getCount": _0_org.asam.ods.InstanceElementIterator._d_getCount, "nextN": _0_org.asam.ods.InstanceElementIterator._d_nextN, "nextOne": _0_org.asam.ods.InstanceElementIterator._d_nextOne, "reset": _0_org.asam.ods.InstanceElementIterator._d_reset}

InstanceElementIterator._omni_skeleton = InstanceElementIterator
_0_org__POA.asam.ods.InstanceElementIterator = InstanceElementIterator
omniORB.registerSkeleton(InstanceElementIterator._NP_RepositoryId, InstanceElementIterator)
del InstanceElementIterator
__name__ = "org.asam.ods"

# interface Measurement
_0_org.asam.ods._d_Measurement = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/Measurement:1.0", "Measurement")
omniORB.typeMapping["IDL:org/asam/ods/Measurement:1.0"] = _0_org.asam.ods._d_Measurement
_0_org.asam.ods.Measurement = omniORB.newEmptyClass()
class Measurement (_0_org.asam.ods.InstanceElement):
    _NP_RepositoryId = _0_org.asam.ods._d_Measurement[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.Measurement = Measurement
_0_org.asam.ods._tc_Measurement = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_Measurement)
omniORB.registerType(Measurement._NP_RepositoryId, _0_org.asam.ods._d_Measurement, _0_org.asam.ods._tc_Measurement)

# Measurement operations and attributes
Measurement._d_createSMatLink = ((), (omniORB.typeMapping["IDL:org/asam/ods/SMatLink:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Measurement._d_getSMatLinks = ((), (omniORB.typeMapping["IDL:org/asam/ods/SMatLinkSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Measurement._d_getValueMatrix = ((), (omniORB.typeMapping["IDL:org/asam/ods/ValueMatrix:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Measurement._d_removeSMatLink = ((omniORB.typeMapping["IDL:org/asam/ods/SMatLink:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Measurement._d_getValueMatrixInMode = ((omniORB.typeMapping["IDL:org/asam/ods/ValueMatrixMode:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ValueMatrix:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# Measurement object reference
class _objref_Measurement (_0_org.asam.ods._objref_InstanceElement):
    _NP_RepositoryId = Measurement._NP_RepositoryId

    def __init__(self, obj):
        _0_org.asam.ods._objref_InstanceElement.__init__(self, obj)

    def createSMatLink(self, *args):
        return self._obj.invoke("createSMatLink", _0_org.asam.ods.Measurement._d_createSMatLink, args)

    def getSMatLinks(self, *args):
        return self._obj.invoke("getSMatLinks", _0_org.asam.ods.Measurement._d_getSMatLinks, args)

    def getValueMatrix(self, *args):
        return self._obj.invoke("getValueMatrix", _0_org.asam.ods.Measurement._d_getValueMatrix, args)

    def removeSMatLink(self, *args):
        return self._obj.invoke("removeSMatLink", _0_org.asam.ods.Measurement._d_removeSMatLink, args)

    def getValueMatrixInMode(self, *args):
        return self._obj.invoke("getValueMatrixInMode", _0_org.asam.ods.Measurement._d_getValueMatrixInMode, args)

omniORB.registerObjref(Measurement._NP_RepositoryId, _objref_Measurement)
_0_org.asam.ods._objref_Measurement = _objref_Measurement
del Measurement, _objref_Measurement

# Measurement skeleton
__name__ = "org__POA.asam.ods"
class Measurement (_0_org__POA.asam.ods.InstanceElement):
    _NP_RepositoryId = _0_org.asam.ods.Measurement._NP_RepositoryId


    _omni_op_d = {"createSMatLink": _0_org.asam.ods.Measurement._d_createSMatLink, "getSMatLinks": _0_org.asam.ods.Measurement._d_getSMatLinks, "getValueMatrix": _0_org.asam.ods.Measurement._d_getValueMatrix, "removeSMatLink": _0_org.asam.ods.Measurement._d_removeSMatLink, "getValueMatrixInMode": _0_org.asam.ods.Measurement._d_getValueMatrixInMode}
    _omni_op_d.update(_0_org__POA.asam.ods.InstanceElement._omni_op_d)

Measurement._omni_skeleton = Measurement
_0_org__POA.asam.ods.Measurement = Measurement
omniORB.registerSkeleton(Measurement._NP_RepositoryId, Measurement)
del Measurement
__name__ = "org.asam.ods"

# interface NameIterator
_0_org.asam.ods._d_NameIterator = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/NameIterator:1.0", "NameIterator")
omniORB.typeMapping["IDL:org/asam/ods/NameIterator:1.0"] = _0_org.asam.ods._d_NameIterator
_0_org.asam.ods.NameIterator = omniORB.newEmptyClass()
class NameIterator :
    _NP_RepositoryId = _0_org.asam.ods._d_NameIterator[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.NameIterator = NameIterator
_0_org.asam.ods._tc_NameIterator = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_NameIterator)
omniORB.registerType(NameIterator._NP_RepositoryId, _0_org.asam.ods._d_NameIterator, _0_org.asam.ods._tc_NameIterator)

# NameIterator operations and attributes
NameIterator._d_destroy = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameIterator._d_getCount = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameIterator._d_nextN = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameIterator._d_nextOne = ((), (omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameIterator._d_reset = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# NameIterator object reference
class _objref_NameIterator (CORBA.Object):
    _NP_RepositoryId = NameIterator._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_org.asam.ods.NameIterator._d_destroy, args)

    def getCount(self, *args):
        return self._obj.invoke("getCount", _0_org.asam.ods.NameIterator._d_getCount, args)

    def nextN(self, *args):
        return self._obj.invoke("nextN", _0_org.asam.ods.NameIterator._d_nextN, args)

    def nextOne(self, *args):
        return self._obj.invoke("nextOne", _0_org.asam.ods.NameIterator._d_nextOne, args)

    def reset(self, *args):
        return self._obj.invoke("reset", _0_org.asam.ods.NameIterator._d_reset, args)

omniORB.registerObjref(NameIterator._NP_RepositoryId, _objref_NameIterator)
_0_org.asam.ods._objref_NameIterator = _objref_NameIterator
del NameIterator, _objref_NameIterator

# NameIterator skeleton
__name__ = "org__POA.asam.ods"
class NameIterator (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.NameIterator._NP_RepositoryId


    _omni_op_d = {"destroy": _0_org.asam.ods.NameIterator._d_destroy, "getCount": _0_org.asam.ods.NameIterator._d_getCount, "nextN": _0_org.asam.ods.NameIterator._d_nextN, "nextOne": _0_org.asam.ods.NameIterator._d_nextOne, "reset": _0_org.asam.ods.NameIterator._d_reset}

NameIterator._omni_skeleton = NameIterator
_0_org__POA.asam.ods.NameIterator = NameIterator
omniORB.registerSkeleton(NameIterator._NP_RepositoryId, NameIterator)
del NameIterator
__name__ = "org.asam.ods"

# interface NameValueIterator
_0_org.asam.ods._d_NameValueIterator = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/NameValueIterator:1.0", "NameValueIterator")
omniORB.typeMapping["IDL:org/asam/ods/NameValueIterator:1.0"] = _0_org.asam.ods._d_NameValueIterator
_0_org.asam.ods.NameValueIterator = omniORB.newEmptyClass()
class NameValueIterator :
    _NP_RepositoryId = _0_org.asam.ods._d_NameValueIterator[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.NameValueIterator = NameValueIterator
_0_org.asam.ods._tc_NameValueIterator = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_NameValueIterator)
omniORB.registerType(NameValueIterator._NP_RepositoryId, _0_org.asam.ods._d_NameValueIterator, _0_org.asam.ods._tc_NameValueIterator)

# NameValueIterator operations and attributes
NameValueIterator._d_destroy = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameValueIterator._d_getCount = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameValueIterator._d_nextN = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameValueSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameValueIterator._d_nextOne = ((), (omniORB.typeMapping["IDL:org/asam/ods/NameValue:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameValueIterator._d_reset = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# NameValueIterator object reference
class _objref_NameValueIterator (CORBA.Object):
    _NP_RepositoryId = NameValueIterator._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_org.asam.ods.NameValueIterator._d_destroy, args)

    def getCount(self, *args):
        return self._obj.invoke("getCount", _0_org.asam.ods.NameValueIterator._d_getCount, args)

    def nextN(self, *args):
        return self._obj.invoke("nextN", _0_org.asam.ods.NameValueIterator._d_nextN, args)

    def nextOne(self, *args):
        return self._obj.invoke("nextOne", _0_org.asam.ods.NameValueIterator._d_nextOne, args)

    def reset(self, *args):
        return self._obj.invoke("reset", _0_org.asam.ods.NameValueIterator._d_reset, args)

omniORB.registerObjref(NameValueIterator._NP_RepositoryId, _objref_NameValueIterator)
_0_org.asam.ods._objref_NameValueIterator = _objref_NameValueIterator
del NameValueIterator, _objref_NameValueIterator

# NameValueIterator skeleton
__name__ = "org__POA.asam.ods"
class NameValueIterator (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.NameValueIterator._NP_RepositoryId


    _omni_op_d = {"destroy": _0_org.asam.ods.NameValueIterator._d_destroy, "getCount": _0_org.asam.ods.NameValueIterator._d_getCount, "nextN": _0_org.asam.ods.NameValueIterator._d_nextN, "nextOne": _0_org.asam.ods.NameValueIterator._d_nextOne, "reset": _0_org.asam.ods.NameValueIterator._d_reset}

NameValueIterator._omni_skeleton = NameValueIterator
_0_org__POA.asam.ods.NameValueIterator = NameValueIterator
omniORB.registerSkeleton(NameValueIterator._NP_RepositoryId, NameValueIterator)
del NameValueIterator
__name__ = "org.asam.ods"

# interface NameValueUnitIterator
_0_org.asam.ods._d_NameValueUnitIterator = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/NameValueUnitIterator:1.0", "NameValueUnitIterator")
omniORB.typeMapping["IDL:org/asam/ods/NameValueUnitIterator:1.0"] = _0_org.asam.ods._d_NameValueUnitIterator
_0_org.asam.ods.NameValueUnitIterator = omniORB.newEmptyClass()
class NameValueUnitIterator :
    _NP_RepositoryId = _0_org.asam.ods._d_NameValueUnitIterator[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.NameValueUnitIterator = NameValueUnitIterator
_0_org.asam.ods._tc_NameValueUnitIterator = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_NameValueUnitIterator)
omniORB.registerType(NameValueUnitIterator._NP_RepositoryId, _0_org.asam.ods._d_NameValueUnitIterator, _0_org.asam.ods._tc_NameValueUnitIterator)

# NameValueUnitIterator operations and attributes
NameValueUnitIterator._d_destroy = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameValueUnitIterator._d_getCount = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameValueUnitIterator._d_nextN = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameValueUnitSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameValueUnitIterator._d_nextOne = ((), (omniORB.typeMapping["IDL:org/asam/ods/NameValueUnit:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameValueUnitIterator._d_reset = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# NameValueUnitIterator object reference
class _objref_NameValueUnitIterator (CORBA.Object):
    _NP_RepositoryId = NameValueUnitIterator._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_org.asam.ods.NameValueUnitIterator._d_destroy, args)

    def getCount(self, *args):
        return self._obj.invoke("getCount", _0_org.asam.ods.NameValueUnitIterator._d_getCount, args)

    def nextN(self, *args):
        return self._obj.invoke("nextN", _0_org.asam.ods.NameValueUnitIterator._d_nextN, args)

    def nextOne(self, *args):
        return self._obj.invoke("nextOne", _0_org.asam.ods.NameValueUnitIterator._d_nextOne, args)

    def reset(self, *args):
        return self._obj.invoke("reset", _0_org.asam.ods.NameValueUnitIterator._d_reset, args)

omniORB.registerObjref(NameValueUnitIterator._NP_RepositoryId, _objref_NameValueUnitIterator)
_0_org.asam.ods._objref_NameValueUnitIterator = _objref_NameValueUnitIterator
del NameValueUnitIterator, _objref_NameValueUnitIterator

# NameValueUnitIterator skeleton
__name__ = "org__POA.asam.ods"
class NameValueUnitIterator (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.NameValueUnitIterator._NP_RepositoryId


    _omni_op_d = {"destroy": _0_org.asam.ods.NameValueUnitIterator._d_destroy, "getCount": _0_org.asam.ods.NameValueUnitIterator._d_getCount, "nextN": _0_org.asam.ods.NameValueUnitIterator._d_nextN, "nextOne": _0_org.asam.ods.NameValueUnitIterator._d_nextOne, "reset": _0_org.asam.ods.NameValueUnitIterator._d_reset}

NameValueUnitIterator._omni_skeleton = NameValueUnitIterator
_0_org__POA.asam.ods.NameValueUnitIterator = NameValueUnitIterator
omniORB.registerSkeleton(NameValueUnitIterator._NP_RepositoryId, NameValueUnitIterator)
del NameValueUnitIterator
__name__ = "org.asam.ods"

# interface SMatLink
_0_org.asam.ods._d_SMatLink = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/SMatLink:1.0", "SMatLink")
omniORB.typeMapping["IDL:org/asam/ods/SMatLink:1.0"] = _0_org.asam.ods._d_SMatLink
_0_org.asam.ods.SMatLink = omniORB.newEmptyClass()
class SMatLink :
    _NP_RepositoryId = _0_org.asam.ods._d_SMatLink[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.SMatLink = SMatLink
_0_org.asam.ods._tc_SMatLink = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_SMatLink)
omniORB.registerType(SMatLink._NP_RepositoryId, _0_org.asam.ods._d_SMatLink, _0_org.asam.ods._tc_SMatLink)

# SMatLink operations and attributes
SMatLink._d_getLinkType = ((), (omniORB.typeMapping["IDL:org/asam/ods/BuildUpFunction:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
SMatLink._d_getOrdinalNumber = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
SMatLink._d_getSMat1 = ((), (omniORB.typeMapping["IDL:org/asam/ods/SubMatrix:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
SMatLink._d_getSMat1Columns = ((), (omniORB.typeMapping["IDL:org/asam/ods/ColumnSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
SMatLink._d_getSMat2 = ((), (omniORB.typeMapping["IDL:org/asam/ods/SubMatrix:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
SMatLink._d_getSMat2Columns = ((), (omniORB.typeMapping["IDL:org/asam/ods/ColumnSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
SMatLink._d_setLinkType = ((omniORB.typeMapping["IDL:org/asam/ods/BuildUpFunction:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
SMatLink._d_setOrdinalNumber = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
SMatLink._d_setSMat1 = ((omniORB.typeMapping["IDL:org/asam/ods/SubMatrix:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
SMatLink._d_setSMat1Columns = ((omniORB.typeMapping["IDL:org/asam/ods/ColumnSequence:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
SMatLink._d_setSMat2 = ((omniORB.typeMapping["IDL:org/asam/ods/SubMatrix:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
SMatLink._d_setSMat2Columns = ((omniORB.typeMapping["IDL:org/asam/ods/ColumnSequence:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# SMatLink object reference
class _objref_SMatLink (CORBA.Object):
    _NP_RepositoryId = SMatLink._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getLinkType(self, *args):
        return self._obj.invoke("getLinkType", _0_org.asam.ods.SMatLink._d_getLinkType, args)

    def getOrdinalNumber(self, *args):
        return self._obj.invoke("getOrdinalNumber", _0_org.asam.ods.SMatLink._d_getOrdinalNumber, args)

    def getSMat1(self, *args):
        return self._obj.invoke("getSMat1", _0_org.asam.ods.SMatLink._d_getSMat1, args)

    def getSMat1Columns(self, *args):
        return self._obj.invoke("getSMat1Columns", _0_org.asam.ods.SMatLink._d_getSMat1Columns, args)

    def getSMat2(self, *args):
        return self._obj.invoke("getSMat2", _0_org.asam.ods.SMatLink._d_getSMat2, args)

    def getSMat2Columns(self, *args):
        return self._obj.invoke("getSMat2Columns", _0_org.asam.ods.SMatLink._d_getSMat2Columns, args)

    def setLinkType(self, *args):
        return self._obj.invoke("setLinkType", _0_org.asam.ods.SMatLink._d_setLinkType, args)

    def setOrdinalNumber(self, *args):
        return self._obj.invoke("setOrdinalNumber", _0_org.asam.ods.SMatLink._d_setOrdinalNumber, args)

    def setSMat1(self, *args):
        return self._obj.invoke("setSMat1", _0_org.asam.ods.SMatLink._d_setSMat1, args)

    def setSMat1Columns(self, *args):
        return self._obj.invoke("setSMat1Columns", _0_org.asam.ods.SMatLink._d_setSMat1Columns, args)

    def setSMat2(self, *args):
        return self._obj.invoke("setSMat2", _0_org.asam.ods.SMatLink._d_setSMat2, args)

    def setSMat2Columns(self, *args):
        return self._obj.invoke("setSMat2Columns", _0_org.asam.ods.SMatLink._d_setSMat2Columns, args)

omniORB.registerObjref(SMatLink._NP_RepositoryId, _objref_SMatLink)
_0_org.asam.ods._objref_SMatLink = _objref_SMatLink
del SMatLink, _objref_SMatLink

# SMatLink skeleton
__name__ = "org__POA.asam.ods"
class SMatLink (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.SMatLink._NP_RepositoryId


    _omni_op_d = {"getLinkType": _0_org.asam.ods.SMatLink._d_getLinkType, "getOrdinalNumber": _0_org.asam.ods.SMatLink._d_getOrdinalNumber, "getSMat1": _0_org.asam.ods.SMatLink._d_getSMat1, "getSMat1Columns": _0_org.asam.ods.SMatLink._d_getSMat1Columns, "getSMat2": _0_org.asam.ods.SMatLink._d_getSMat2, "getSMat2Columns": _0_org.asam.ods.SMatLink._d_getSMat2Columns, "setLinkType": _0_org.asam.ods.SMatLink._d_setLinkType, "setOrdinalNumber": _0_org.asam.ods.SMatLink._d_setOrdinalNumber, "setSMat1": _0_org.asam.ods.SMatLink._d_setSMat1, "setSMat1Columns": _0_org.asam.ods.SMatLink._d_setSMat1Columns, "setSMat2": _0_org.asam.ods.SMatLink._d_setSMat2, "setSMat2Columns": _0_org.asam.ods.SMatLink._d_setSMat2Columns}

SMatLink._omni_skeleton = SMatLink
_0_org__POA.asam.ods.SMatLink = SMatLink
omniORB.registerSkeleton(SMatLink._NP_RepositoryId, SMatLink)
del SMatLink
__name__ = "org.asam.ods"

# interface SubMatrix
_0_org.asam.ods._d_SubMatrix = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/SubMatrix:1.0", "SubMatrix")
omniORB.typeMapping["IDL:org/asam/ods/SubMatrix:1.0"] = _0_org.asam.ods._d_SubMatrix
_0_org.asam.ods.SubMatrix = omniORB.newEmptyClass()
class SubMatrix (_0_org.asam.ods.InstanceElement):
    _NP_RepositoryId = _0_org.asam.ods._d_SubMatrix[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.SubMatrix = SubMatrix
_0_org.asam.ods._tc_SubMatrix = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_SubMatrix)
omniORB.registerType(SubMatrix._NP_RepositoryId, _0_org.asam.ods._d_SubMatrix, _0_org.asam.ods._tc_SubMatrix)

# SubMatrix operations and attributes
SubMatrix._d_getColumns = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ColumnSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
SubMatrix._d_getValueMatrix = ((), (omniORB.typeMapping["IDL:org/asam/ods/ValueMatrix:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
SubMatrix._d_listColumns = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
SubMatrix._d_getValueMatrixInMode = ((omniORB.typeMapping["IDL:org/asam/ods/ValueMatrixMode:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ValueMatrix:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# SubMatrix object reference
class _objref_SubMatrix (_0_org.asam.ods._objref_InstanceElement):
    _NP_RepositoryId = SubMatrix._NP_RepositoryId

    def __init__(self, obj):
        _0_org.asam.ods._objref_InstanceElement.__init__(self, obj)

    def getColumns(self, *args):
        return self._obj.invoke("getColumns", _0_org.asam.ods.SubMatrix._d_getColumns, args)

    def getValueMatrix(self, *args):
        return self._obj.invoke("getValueMatrix", _0_org.asam.ods.SubMatrix._d_getValueMatrix, args)

    def listColumns(self, *args):
        return self._obj.invoke("listColumns", _0_org.asam.ods.SubMatrix._d_listColumns, args)

    def getValueMatrixInMode(self, *args):
        return self._obj.invoke("getValueMatrixInMode", _0_org.asam.ods.SubMatrix._d_getValueMatrixInMode, args)

omniORB.registerObjref(SubMatrix._NP_RepositoryId, _objref_SubMatrix)
_0_org.asam.ods._objref_SubMatrix = _objref_SubMatrix
del SubMatrix, _objref_SubMatrix

# SubMatrix skeleton
__name__ = "org__POA.asam.ods"
class SubMatrix (_0_org__POA.asam.ods.InstanceElement):
    _NP_RepositoryId = _0_org.asam.ods.SubMatrix._NP_RepositoryId


    _omni_op_d = {"getColumns": _0_org.asam.ods.SubMatrix._d_getColumns, "getValueMatrix": _0_org.asam.ods.SubMatrix._d_getValueMatrix, "listColumns": _0_org.asam.ods.SubMatrix._d_listColumns, "getValueMatrixInMode": _0_org.asam.ods.SubMatrix._d_getValueMatrixInMode}
    _omni_op_d.update(_0_org__POA.asam.ods.InstanceElement._omni_op_d)

SubMatrix._omni_skeleton = SubMatrix
_0_org__POA.asam.ods.SubMatrix = SubMatrix
omniORB.registerSkeleton(SubMatrix._NP_RepositoryId, SubMatrix)
del SubMatrix
__name__ = "org.asam.ods"

# interface ValueMatrix
_0_org.asam.ods._d_ValueMatrix = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/ValueMatrix:1.0", "ValueMatrix")
omniORB.typeMapping["IDL:org/asam/ods/ValueMatrix:1.0"] = _0_org.asam.ods._d_ValueMatrix
_0_org.asam.ods.ValueMatrix = omniORB.newEmptyClass()
class ValueMatrix :
    _NP_RepositoryId = _0_org.asam.ods._d_ValueMatrix[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.ValueMatrix = ValueMatrix
_0_org.asam.ods._tc_ValueMatrix = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ValueMatrix)
omniORB.registerType(ValueMatrix._NP_RepositoryId, _0_org.asam.ods._d_ValueMatrix, _0_org.asam.ods._tc_ValueMatrix)

# ValueMatrix operations and attributes
ValueMatrix._d_getColumns = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ColumnSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_getColumnCount = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_getIndependentColumns = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ColumnSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_getRowCount = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_getValueMeaPoint = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameValueUnitIterator:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_getValueVector = ((omniORB.typeMapping["IDL:org/asam/ods/Column:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/TS_ValueSeq:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_listColumns = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_listIndependentColumns = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_removeValueMeaPoint = ((omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_removeValueVector = ((omniORB.typeMapping["IDL:org/asam/ods/Column:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_setValueMeaPoint = ((omniORB.typeMapping["IDL:org/asam/ods/SetType:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/NameValueSequence:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_setValueVector = ((omniORB.typeMapping["IDL:org/asam/ods/Column:1.0"], omniORB.typeMapping["IDL:org/asam/ods/SetType:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/TS_ValueSeq:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_setValue = ((omniORB.typeMapping["IDL:org/asam/ods/SetType:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/NameValueSeqUnitSequence:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_addColumn = ((omniORB.typeMapping["IDL:org/asam/ods/NameUnit:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/Column:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_listScalingColumns = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_getScalingColumns = ((omniORB.typeMapping["IDL:org/asam/ods/Pattern:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ColumnSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_listColumnsScaledBy = ((omniORB.typeMapping["IDL:org/asam/ods/Column:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_getColumnsScaledBy = ((omniORB.typeMapping["IDL:org/asam/ods/Column:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ColumnSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_addColumnScaledBy = ((omniORB.typeMapping["IDL:org/asam/ods/NameUnit:1.0"], omniORB.typeMapping["IDL:org/asam/ods/Column:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/Column:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_destroy = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_getValue = ((omniORB.typeMapping["IDL:org/asam/ods/ColumnSequence:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/NameValueSeqUnitSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ValueMatrix._d_getMode = ((), (omniORB.typeMapping["IDL:org/asam/ods/ValueMatrixMode:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# ValueMatrix object reference
class _objref_ValueMatrix (CORBA.Object):
    _NP_RepositoryId = ValueMatrix._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getColumns(self, *args):
        return self._obj.invoke("getColumns", _0_org.asam.ods.ValueMatrix._d_getColumns, args)

    def getColumnCount(self, *args):
        return self._obj.invoke("getColumnCount", _0_org.asam.ods.ValueMatrix._d_getColumnCount, args)

    def getIndependentColumns(self, *args):
        return self._obj.invoke("getIndependentColumns", _0_org.asam.ods.ValueMatrix._d_getIndependentColumns, args)

    def getRowCount(self, *args):
        return self._obj.invoke("getRowCount", _0_org.asam.ods.ValueMatrix._d_getRowCount, args)

    def getValueMeaPoint(self, *args):
        return self._obj.invoke("getValueMeaPoint", _0_org.asam.ods.ValueMatrix._d_getValueMeaPoint, args)

    def getValueVector(self, *args):
        return self._obj.invoke("getValueVector", _0_org.asam.ods.ValueMatrix._d_getValueVector, args)

    def listColumns(self, *args):
        return self._obj.invoke("listColumns", _0_org.asam.ods.ValueMatrix._d_listColumns, args)

    def listIndependentColumns(self, *args):
        return self._obj.invoke("listIndependentColumns", _0_org.asam.ods.ValueMatrix._d_listIndependentColumns, args)

    def removeValueMeaPoint(self, *args):
        return self._obj.invoke("removeValueMeaPoint", _0_org.asam.ods.ValueMatrix._d_removeValueMeaPoint, args)

    def removeValueVector(self, *args):
        return self._obj.invoke("removeValueVector", _0_org.asam.ods.ValueMatrix._d_removeValueVector, args)

    def setValueMeaPoint(self, *args):
        return self._obj.invoke("setValueMeaPoint", _0_org.asam.ods.ValueMatrix._d_setValueMeaPoint, args)

    def setValueVector(self, *args):
        return self._obj.invoke("setValueVector", _0_org.asam.ods.ValueMatrix._d_setValueVector, args)

    def setValue(self, *args):
        return self._obj.invoke("setValue", _0_org.asam.ods.ValueMatrix._d_setValue, args)

    def addColumn(self, *args):
        return self._obj.invoke("addColumn", _0_org.asam.ods.ValueMatrix._d_addColumn, args)

    def listScalingColumns(self, *args):
        return self._obj.invoke("listScalingColumns", _0_org.asam.ods.ValueMatrix._d_listScalingColumns, args)

    def getScalingColumns(self, *args):
        return self._obj.invoke("getScalingColumns", _0_org.asam.ods.ValueMatrix._d_getScalingColumns, args)

    def listColumnsScaledBy(self, *args):
        return self._obj.invoke("listColumnsScaledBy", _0_org.asam.ods.ValueMatrix._d_listColumnsScaledBy, args)

    def getColumnsScaledBy(self, *args):
        return self._obj.invoke("getColumnsScaledBy", _0_org.asam.ods.ValueMatrix._d_getColumnsScaledBy, args)

    def addColumnScaledBy(self, *args):
        return self._obj.invoke("addColumnScaledBy", _0_org.asam.ods.ValueMatrix._d_addColumnScaledBy, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_org.asam.ods.ValueMatrix._d_destroy, args)

    def getValue(self, *args):
        return self._obj.invoke("getValue", _0_org.asam.ods.ValueMatrix._d_getValue, args)

    def getMode(self, *args):
        return self._obj.invoke("getMode", _0_org.asam.ods.ValueMatrix._d_getMode, args)

omniORB.registerObjref(ValueMatrix._NP_RepositoryId, _objref_ValueMatrix)
_0_org.asam.ods._objref_ValueMatrix = _objref_ValueMatrix
del ValueMatrix, _objref_ValueMatrix

# ValueMatrix skeleton
__name__ = "org__POA.asam.ods"
class ValueMatrix (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.ValueMatrix._NP_RepositoryId


    _omni_op_d = {"getColumns": _0_org.asam.ods.ValueMatrix._d_getColumns, "getColumnCount": _0_org.asam.ods.ValueMatrix._d_getColumnCount, "getIndependentColumns": _0_org.asam.ods.ValueMatrix._d_getIndependentColumns, "getRowCount": _0_org.asam.ods.ValueMatrix._d_getRowCount, "getValueMeaPoint": _0_org.asam.ods.ValueMatrix._d_getValueMeaPoint, "getValueVector": _0_org.asam.ods.ValueMatrix._d_getValueVector, "listColumns": _0_org.asam.ods.ValueMatrix._d_listColumns, "listIndependentColumns": _0_org.asam.ods.ValueMatrix._d_listIndependentColumns, "removeValueMeaPoint": _0_org.asam.ods.ValueMatrix._d_removeValueMeaPoint, "removeValueVector": _0_org.asam.ods.ValueMatrix._d_removeValueVector, "setValueMeaPoint": _0_org.asam.ods.ValueMatrix._d_setValueMeaPoint, "setValueVector": _0_org.asam.ods.ValueMatrix._d_setValueVector, "setValue": _0_org.asam.ods.ValueMatrix._d_setValue, "addColumn": _0_org.asam.ods.ValueMatrix._d_addColumn, "listScalingColumns": _0_org.asam.ods.ValueMatrix._d_listScalingColumns, "getScalingColumns": _0_org.asam.ods.ValueMatrix._d_getScalingColumns, "listColumnsScaledBy": _0_org.asam.ods.ValueMatrix._d_listColumnsScaledBy, "getColumnsScaledBy": _0_org.asam.ods.ValueMatrix._d_getColumnsScaledBy, "addColumnScaledBy": _0_org.asam.ods.ValueMatrix._d_addColumnScaledBy, "destroy": _0_org.asam.ods.ValueMatrix._d_destroy, "getValue": _0_org.asam.ods.ValueMatrix._d_getValue, "getMode": _0_org.asam.ods.ValueMatrix._d_getMode}

ValueMatrix._omni_skeleton = ValueMatrix
_0_org__POA.asam.ods.ValueMatrix = ValueMatrix
omniORB.registerSkeleton(ValueMatrix._NP_RepositoryId, ValueMatrix)
del ValueMatrix
__name__ = "org.asam.ods"

# interface NameValueUnitIdIterator
_0_org.asam.ods._d_NameValueUnitIdIterator = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/NameValueUnitIdIterator:1.0", "NameValueUnitIdIterator")
omniORB.typeMapping["IDL:org/asam/ods/NameValueUnitIdIterator:1.0"] = _0_org.asam.ods._d_NameValueUnitIdIterator
_0_org.asam.ods.NameValueUnitIdIterator = omniORB.newEmptyClass()
class NameValueUnitIdIterator :
    _NP_RepositoryId = _0_org.asam.ods._d_NameValueUnitIdIterator[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.NameValueUnitIdIterator = NameValueUnitIdIterator
_0_org.asam.ods._tc_NameValueUnitIdIterator = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_NameValueUnitIdIterator)
omniORB.registerType(NameValueUnitIdIterator._NP_RepositoryId, _0_org.asam.ods._d_NameValueUnitIdIterator, _0_org.asam.ods._tc_NameValueUnitIdIterator)

# NameValueUnitIdIterator operations and attributes
NameValueUnitIdIterator._d_destroy = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameValueUnitIdIterator._d_getCount = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameValueUnitIdIterator._d_nextN = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameValueSeqUnitId:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameValueUnitIdIterator._d_nextOne = ((), (omniORB.typeMapping["IDL:org/asam/ods/NameValueUnitId:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameValueUnitIdIterator._d_reset = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# NameValueUnitIdIterator object reference
class _objref_NameValueUnitIdIterator (CORBA.Object):
    _NP_RepositoryId = NameValueUnitIdIterator._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_org.asam.ods.NameValueUnitIdIterator._d_destroy, args)

    def getCount(self, *args):
        return self._obj.invoke("getCount", _0_org.asam.ods.NameValueUnitIdIterator._d_getCount, args)

    def nextN(self, *args):
        return self._obj.invoke("nextN", _0_org.asam.ods.NameValueUnitIdIterator._d_nextN, args)

    def nextOne(self, *args):
        return self._obj.invoke("nextOne", _0_org.asam.ods.NameValueUnitIdIterator._d_nextOne, args)

    def reset(self, *args):
        return self._obj.invoke("reset", _0_org.asam.ods.NameValueUnitIdIterator._d_reset, args)

omniORB.registerObjref(NameValueUnitIdIterator._NP_RepositoryId, _objref_NameValueUnitIdIterator)
_0_org.asam.ods._objref_NameValueUnitIdIterator = _objref_NameValueUnitIdIterator
del NameValueUnitIdIterator, _objref_NameValueUnitIdIterator

# NameValueUnitIdIterator skeleton
__name__ = "org__POA.asam.ods"
class NameValueUnitIdIterator (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.NameValueUnitIdIterator._NP_RepositoryId


    _omni_op_d = {"destroy": _0_org.asam.ods.NameValueUnitIdIterator._d_destroy, "getCount": _0_org.asam.ods.NameValueUnitIdIterator._d_getCount, "nextN": _0_org.asam.ods.NameValueUnitIdIterator._d_nextN, "nextOne": _0_org.asam.ods.NameValueUnitIdIterator._d_nextOne, "reset": _0_org.asam.ods.NameValueUnitIdIterator._d_reset}

NameValueUnitIdIterator._omni_skeleton = NameValueUnitIdIterator
_0_org__POA.asam.ods.NameValueUnitIdIterator = NameValueUnitIdIterator
omniORB.registerSkeleton(NameValueUnitIdIterator._NP_RepositoryId, NameValueUnitIdIterator)
del NameValueUnitIdIterator
__name__ = "org.asam.ods"

# interface ApplElemAccess
_0_org.asam.ods._d_ApplElemAccess = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/ApplElemAccess:1.0", "ApplElemAccess")
omniORB.typeMapping["IDL:org/asam/ods/ApplElemAccess:1.0"] = _0_org.asam.ods._d_ApplElemAccess
_0_org.asam.ods.ApplElemAccess = omniORB.newEmptyClass()
class ApplElemAccess :
    _NP_RepositoryId = _0_org.asam.ods._d_ApplElemAccess[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.ApplElemAccess = ApplElemAccess
_0_org.asam.ods._tc_ApplElemAccess = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ApplElemAccess)
omniORB.registerType(ApplElemAccess._NP_RepositoryId, _0_org.asam.ods._d_ApplElemAccess, _0_org.asam.ods._tc_ApplElemAccess)

# ApplElemAccess operations and attributes
ApplElemAccess._d_getInstances = ((omniORB.typeMapping["IDL:org/asam/ods/QueryStructure:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/ElemResultSetSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_getRelInst = ((omniORB.typeMapping["IDL:org/asam/ods/ElemId:1.0"], omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/S_LONGLONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_setRelInst = ((omniORB.typeMapping["IDL:org/asam/ods/ElemId:1.0"], omniORB.typeMapping["IDL:org/asam/ods/Name:1.0"], omniORB.typeMapping["IDL:org/asam/ods/S_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/SetType:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_insertInstances = ((omniORB.typeMapping["IDL:org/asam/ods/AIDNameValueSeqUnitIdSequence:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ElemIdSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_updateInstances = ((omniORB.typeMapping["IDL:org/asam/ods/AIDNameValueSeqUnitIdSequence:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_deleteInstances = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/S_LONGLONG:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_getValueMatrix = ((omniORB.typeMapping["IDL:org/asam/ods/ElemId:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ValueMatrix:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_setAttributeRights = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/RightsSet:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_setElementRights = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/RightsSet:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_setInstanceRights = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/S_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/RightsSet:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_getAttributeRights = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/ACLSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_getElementRights = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ACLSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_getInstanceRights = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/ACLSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_setElementInitialRights = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/RightsSet:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_setInstanceInitialRights = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/S_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/RightsSet:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_setInitialRightReference = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], omniORB.typeMapping["IDL:org/asam/ods/RightsSet:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_getInitialRightReference = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_getElementInitialRights = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/InitialRightSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_getInstanceInitialRights = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONGLONG:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/InitialRightSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_getInstancesExt = ((omniORB.typeMapping["IDL:org/asam/ods/QueryStructureExt:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/ResultSetExtSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ApplElemAccess._d_getValueMatrixInMode = ((omniORB.typeMapping["IDL:org/asam/ods/ElemId:1.0"], omniORB.typeMapping["IDL:org/asam/ods/ValueMatrixMode:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/ValueMatrix:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# ApplElemAccess object reference
class _objref_ApplElemAccess (CORBA.Object):
    _NP_RepositoryId = ApplElemAccess._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getInstances(self, *args):
        return self._obj.invoke("getInstances", _0_org.asam.ods.ApplElemAccess._d_getInstances, args)

    def getRelInst(self, *args):
        return self._obj.invoke("getRelInst", _0_org.asam.ods.ApplElemAccess._d_getRelInst, args)

    def setRelInst(self, *args):
        return self._obj.invoke("setRelInst", _0_org.asam.ods.ApplElemAccess._d_setRelInst, args)

    def insertInstances(self, *args):
        return self._obj.invoke("insertInstances", _0_org.asam.ods.ApplElemAccess._d_insertInstances, args)

    def updateInstances(self, *args):
        return self._obj.invoke("updateInstances", _0_org.asam.ods.ApplElemAccess._d_updateInstances, args)

    def deleteInstances(self, *args):
        return self._obj.invoke("deleteInstances", _0_org.asam.ods.ApplElemAccess._d_deleteInstances, args)

    def getValueMatrix(self, *args):
        return self._obj.invoke("getValueMatrix", _0_org.asam.ods.ApplElemAccess._d_getValueMatrix, args)

    def setAttributeRights(self, *args):
        return self._obj.invoke("setAttributeRights", _0_org.asam.ods.ApplElemAccess._d_setAttributeRights, args)

    def setElementRights(self, *args):
        return self._obj.invoke("setElementRights", _0_org.asam.ods.ApplElemAccess._d_setElementRights, args)

    def setInstanceRights(self, *args):
        return self._obj.invoke("setInstanceRights", _0_org.asam.ods.ApplElemAccess._d_setInstanceRights, args)

    def getAttributeRights(self, *args):
        return self._obj.invoke("getAttributeRights", _0_org.asam.ods.ApplElemAccess._d_getAttributeRights, args)

    def getElementRights(self, *args):
        return self._obj.invoke("getElementRights", _0_org.asam.ods.ApplElemAccess._d_getElementRights, args)

    def getInstanceRights(self, *args):
        return self._obj.invoke("getInstanceRights", _0_org.asam.ods.ApplElemAccess._d_getInstanceRights, args)

    def setElementInitialRights(self, *args):
        return self._obj.invoke("setElementInitialRights", _0_org.asam.ods.ApplElemAccess._d_setElementInitialRights, args)

    def setInstanceInitialRights(self, *args):
        return self._obj.invoke("setInstanceInitialRights", _0_org.asam.ods.ApplElemAccess._d_setInstanceInitialRights, args)

    def setInitialRightReference(self, *args):
        return self._obj.invoke("setInitialRightReference", _0_org.asam.ods.ApplElemAccess._d_setInitialRightReference, args)

    def getInitialRightReference(self, *args):
        return self._obj.invoke("getInitialRightReference", _0_org.asam.ods.ApplElemAccess._d_getInitialRightReference, args)

    def getElementInitialRights(self, *args):
        return self._obj.invoke("getElementInitialRights", _0_org.asam.ods.ApplElemAccess._d_getElementInitialRights, args)

    def getInstanceInitialRights(self, *args):
        return self._obj.invoke("getInstanceInitialRights", _0_org.asam.ods.ApplElemAccess._d_getInstanceInitialRights, args)

    def getInstancesExt(self, *args):
        return self._obj.invoke("getInstancesExt", _0_org.asam.ods.ApplElemAccess._d_getInstancesExt, args)

    def getValueMatrixInMode(self, *args):
        return self._obj.invoke("getValueMatrixInMode", _0_org.asam.ods.ApplElemAccess._d_getValueMatrixInMode, args)

omniORB.registerObjref(ApplElemAccess._NP_RepositoryId, _objref_ApplElemAccess)
_0_org.asam.ods._objref_ApplElemAccess = _objref_ApplElemAccess
del ApplElemAccess, _objref_ApplElemAccess

# ApplElemAccess skeleton
__name__ = "org__POA.asam.ods"
class ApplElemAccess (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.ApplElemAccess._NP_RepositoryId


    _omni_op_d = {"getInstances": _0_org.asam.ods.ApplElemAccess._d_getInstances, "getRelInst": _0_org.asam.ods.ApplElemAccess._d_getRelInst, "setRelInst": _0_org.asam.ods.ApplElemAccess._d_setRelInst, "insertInstances": _0_org.asam.ods.ApplElemAccess._d_insertInstances, "updateInstances": _0_org.asam.ods.ApplElemAccess._d_updateInstances, "deleteInstances": _0_org.asam.ods.ApplElemAccess._d_deleteInstances, "getValueMatrix": _0_org.asam.ods.ApplElemAccess._d_getValueMatrix, "setAttributeRights": _0_org.asam.ods.ApplElemAccess._d_setAttributeRights, "setElementRights": _0_org.asam.ods.ApplElemAccess._d_setElementRights, "setInstanceRights": _0_org.asam.ods.ApplElemAccess._d_setInstanceRights, "getAttributeRights": _0_org.asam.ods.ApplElemAccess._d_getAttributeRights, "getElementRights": _0_org.asam.ods.ApplElemAccess._d_getElementRights, "getInstanceRights": _0_org.asam.ods.ApplElemAccess._d_getInstanceRights, "setElementInitialRights": _0_org.asam.ods.ApplElemAccess._d_setElementInitialRights, "setInstanceInitialRights": _0_org.asam.ods.ApplElemAccess._d_setInstanceInitialRights, "setInitialRightReference": _0_org.asam.ods.ApplElemAccess._d_setInitialRightReference, "getInitialRightReference": _0_org.asam.ods.ApplElemAccess._d_getInitialRightReference, "getElementInitialRights": _0_org.asam.ods.ApplElemAccess._d_getElementInitialRights, "getInstanceInitialRights": _0_org.asam.ods.ApplElemAccess._d_getInstanceInitialRights, "getInstancesExt": _0_org.asam.ods.ApplElemAccess._d_getInstancesExt, "getValueMatrixInMode": _0_org.asam.ods.ApplElemAccess._d_getValueMatrixInMode}

ApplElemAccess._omni_skeleton = ApplElemAccess
_0_org__POA.asam.ods.ApplElemAccess = ApplElemAccess
omniORB.registerSkeleton(ApplElemAccess._NP_RepositoryId, ApplElemAccess)
del ApplElemAccess
__name__ = "org.asam.ods"

# interface QueryEvaluator
_0_org.asam.ods._d_QueryEvaluator = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/QueryEvaluator:1.0", "QueryEvaluator")
omniORB.typeMapping["IDL:org/asam/ods/QueryEvaluator:1.0"] = _0_org.asam.ods._d_QueryEvaluator
_0_org.asam.ods.QueryEvaluator = omniORB.newEmptyClass()
class QueryEvaluator :
    _NP_RepositoryId = _0_org.asam.ods._d_QueryEvaluator[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.QueryEvaluator = QueryEvaluator
_0_org.asam.ods._tc_QueryEvaluator = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_QueryEvaluator)
omniORB.registerType(QueryEvaluator._NP_RepositoryId, _0_org.asam.ods._d_QueryEvaluator, _0_org.asam.ods._tc_QueryEvaluator)

# QueryEvaluator operations and attributes
QueryEvaluator._d_getInstances = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], omniORB.typeMapping["IDL:org/asam/ods/NameValueSequence:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElementIterator:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
QueryEvaluator._d_getTableRows = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], omniORB.typeMapping["IDL:org/asam/ods/NameValueSequence:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/NameValueUnitSequenceIterator:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
QueryEvaluator._d_getTable = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], omniORB.typeMapping["IDL:org/asam/ods/NameValueSequence:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/NameValueSeqUnitSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
QueryEvaluator._d_createQuery = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], omniORB.typeMapping["IDL:org/asam/ods/NameValueSequence:1.0"]), (omniORB.typeMapping["IDL:org/asam/ods/Query:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# QueryEvaluator object reference
class _objref_QueryEvaluator (CORBA.Object):
    _NP_RepositoryId = QueryEvaluator._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getInstances(self, *args):
        return self._obj.invoke("getInstances", _0_org.asam.ods.QueryEvaluator._d_getInstances, args)

    def getTableRows(self, *args):
        return self._obj.invoke("getTableRows", _0_org.asam.ods.QueryEvaluator._d_getTableRows, args)

    def getTable(self, *args):
        return self._obj.invoke("getTable", _0_org.asam.ods.QueryEvaluator._d_getTable, args)

    def createQuery(self, *args):
        return self._obj.invoke("createQuery", _0_org.asam.ods.QueryEvaluator._d_createQuery, args)

omniORB.registerObjref(QueryEvaluator._NP_RepositoryId, _objref_QueryEvaluator)
_0_org.asam.ods._objref_QueryEvaluator = _objref_QueryEvaluator
del QueryEvaluator, _objref_QueryEvaluator

# QueryEvaluator skeleton
__name__ = "org__POA.asam.ods"
class QueryEvaluator (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.QueryEvaluator._NP_RepositoryId


    _omni_op_d = {"getInstances": _0_org.asam.ods.QueryEvaluator._d_getInstances, "getTableRows": _0_org.asam.ods.QueryEvaluator._d_getTableRows, "getTable": _0_org.asam.ods.QueryEvaluator._d_getTable, "createQuery": _0_org.asam.ods.QueryEvaluator._d_createQuery}

QueryEvaluator._omni_skeleton = QueryEvaluator
_0_org__POA.asam.ods.QueryEvaluator = QueryEvaluator
omniORB.registerSkeleton(QueryEvaluator._NP_RepositoryId, QueryEvaluator)
del QueryEvaluator
__name__ = "org.asam.ods"

# interface Query
_0_org.asam.ods._d_Query = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/Query:1.0", "Query")
omniORB.typeMapping["IDL:org/asam/ods/Query:1.0"] = _0_org.asam.ods._d_Query
_0_org.asam.ods.Query = omniORB.newEmptyClass()
class Query :
    _NP_RepositoryId = _0_org.asam.ods._d_Query[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.Query = Query
_0_org.asam.ods._tc_Query = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_Query)
omniORB.registerType(Query._NP_RepositoryId, _0_org.asam.ods._d_Query, _0_org.asam.ods._tc_Query)

# Query operations and attributes
Query._d_getQueryEvaluator = ((), (omniORB.typeMapping["IDL:org/asam/ods/QueryEvaluator:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Query._d_prepareQuery = ((omniORB.typeMapping["IDL:org/asam/ods/NameValueSequence:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Query._d_executeQuery = ((omniORB.typeMapping["IDL:org/asam/ods/NameValueSequence:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Query._d_getStatus = ((), (omniORB.typeMapping["IDL:org/asam/ods/QueryStatus:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Query._d_getInstances = ((), (omniORB.typeMapping["IDL:org/asam/ods/InstanceElementIterator:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Query._d_getTableRows = ((), (omniORB.typeMapping["IDL:org/asam/ods/NameValueUnitSequenceIterator:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
Query._d_getTable = ((), (omniORB.typeMapping["IDL:org/asam/ods/NameValueSeqUnitSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# Query object reference
class _objref_Query (CORBA.Object):
    _NP_RepositoryId = Query._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getQueryEvaluator(self, *args):
        return self._obj.invoke("getQueryEvaluator", _0_org.asam.ods.Query._d_getQueryEvaluator, args)

    def prepareQuery(self, *args):
        return self._obj.invoke("prepareQuery", _0_org.asam.ods.Query._d_prepareQuery, args)

    def executeQuery(self, *args):
        return self._obj.invoke("executeQuery", _0_org.asam.ods.Query._d_executeQuery, args)

    def getStatus(self, *args):
        return self._obj.invoke("getStatus", _0_org.asam.ods.Query._d_getStatus, args)

    def getInstances(self, *args):
        return self._obj.invoke("getInstances", _0_org.asam.ods.Query._d_getInstances, args)

    def getTableRows(self, *args):
        return self._obj.invoke("getTableRows", _0_org.asam.ods.Query._d_getTableRows, args)

    def getTable(self, *args):
        return self._obj.invoke("getTable", _0_org.asam.ods.Query._d_getTable, args)

omniORB.registerObjref(Query._NP_RepositoryId, _objref_Query)
_0_org.asam.ods._objref_Query = _objref_Query
del Query, _objref_Query

# Query skeleton
__name__ = "org__POA.asam.ods"
class Query (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.Query._NP_RepositoryId


    _omni_op_d = {"getQueryEvaluator": _0_org.asam.ods.Query._d_getQueryEvaluator, "prepareQuery": _0_org.asam.ods.Query._d_prepareQuery, "executeQuery": _0_org.asam.ods.Query._d_executeQuery, "getStatus": _0_org.asam.ods.Query._d_getStatus, "getInstances": _0_org.asam.ods.Query._d_getInstances, "getTableRows": _0_org.asam.ods.Query._d_getTableRows, "getTable": _0_org.asam.ods.Query._d_getTable}

Query._omni_skeleton = Query
_0_org__POA.asam.ods.Query = Query
omniORB.registerSkeleton(Query._NP_RepositoryId, Query)
del Query
__name__ = "org.asam.ods"

# interface NameValueUnitSequenceIterator
_0_org.asam.ods._d_NameValueUnitSequenceIterator = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/NameValueUnitSequenceIterator:1.0", "NameValueUnitSequenceIterator")
omniORB.typeMapping["IDL:org/asam/ods/NameValueUnitSequenceIterator:1.0"] = _0_org.asam.ods._d_NameValueUnitSequenceIterator
_0_org.asam.ods.NameValueUnitSequenceIterator = omniORB.newEmptyClass()
class NameValueUnitSequenceIterator :
    _NP_RepositoryId = _0_org.asam.ods._d_NameValueUnitSequenceIterator[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.NameValueUnitSequenceIterator = NameValueUnitSequenceIterator
_0_org.asam.ods._tc_NameValueUnitSequenceIterator = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_NameValueUnitSequenceIterator)
omniORB.registerType(NameValueUnitSequenceIterator._NP_RepositoryId, _0_org.asam.ods._d_NameValueUnitSequenceIterator, _0_org.asam.ods._tc_NameValueUnitSequenceIterator)

# NameValueUnitSequenceIterator operations and attributes
NameValueUnitSequenceIterator._d_destroy = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameValueUnitSequenceIterator._d_getCount = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameValueUnitSequenceIterator._d_nextN = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/NameValueSeqUnitSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameValueUnitSequenceIterator._d_nextOne = ((), (omniORB.typeMapping["IDL:org/asam/ods/NameValueSeqUnit:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
NameValueUnitSequenceIterator._d_reset = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# NameValueUnitSequenceIterator object reference
class _objref_NameValueUnitSequenceIterator (CORBA.Object):
    _NP_RepositoryId = NameValueUnitSequenceIterator._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_org.asam.ods.NameValueUnitSequenceIterator._d_destroy, args)

    def getCount(self, *args):
        return self._obj.invoke("getCount", _0_org.asam.ods.NameValueUnitSequenceIterator._d_getCount, args)

    def nextN(self, *args):
        return self._obj.invoke("nextN", _0_org.asam.ods.NameValueUnitSequenceIterator._d_nextN, args)

    def nextOne(self, *args):
        return self._obj.invoke("nextOne", _0_org.asam.ods.NameValueUnitSequenceIterator._d_nextOne, args)

    def reset(self, *args):
        return self._obj.invoke("reset", _0_org.asam.ods.NameValueUnitSequenceIterator._d_reset, args)

omniORB.registerObjref(NameValueUnitSequenceIterator._NP_RepositoryId, _objref_NameValueUnitSequenceIterator)
_0_org.asam.ods._objref_NameValueUnitSequenceIterator = _objref_NameValueUnitSequenceIterator
del NameValueUnitSequenceIterator, _objref_NameValueUnitSequenceIterator

# NameValueUnitSequenceIterator skeleton
__name__ = "org__POA.asam.ods"
class NameValueUnitSequenceIterator (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.NameValueUnitSequenceIterator._NP_RepositoryId


    _omni_op_d = {"destroy": _0_org.asam.ods.NameValueUnitSequenceIterator._d_destroy, "getCount": _0_org.asam.ods.NameValueUnitSequenceIterator._d_getCount, "nextN": _0_org.asam.ods.NameValueUnitSequenceIterator._d_nextN, "nextOne": _0_org.asam.ods.NameValueUnitSequenceIterator._d_nextOne, "reset": _0_org.asam.ods.NameValueUnitSequenceIterator._d_reset}

NameValueUnitSequenceIterator._omni_skeleton = NameValueUnitSequenceIterator
_0_org__POA.asam.ods.NameValueUnitSequenceIterator = NameValueUnitSequenceIterator
omniORB.registerSkeleton(NameValueUnitSequenceIterator._NP_RepositoryId, NameValueUnitSequenceIterator)
del NameValueUnitSequenceIterator
__name__ = "org.asam.ods"

# interface EnumerationDefinition
_0_org.asam.ods._d_EnumerationDefinition = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/EnumerationDefinition:1.0", "EnumerationDefinition")
omniORB.typeMapping["IDL:org/asam/ods/EnumerationDefinition:1.0"] = _0_org.asam.ods._d_EnumerationDefinition
_0_org.asam.ods.EnumerationDefinition = omniORB.newEmptyClass()
class EnumerationDefinition :
    _NP_RepositoryId = _0_org.asam.ods._d_EnumerationDefinition[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.EnumerationDefinition = EnumerationDefinition
_0_org.asam.ods._tc_EnumerationDefinition = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_EnumerationDefinition)
omniORB.registerType(EnumerationDefinition._NP_RepositoryId, _0_org.asam.ods._d_EnumerationDefinition, _0_org.asam.ods._tc_EnumerationDefinition)

# EnumerationDefinition operations and attributes
EnumerationDefinition._d_listItemNames = ((), (omniORB.typeMapping["IDL:org/asam/ods/NameSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
EnumerationDefinition._d_getItem = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
EnumerationDefinition._d_getItemName = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
EnumerationDefinition._d_addItem = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
EnumerationDefinition._d_renameItem = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"]), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
EnumerationDefinition._d_getName = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
EnumerationDefinition._d_setName = ((omniORB.typeMapping["IDL:org/asam/ods/T_STRING:1.0"], ), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
EnumerationDefinition._d_getIndex = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# EnumerationDefinition object reference
class _objref_EnumerationDefinition (CORBA.Object):
    _NP_RepositoryId = EnumerationDefinition._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def listItemNames(self, *args):
        return self._obj.invoke("listItemNames", _0_org.asam.ods.EnumerationDefinition._d_listItemNames, args)

    def getItem(self, *args):
        return self._obj.invoke("getItem", _0_org.asam.ods.EnumerationDefinition._d_getItem, args)

    def getItemName(self, *args):
        return self._obj.invoke("getItemName", _0_org.asam.ods.EnumerationDefinition._d_getItemName, args)

    def addItem(self, *args):
        return self._obj.invoke("addItem", _0_org.asam.ods.EnumerationDefinition._d_addItem, args)

    def renameItem(self, *args):
        return self._obj.invoke("renameItem", _0_org.asam.ods.EnumerationDefinition._d_renameItem, args)

    def getName(self, *args):
        return self._obj.invoke("getName", _0_org.asam.ods.EnumerationDefinition._d_getName, args)

    def setName(self, *args):
        return self._obj.invoke("setName", _0_org.asam.ods.EnumerationDefinition._d_setName, args)

    def getIndex(self, *args):
        return self._obj.invoke("getIndex", _0_org.asam.ods.EnumerationDefinition._d_getIndex, args)

omniORB.registerObjref(EnumerationDefinition._NP_RepositoryId, _objref_EnumerationDefinition)
_0_org.asam.ods._objref_EnumerationDefinition = _objref_EnumerationDefinition
del EnumerationDefinition, _objref_EnumerationDefinition

# EnumerationDefinition skeleton
__name__ = "org__POA.asam.ods"
class EnumerationDefinition (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.EnumerationDefinition._NP_RepositoryId


    _omni_op_d = {"listItemNames": _0_org.asam.ods.EnumerationDefinition._d_listItemNames, "getItem": _0_org.asam.ods.EnumerationDefinition._d_getItem, "getItemName": _0_org.asam.ods.EnumerationDefinition._d_getItemName, "addItem": _0_org.asam.ods.EnumerationDefinition._d_addItem, "renameItem": _0_org.asam.ods.EnumerationDefinition._d_renameItem, "getName": _0_org.asam.ods.EnumerationDefinition._d_getName, "setName": _0_org.asam.ods.EnumerationDefinition._d_setName, "getIndex": _0_org.asam.ods.EnumerationDefinition._d_getIndex}

EnumerationDefinition._omni_skeleton = EnumerationDefinition
_0_org__POA.asam.ods.EnumerationDefinition = EnumerationDefinition
omniORB.registerSkeleton(EnumerationDefinition._NP_RepositoryId, EnumerationDefinition)
del EnumerationDefinition
__name__ = "org.asam.ods"

# interface ElemResultSetExtSeqIterator
_0_org.asam.ods._d_ElemResultSetExtSeqIterator = (omniORB.tcInternal.tv_objref, "IDL:org/asam/ods/ElemResultSetExtSeqIterator:1.0", "ElemResultSetExtSeqIterator")
omniORB.typeMapping["IDL:org/asam/ods/ElemResultSetExtSeqIterator:1.0"] = _0_org.asam.ods._d_ElemResultSetExtSeqIterator
_0_org.asam.ods.ElemResultSetExtSeqIterator = omniORB.newEmptyClass()
class ElemResultSetExtSeqIterator :
    _NP_RepositoryId = _0_org.asam.ods._d_ElemResultSetExtSeqIterator[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_org.asam.ods.ElemResultSetExtSeqIterator = ElemResultSetExtSeqIterator
_0_org.asam.ods._tc_ElemResultSetExtSeqIterator = omniORB.tcInternal.createTypeCode(_0_org.asam.ods._d_ElemResultSetExtSeqIterator)
omniORB.registerType(ElemResultSetExtSeqIterator._NP_RepositoryId, _0_org.asam.ods._d_ElemResultSetExtSeqIterator, _0_org.asam.ods._tc_ElemResultSetExtSeqIterator)

# ElemResultSetExtSeqIterator operations and attributes
ElemResultSetExtSeqIterator._d_destroy = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ElemResultSetExtSeqIterator._d_getCount = ((), (omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ElemResultSetExtSeqIterator._d_nextN = ((omniORB.typeMapping["IDL:org/asam/ods/T_LONG:1.0"], ), (omniORB.typeMapping["IDL:org/asam/ods/ElemResultSetExtSequence:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ElemResultSetExtSeqIterator._d_nextOne = ((), (omniORB.typeMapping["IDL:org/asam/ods/ElemResultSetExt:1.0"], ), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})
ElemResultSetExtSeqIterator._d_reset = ((), (), {_0_org.asam.ods.AoException._NP_RepositoryId: _0_org.asam.ods._d_AoException})

# ElemResultSetExtSeqIterator object reference
class _objref_ElemResultSetExtSeqIterator (CORBA.Object):
    _NP_RepositoryId = ElemResultSetExtSeqIterator._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_org.asam.ods.ElemResultSetExtSeqIterator._d_destroy, args)

    def getCount(self, *args):
        return self._obj.invoke("getCount", _0_org.asam.ods.ElemResultSetExtSeqIterator._d_getCount, args)

    def nextN(self, *args):
        return self._obj.invoke("nextN", _0_org.asam.ods.ElemResultSetExtSeqIterator._d_nextN, args)

    def nextOne(self, *args):
        return self._obj.invoke("nextOne", _0_org.asam.ods.ElemResultSetExtSeqIterator._d_nextOne, args)

    def reset(self, *args):
        return self._obj.invoke("reset", _0_org.asam.ods.ElemResultSetExtSeqIterator._d_reset, args)

omniORB.registerObjref(ElemResultSetExtSeqIterator._NP_RepositoryId, _objref_ElemResultSetExtSeqIterator)
_0_org.asam.ods._objref_ElemResultSetExtSeqIterator = _objref_ElemResultSetExtSeqIterator
del ElemResultSetExtSeqIterator, _objref_ElemResultSetExtSeqIterator

# ElemResultSetExtSeqIterator skeleton
__name__ = "org__POA.asam.ods"
class ElemResultSetExtSeqIterator (PortableServer.Servant):
    _NP_RepositoryId = _0_org.asam.ods.ElemResultSetExtSeqIterator._NP_RepositoryId


    _omni_op_d = {"destroy": _0_org.asam.ods.ElemResultSetExtSeqIterator._d_destroy, "getCount": _0_org.asam.ods.ElemResultSetExtSeqIterator._d_getCount, "nextN": _0_org.asam.ods.ElemResultSetExtSeqIterator._d_nextN, "nextOne": _0_org.asam.ods.ElemResultSetExtSeqIterator._d_nextOne, "reset": _0_org.asam.ods.ElemResultSetExtSeqIterator._d_reset}

ElemResultSetExtSeqIterator._omni_skeleton = ElemResultSetExtSeqIterator
_0_org__POA.asam.ods.ElemResultSetExtSeqIterator = ElemResultSetExtSeqIterator
omniORB.registerSkeleton(ElemResultSetExtSeqIterator._NP_RepositoryId, ElemResultSetExtSeqIterator)
del ElemResultSetExtSeqIterator
__name__ = "org.asam.ods"

#
# End of module "org.asam.ods"
#
__name__ = "org.asam"


#
# End of module "org.asam"
#
__name__ = "org"


#
# End of module "org"
#
__name__ = "ods52_idl"

_exported_modules = ( "org", "org.asam", "org.asam.ods")

# The end.
